(:action go
    :parameters (?player - player ?dir - direction ?loc1 - location ?loc2 - location)
    :precondition (and (at ?player ?loc1) (connected ?loc1 ?dir ?loc2))
    :effect (and (not (at ?player ?loc1)) (at ?player ?loc2))
)

(:action get
    :parameters (?player - player ?item - item ?loc - location)
    :precondition (and (at ?player ?loc) (at ?item ?loc))
    :effect (and (not (at ?item ?loc)) (inventory ?player ?item))
)

(:action drop
    :parameters (?player - player ?item - item ?loc - location)
    :precondition (and (at ?player ?loc) (inventory ?player ?item))
    :effect (and (not (inventory ?player ?item)) (at ?item ?loc))
)

(:action cook
    :parameters (?player - player ?food - food ?loc - location)
    :precondition (and (at ?player ?loc) (has_kitchen ?loc) (inventory ?player ?food))
    :effect (cooked ?food)
)

(:action order_sushi
    :parameters (?player - player)
    :precondition (inventory ?player)
    :effect (and (prepared ?food - food) (ordered ?food))
)

(:action buy_sake
    :parameters (?player - player)
    :effect (and (inventory ?player ?drink - drink) (purchased ?drink))
)

(:action serve
    :parameters (?player - player ?item - item ?guest - object)
    :precondition (and (inventory ?player ?item) (at ?guest ?loc - location))
    :effect (and (not (inventory ?player ?item)) (served ?guest ?item))
)

(:action brew
    :parameters (?player - player ?drink - drink)
    :precondition (and (inventory ?player ?drink))
    :effect (brewed ?drink)
)

(:action get_beer
    :parameters (?player - player)
    :effect (and (inventory ?player ?drink - drink) (got_beer ?drink))
)

(:action open
    :parameters (?player - player ?drink - drink)
    :precondition (and (inventory ?player ?drink))
    :effect (opened ?drink)
)

(:action hang_lantern
    :parameters (?player - player ?lamp - item)
    :precondition (and (inventory ?player ?lamp))
    :effect (hung ?lamp)
)

(:action blow_balloon
    :parameters (?player - player ?balloon - item)
    :precondition (and (inventory ?player ?balloon))
    :effect (inflated ?balloon)
)

(:action turn_on_tv
    :parameters (?player - player ?tv - item ?loc - location)
    :precondition (and (at ?player ?loc) (at ?tv ?loc))
    :effect (on ?tv)
)

)