(:action go
   :parameters (?player - player ?loc1 - location ?dir - direction ?loc2 - location)
   :precondition (and (at ?player ?loc1)
                      (connected ?loc1 ?dir ?loc2)
                      (not (blocked ?loc1 ?dir ?loc2)))
   :effect (and (at ?player ?loc2)
                (not (at ?player ?loc1))))
(:action get
   :parameters (?player - player ?item - item ?loc - location)
   :precondition (and (at ?player ?loc)
                      (at ?item ?loc))
   :effect (and (inventory ?player ?item)
                (not (at ?item ?loc))))

(:action get_grass
   :parameters (?player - player ?grass - grass ?loc - location)
   :precondition (and (at ?player ?loc)
                      (at ?grass ?loc)
                      (not (dry ?grass)))
   :effect (and (inventory ?player ?grass)
                (not (at ?grass ?loc))))

(:action dry_grass
   :parameters (?player - player ?grass - grass)
   :precondition (and (inventory ?player ?grass)
                      (not (dry ?grass)))
   :effect (dry ?grass))

(:action cluster_grass
   :parameters (?player - player ?grass - grass ?tinder - tinder)
   :precondition (and (inventory ?player ?grass)
                      (dry ?grass))
   :effect (and (inventory ?player ?tinder)
                (not (inventory ?player ?grass))))

(:action break_branch
   :parameters (?player - player ?loc - location ?branch - branch ?kindling - kindling)
   :precondition (and (at ?player ?loc)
                      (has_large_dry_branch ?loc)
                      (not (inventory ?player ?kindling)))
   :effect (inventory ?player ?kindling))

(:action log_oak
   :parameters (?player - player ?loc - location ?log - log)
   :precondition (and (at ?player ?loc)
                      (has_dry_oak ?loc))
   :effect (and (inventory ?player ?log)
                (not (has_dry_oak ?loc))))

(:action get_log
   :parameters (?player - player ?loc - location ?log - log)
   :precondition (and (at ?player ?loc)
                      (at ?log ?loc))
   :effect (and (inventory ?player ?log)
                (not (at ?log ?loc))))

(:action stack_log
   :parameters (?player - player ?log - log ?fuel - fuel)
   :precondition (and (inventory ?player ?log)
                      (dry ?log))
   :effect (and (inventory ?player ?fuel)
                (not (inventory ?player ?log))))

(:action build_teepee
   :parameters (?player - player ?tinder - tinder ?kindling - kindling ?fuel - fuel ?teepee - teepee ?loc - location)
   :precondition (and (at ?player ?loc)
                      (has_dry_even_area ?loc)
                      (inventory ?player ?tinder)
                      (inventory ?player ?kindling)
                      (inventory ?player ?fuel))
   :effect (and (at ?teepee ?loc)
                (not (inventory ?player ?tinder))
                (not (inventory ?player ?kindling))
                (not (inventory ?player ?fuel))))

(:action get_wood
   :parameters (?player - player ?loc - location ?wood - wood)
   :precondition (and (at ?player ?loc)
                      (at ?wood ?loc))
   :effect (and (inventory ?player ?wood)
                (not (at ?wood ?loc))))

(:action get_branch
   :parameters (?player - player ?loc - location ?branch - branch)
   :precondition (and (at ?player ?loc)
                      (at ?branch ?loc))
   :effect (and (inventory ?player ?branch)
                (not (at ?branch ?loc))))

(:action ignite_wood
   :parameters (?player - player ?wood - wood)
   :precondition (and (inventory ?player ?wood)
                      (not (ignited ?wood)))
   :effect (ignited ?wood))

(:action ignite_teepee
   :parameters (?player - player ?ignitedWood - wood ?teepee - teepee ?loc - location)
   :precondition (and (at ?player ?loc)
                      (at ?teepee ?loc)
                      (inventory ?player ?ignitedWood)
                      (ignited ?ignitedWood))
   :effect (ignited ?teepee))

(:action get_pot
   :parameters (?player - player ?loc - location ?pot - pot)
   :precondition (and (at ?player ?loc)
                      (at ?pot ?loc))
   :effect (and (inventory ?player ?pot)
                (not (at ?pot ?loc))))

(:action get_water
   :parameters (?player - player ?loc - location ?water - water ?pot - pot)
   :precondition (and (at ?player ?loc)
                      (has_pond ?loc)
                      (inventory ?player ?pot))
   :effect (and (inventory ?player ?water)
                (not (boiled ?water))))

(:action boil_water
   :parameters (?player - player ?loc - location ?water - water ?teepee - teepee ?pot - pot)
   :precondition (and (at ?player ?loc)
                      (inventory ?player ?water)
                      (inventory ?player ?pot)
                      (at ?teepee ?loc)
                      (ignited ?teepee)
                      (not (boiled ?water)))
   :effect (boiled ?water))

)