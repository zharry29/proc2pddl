(:action go
   :parameters (?p - player ?dir - direction ?loc1 - location ?loc2 - location)
   :precondition (and (at ?p ?loc1) 
                      (connected ?loc1 ?dir ?loc2)
                      (not (blocked ?loc1 ?dir ?loc2)))
   :effect (and (not (at ?p ?loc1)) 
                (at ?p ?loc2)))

(:action get
   :parameters (?p - player ?item - item ?loc - location)
   :precondition (and (at ?p ?loc)
                      (at ?item ?loc)
                      (not (inventory ?p ?item)))
   :effect (and (not (at ?item ?loc))
                (inventory ?p ?item)))

(:action get_water
   :parameters (?p - player ?loc - location ?water - water)
   :precondition (and (at ?p ?loc) 
                      (has_water_source ?loc))
   :effect (inventory ?p ?water))

(:action strain_water
   :parameters (?p - player ?water - water ?cloth - cloth)
   :precondition (and (inventory ?p ?water)
                      (inventory ?p ?cloth)
                      (not (strained ?water)))
   :effect (strained ?water))

(:action boil_water
   :parameters (?p - player ?water - water ?container - container)
   :precondition (and (inventory ?p ?water)
                      (inventory ?p ?container)
                      (has_fire ?p))
   :effect (treated ?water))

(:action purify_in_sunlight
   :parameters (?p - player ?water - water ?container - container)
   :precondition (and (inventory ?p ?water)
                      (inventory ?p ?container))
   :effect (treated ?water))

(:action get_long_branch
   :parameters (?p - player ?loc - location ?br - long_branch)
   :precondition (and (at ?p ?loc)
                      (has_branches ?loc))
   :effect (inventory ?p ?br))

(:action get_propped_branches
   :parameters (?p - player ?loc - location ?br - propped_branches)
   :precondition (and (at ?p ?loc)
                      (has_branches ?loc))
   :effect (inventory ?p ?br))

(:action get_twigs_leaves
   :parameters (?p - player ?loc - location ?tl - twigs_leaves)
   :precondition (and (at ?p ?loc)
                      (has_twigs_leaves ?loc))
   :effect (inventory ?p ?tl))

(:action build_shelter
   :parameters (?p - player ?lb - long_branch ?pb - propped_branches ?tl - twigs_leaves)
   :precondition (and (inventory ?p ?lb)
                      (inventory ?p ?pb)
                      (inventory ?p ?tl)
                      (not (has_shelter ?p)))
   :effect (has_shelter ?p))

(:action get_logs
   :parameters (?p - player ?loc - location ?logs - logs)
   :precondition (and (at ?p ?loc)
                      (has_logs ?loc))
   :effect (inventory ?p ?logs))

(:action get_dry_materials
   :parameters (?p - player ?loc - location ?dm - object)
   :precondition (and (at ?p ?loc))
   :effect (inventory ?p ?dm))

(:action build_teepee
   :parameters (?p - player ?dm - object ?logs - logs ?teepee - teepee)
   :precondition (and (inventory ?p ?dm)
                      (inventory ?p ?logs))
   :effect (inventory ?p ?teepee))

(:action start_fire
   :parameters (?p - player ?teepee - teepee)
   :precondition (and (inventory ?p ?teepee)
                      (not (has_fire ?p)))
   :effect (has_fire ?p))

)