(:action go
 :parameters (?player - player ?dir - direction ?loc1 - location ?loc2 - location)
 :precondition (and (connected ?loc1 ?dir ?loc2) (not (blocked ?loc1 ?dir ?loc2)))
 :effect (and (not (at ?player ?loc1)) (at ?player ?loc2))
)

(:action get_bag
 :parameters (?player - player ?bag - bag ?loc - location)
 :precondition (and (at ?player ?loc) (sells_bags ?loc) (at ?bag ?loc))
 :effect (and (not (at ?bag ?loc)) (inventory ?player ?bag))
)

(:action get_stationery
 :parameters (?player - player ?stationery - item ?loc - location)
 :precondition (and (at ?player ?loc) (sells_stationery ?loc) (at ?stationery ?loc)) 
 :effect (and (not (at ?stationery ?loc)) (inventory ?player ?stationery))
)

(:action get_costume
 :parameters (?player - player ?costume - costume ?loc - location)
 :precondition (and (at ?player ?loc) (sells_costume ?loc) (at ?costume ?loc))
 :effect (and (not (at ?costume ?loc)) (inventory ?player ?costume))
)

(:action wear_detective_gear
 :parameters (?player - player ?costume - costume)
 :precondition (inventory ?player ?costume)
 :effect (wear ?player ?costume)
)

(:action find_supplies_for_disguise
 :parameters (?player - player)
 :precondition ()
 :effect () ; fill this based on what disguise requires
)

(:action wear_disguise
 :parameters (?player - player ?disguise - disguise)
 :precondition ()
 :effect () ; fill this based on what disguise changes
)

(:action make_badge
 :parameters (?player - player ?badge - badge ?foil - aluminium_foil ?cardboard - cardboard)
 :precondition (and (inventory ?player ?foil) (inventory ?player ?cardboard)) 
 :effect (inventory ?player ?badge)
)

(:action prepare_detective_notebook
 :parameters (?player - player ?notebook - notebook ?pen - pen)
 :precondition (and (inventory ?player ?notebook) (inventory ?player ?pen))
 :effect (inventory ?player ?detective_notebook)
)

(:action get_walkie_talkies
 :parameters (?player - player ?walkie_talkies - walkie_talkies ?loc - location)
 :precondition (and (at ?player ?loc) (sells_electronics ?loc) (at ?walkie_talkies ?loc))
 :effect (and (not (at ?walkie_talkies ?loc)) (inventory ?player ?walkie_talkies))
)

(:action prepare_detective_kit
 :parameters (?player - player ?bag - bag ?kit - detective_kit)
 :precondition (inventory ?player ?bag) 
 :effect (inventory ?player ?detective_kit)
)

)