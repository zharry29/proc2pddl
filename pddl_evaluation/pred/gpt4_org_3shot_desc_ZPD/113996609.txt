(:action go
   :parameters  (?player - player ?dir - direction ?loc1 ?loc2 - location)
   :precondition  (and (at ?player ?loc1) (connected ?loc1 ?dir ?loc2))
   :effect  (and (not (at ?player ?loc1)) (at ?player ?loc2))
)
(:action get
   :parameters  (?player - player ?item - item ?loc - location)
   :precondition  (and (at ?player ?loc) (at ?item ?loc))
   :effect  (and (not(at ?item ?loc)) (inventory ?player ?item))
)

(:action get_water
   :parameters  (?player - player ?water - water ?loc - location)
   :precondition  (and (at ?player ?loc) (has_water_source ?loc))
   :effect  (inventory ?player ?water)
)

(:action chop_wood
   :parameters  (?player - player ?wood - wood ?loc - location)
   :precondition  (and (at ?player ?loc) (has_wood ?loc))
   :effect  (inventory ?player ?wood)
)

(:action carve_groove
   :parameters  (?player - player ?wood - wood)
   :precondition  (inventory ?player ?wood)
   :effect  (groove ?wood)
)

(:action light_fire
   :parameters  (?player - player ?wood - wood ?loc - location)
   :precondition  (and (at ?player ?loc) (groove ?wood) (can_light_fire ?loc) (inventory ?player ?wood))
   :effect  (has_fire ?loc)
)

(:action build_shelter
   :parameters  (?player - player ?location - location ?wood - wood)
   :precondition  (and (at ?player ?location) (is_safe ?location) (inventory ?player ?wood))
   :effect  (has_shelter ?location)
)

(:action clean_water
   :parameters  (?player - player ?water - water ?fire_source - location )
   :precondition  (and (at ?player ?fire_source) (has_fire ?fire_source) (inventory ?player ?water))
   :effect  (and (not (inventory ?player ?water)) (treated ?water))
)

(:action drink_water
   :parameters (?player - player ?water - water)
   :precondition (and (inventory ?player ?water) (treated ?water))
   :effect (drank ?water)
)

(:action find_other_survivors
   :parameters (?player - player ?survivor - survivor)
   :precondition (attend ?player)
   :effect (has_friend ?survivor)
)

(:action build_raft
   :parameters (?player - player ?wood - wood ?vines - vines)
   :precondition (and (inventory ?player ?wood) (inventory ?player ?vines))
   :effect (has_escaped ?player)
)

(:action make_weapon
  :parameters (?player - player ?wood - wood)
  :precondition (inventory ?player ?wood)
  :effect (inventory ?player ?spear)
)
(:action hunt_fish
  :parameters (?player - player ?location - location ?spear - spear)
  :precondition (and (inventory ?player ?spear) (at ?player ?location) (has_fish ?location))
  :effect (inventory ?player ?fish)
)

(:action cook_fish
    :parameters (?player - player ?fish - fish ?fire_source - location)
    :precondition (and (inventory ?player ?fish) (at ?player ?fire_source) (has_fire ?fire_source))
    :effect (and (not (inventory ?player ?fish)) (cooked ?fish) (inventory ?player ?fish))
)

)