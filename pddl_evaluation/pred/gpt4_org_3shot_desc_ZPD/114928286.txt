(:action go
 :parameters (?player - player ?start - location ?end - location ?dir - direction)
 :precondition (and (at ?player ?start) (connected ?start ?dir ?end) (not (blocked ?start ?dir ?end)))
 :effect (and (not (at ?player ?start)) (at ?player ?end)))

 (:action get
 :parameters (?player - player ?item - item ?loc - location)
 :precondition (and (at ?player ?loc) (at ?item ?loc) (is_gettable ?item))
 :effect (and (not (at ?item ?loc)) (inventory ?player ?item)))

 (:action lay_masking_tape
 :parameters (?player - player ?masking_tape - masking_tape ?object - object)
 :precondition (and (inventory ?player ?masking_tape) (is_long ?object) (is_straight ?object) (is_hard ?object) (is_stiff ?object))
 :effect (and (has_ten_strips ?object ?masking_tape) (not (inventory ?player ?masking_tape))))

 (:action make_tosses_column
 :parameters (?player - player ?paper - paper ?pen - pen)
 :precondition (and (inventory ?player ?pen) (at ?player ?loc) (at ?paper ?loc))
 :effect (tosses_column ?paper))

 (:action make_crosses_column
 :parameters (?player - player ?paper - paper ?pen - pen)
 :precondition (and (inventory ?player ?pen) (at ?player ?loc) (at ?paper ?loc))
 :effect (crosses_column ?paper))

 (:action thaw_food
  :parameters (?player - player ?food_item - food_item)
  :precondition (and (inventory ?player ?food_item) (frozen ?food_item))
  :effect (not (frozen ?food_item)))

 (:action throw
 :parameters (?player - player ?food_item - food_item ?loc - location)
 :precondition (and (inventory ?player ?food_item) (not (frozen ?food_item)) (at ?player ?loc))
 :effect (and (not (inventory ?player ?food_item)) (thrown_food_items ?loc)))

 (:action record_tosses
  :parameters (?player - player ?paper - paper ?pen - pen)
  :precondition (and (inventory ?player ?pen) (at ?player ?loc) (at ?paper ?loc) (tosses_column ?paper))
  :effect (tosses_recorded ?paper))

 (:action record_crosses
  :parameters (?player - player ?paper - paper ?pen - pen)
  :precondition (and (inventory ?player ?pen) (at ?player ?loc) (at ?paper ?loc) (crosses_column ?paper))
  :effect (crosses_recorded ?paper))

 (:action divide_crosses
 :parameters (?player - player ?paper - paper ?pen - pen)
 :precondition (and (inventory ?player ?pen) (at ?player ?loc) (at ?paper ?loc) (crosses_recorded ?paper))
 :effect (crosses_divided ?paper))

 (:action calculate_pi
 :parameters (?player - player ?paper - paper)
 :precondition (and (at ?player ?loc) (at ?paper ?loc) (tosses_recorded ?paper) (crosses_divided ?paper))
 :effect (calculated_pi ?player))

 (:action be_amazed
 :parameters (?player - player)
 :precondition (calculated_pi ?player)
 :effect (amazed ?player))

)