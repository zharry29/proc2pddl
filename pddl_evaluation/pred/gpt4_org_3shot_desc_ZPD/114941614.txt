(:action go
   :parameters (?p - player ?from - location ?to - location ?dir - direction)
   :precondition (and (at ?p ?from) (connected ?from ?dir ?to) (not (blocked ?from ?dir ?to)))
   :effect (and (not (at ?p ?from)) (at ?p ?to))
)

(:action get
   :parameters (?p - player ?item - item ?loc - location)
   :precondition (and (at ?p ?loc) (at ?item ?loc))
   :effect (and (not (at ?item ?loc)) (inventory ?p ?item))
)

(:action make_fire
   :parameters (?p - player ?fuel - fuel ?igniter - igniter ?loc - location)
   :precondition (and (inventory ?p ?igniter) (inventory ?p ?fuel) (at ?p ?loc) (not (has_fire ?loc)))
   :effect (has_fire ?loc)
)

(:action build_shelter
   :parameters (?p - player ?loc - location)
   :precondition (and (inventory ?p leaves) (inventory ?p sticks) (at ?p ?loc) (not (has_shelter ?loc)))
   :effect (has_shelter ?loc)
)

(:action collect_water
   :parameters (?p - player ?container - container ?loc - location)
   :precondition (and (at ?p ?loc) (at ?container ?loc) (has_water_source ?loc) (not (is_full ?container)))
   :effect (and (contains ?container water) (is_full ?container))
)

(:action gather_sticks
   :parameters (?p - player ?loc - location)
   :precondition (and (at ?p ?loc) (has_sticks ?loc))
   :effect (inventory ?p sticks)
)

(:action boil_water
   :parameters (?p - player ?container - container ?loc - location)
   :precondition (and (at ?p ?loc) (at ?container ?loc) (has_fire ?loc) (is_full ?container) (is_contaminated water))
   :effect (not (is_contaminated water))
)

(:action cook_food
   :parameters (?p - player ?food - food ?loc - location)
   :precondition (and (at ?p ?loc) (at ?food ?loc) (has_fire ?loc) (is_contaminated ?food))
   :effect (not (is_contaminated ?food))
)

(:action eat_poisoned_food
   :parameters (?p - player ?food - food)
   :precondition (and (inventory ?p ?food) (is_poisonous ?food))
   :effect (and (not (is_hungry ?p)) (is_sick ?p) (not (inventory ?p ?food)))
)

(:action eat_contaminated_food
   :parameters (?p - player ?food - food)
   :precondition (and (inventory ?p ?food) (is_contaminated ?food))
   :effect (and (not (is_hungry ?p)) (is_sick ?p) (not (inventory ?p ?food)))
)

(:action eat_food
   :parameters (?p - player ?food - food)
   :precondition (and (inventory ?p ?food) (not (is_contaminated ?food)) (not (is_poisonous ?food)))
   :effect (and (not (is_hungry ?p)) (not (inventory ?p ?food)))
)

(:action drink_contaminated_water
   :parameters (?p - player ?container - container)
   :precondition (and (inventory ?p ?container) (is_full ?container) (is_contaminated water))
   :effect (and (not (is_thirsty ?p)) (is_sick ?p) (not (is_full ?container)) (not (contains ?container water)))
)

(:action drink_water
   :parameters (?p - player ?container - container)
   :precondition (and (inventory ?p ?container) (is_full ?container) (not (is_contaminated water)))
   :effect (and (not (is_thirsty ?p)) (not (is_full ?container)) (not (contains ?container water)))
)

(:action build_shelter
   :parameters (?p - player ?loc - location)
   :precondition (and (at ?p ?loc) (inventory ?p sticks) (inventory ?p leaves) (not (has_shelter ?loc)))
   :effect (has_shelter ?loc)
)

(:action sleep_in_shelter
   :parameters (?p - player ?loc - location)
   :precondition (and (at ?p ?loc) (has_shelter ?loc) (is_tired ?p))
   :effect (not (is_tired ?p))
)

)