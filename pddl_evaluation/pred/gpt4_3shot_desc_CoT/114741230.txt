(:action go
    :parameters (?player - player ?loc1 - location ?loc2 - location ?dir - direction)
    :precondition (and 
        (at ?player ?loc1) 
        (connected ?loc1 ?dir ?loc2)
        (not (blocked ?loc1 ?dir ?loc2)))
    :effect (and 
        (not (at ?player ?loc1)) 
        (at ?player ?loc2)))

(:action understand
 :parameters (?p - player ?c - concept)
 :precondition (know ?p ?c)
 :effect (know ?p ?c))

(:action learn
 :parameters (?p - player ?s - skill)
 :precondition ()
 :effect (learned ?p ?s))

(:action reached_the_remote_system
 :parameters (?p - player ?s - digital_system)
 :precondition (at ?p ?s)
 :effect (reached_target_system ?p))
(:action run_port_scan
 :parameters (?p - player ?s - digital_system ?tool - network_scanner)
 :precondition (and (at ?p ?s) (has ?p ?tool))
 :effect (port_scanned ?p ?tool))
(:action found_path_in_system
 :parameters (?p - player ?s - digital_system)
 :precondition (port_scanned ?p ?s)
 :effect (path_in_system_found ?p ?s))
(:action contact_and_trick_a_user
 :parameters (?p - player ?user - person)
 :precondition (learned ?p social_engineering)
 :effect (tricked ?user))
(:action crack_password_by_social_engineering
 :parameters (?p - player ?user - person)
 :precondition (tricked ?user)
 :effect (password_cracked ?p ?user))
(:action send_fake_email
 :parameters (?p - player ?user - person)
 :precondition (and (learned ?p phishing) (at ?p ?user))
 :effect (user_trusted_fake_email ?user))
(:action crack_password_by_phishing
 :parameters (?p - player ?user - person)
 :precondition (user_trusted_fake_email ?user)
 :effect (password_cracked ?p ?user))
(:action create_fake_wifi_access
 :parameters (?p - player)
 :precondition (learned ?p arp_spoofing)
 :effect (people_use_unencrypted_connection ?p))
(:action crack_password_by_arp_spoofing
 :parameters (?p - player ?user - person)
 :precondition (people_use_unencrypted_connection ?user)
 :effect (password_cracked ?p ?user))
(:action crack_password_by_brute_force
 :parameters (?p - player ?user - person)
 :precondition (learned ?p brute_force)
 :effect (password_cracked ?p ?user))
(:action gain_access_with_password
 :parameters (?p - player ?s - digital_system ?user - person)
 :precondition (password_cracked ?p ?user)
 :effect (authorized ?p ?s))

(:action create_buffer_overflow
 :parameters (?p - player)
 :precondition (learned ?p assembly)
 :effect (created_buffer_overflow ?p))
(:action take_control_of_system
 :parameters (?p - player ?s - digital_system)
 :precondition (and (authorized ?p ?s) (created_buffer_overflow ?p))
 :effect (is_root_user ?p ?s))
(:action install_malware
 :parameters (?p - player ?s - digital_system ?m - malware)
 :precondition (is_root_user ?p ?s)
 :effect (installed ?p ?m ?s))
(:action bypass_standard_authentication_system
 :parameters (?p - player ?s - digital_system)
 :precondition (is_root_user ?p ?s)
 :effect (bypassed_auth ?p ?s))
(:action not_let_administrator_know
 :parameters (?p - player ?s - digital_system)
 :precondition (is_root_user ?p ?s)
 :effect (not_detected ?p))
(:action make_no_change_to_website
 :parameters (?p - player ?w - website)
 :precondition (and (bypassed_auth ?p ?s) (is ?p ?w))
 :effect (unchanged ?w))
(:action create_fewest_file
 :parameters (?p - player)
 :precondition (is_root_user ?p ?s)
 :effect (few_files_created ?p))
(:action delete_additional_users
 :parameters (?p - player ?s - digital_system)
 :precondition (and (is_root_user ?p ?s) (additional_users ?p ?s))
 :effect (not (additional_users ?p ?s)))
(:action hardcode_password
 :parameters (?p - player ?s - digital_system ?pw - password)
 :precondition (is_root_user ?p ?s)
 :effect (hardcoded ?pw ?s))
(:action track_covered
 :parameters (?p - player)
 :precondition (is_root_user ?p ?s)
 :effect (tracks_covered ?p ?s))

(:action learn_concepts
 :parameters (?p - player ?c - concept)
 :precondition ()
 :effect (learned ?p ?c))
(:action learn_internet
 :parameters (?p - player ?s - skill)
 :precondition ()
 :effect (know_internet ?p))
(:action learn_programming
 :parameters (?p - player ?s - skill)
 :precondition ()
 :effect (know_programming ?p))
(:action learn_unix
 :parameters (?p - player ?s - skill)
 :precondition ()
 :effect (know_unix ?p))
(:action become_skilled
 :parameters (?p - player ?s - skill)
 :precondition ()
 :effect (learned ?p ?s))

(:durative-action install_backdoor
 :parameters (?p - player ?s - digital_system ?t - tool)
     (over all (is_root_user ?p ?s)) 
     (over all (know ?p hacking))
     (over all (has ?p ?t)))
 :effect (has_backdoor ?s))

(:action man_in_the_middle_attack
 :parameters (?p - player ?m1 - mobile_phone ?m2 - mobile_phone ?i - item)
 :precondition (and 
     (connected_wifi ?m1 ?i) (connected_wifi ?m2 ?i) 
     (learned ?p hacking)) 
 :effect (and 
     (intercepted_data ?p ?m1 ?m2) 
     (not (know ?m1 intercepted)) 
     (not (know ?m2 intercepted))))

(:action apply_patch
 :parameters (?p - player ?s - digital_system ?pa - patch)
 :precondition (and 
     (is_root_user ?p ?s) 
     (inventory ?p ?pa)
     (applicable ?pa ?s)) 
 :effect (patched ?s ?pa))

(:action remove_malware
 :parameters (?p - player ?s - digital_system ?m - malware)
 :precondition (and 
     (is_root_user ?p ?s) 
     (installed ?m ?s)) 
 :effect (not (installed ?m ?s)))

(:action wipe_logs
 :parameters (?p - player ?s - digital_system)
 :precondition (is_root_user ?p ?s) 
 :effect (and 
     (logs_wiped ?s) 
     (not (tracks_covered ?p ?s))))

)