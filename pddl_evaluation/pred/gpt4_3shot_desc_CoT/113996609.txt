(:action go
     :parameters (?player - player ?loc1 - location ?dir - direction ?loc2 - location)
     :precondition (and (at ?player ?loc1) (connected ?loc1 ?dir ?loc2))
     :effect (and (not (at ?player ?loc1)) (at ?player ?loc2)))

    (:action get
     :parameters (?player - player ?item - item ?loc - location)
     :precondition (and (at ?player ?loc) (at ?item ?loc))
     :effect (and (inventory ?player ?item)))

    (:action get_water
     :parameters (?player - player ?water - water ?loc - location)
     :precondition (and (at ?player ?loc) (at ?water ?loc) (has_water_source ?loc))
     :effect (and (inventory ?player ?water)))

    (:action chop_wood
     :parameters (?player - player ?wood - wood ?loc - location)
     :precondition (and (at ?player ?loc) (at ?wood ?loc) (has_wood ?loc))
     :effect (and (inventory ?player ?wood)))

    (:action carve_groove
     :parameters (?player - player ?wood - wood)
     :precondition (and (inventory ?player ?wood))
     :effect (and (groove ?wood)))

    (:action light_fire
     :parameters (?player - player ?loc - location)
     :precondition (and (at ?player ?loc) (can_light_fire ?loc))
     :effect (and (has_fire ?loc)))

    (:action build_shelter
     :parameters (?player - player ?loc - location)
     :precondition (and (at ?player ?loc) (is_safe ?loc))
     :effect (and (has_shelter ?loc)))

    (:action clean_water
     :parameters (?player - player ?water - water ?fire - fire)
     :precondition (and (inventory ?player ?water) (has_fire ?fire))
     :effect (and (treated ?water)))

    (:action drink_water
     :parameters (?player - player ?water - water)
     :precondition (and (inventory ?player ?water) (treated ?water))
     :effect (and (drank ?water) (not (inventory ?player ?water))))

    (:action find_other_survivors
     :parameters (?player - player ?survivor - survivor ?loc - location)
     :precondition (and (at ?player ?loc) (at ?survivor ?loc))
     :effect (and (has_friend ?survivor)))

    (:action build_raft
     :parameters (?player - player ?raft - raft)
     :precondition (inventory ?player ?raft)
     :effect (and (has_escaped ?player)))

    (:action make_weapon
     :parameters (?player - player ?spear - spear)
     :precondition (inventory ?player ?spear)
     :effect (and (inventory ?player ?spear)))

    (:action hunt_fish
     :parameters (?player - player ?fish - fish ?loc - location ?spear - spear)
     :precondition (and (at ?player ?loc) (at ?fish ?loc) (has_fish ?loc) (inventory ?player ?spear))
     :effect (and (not (at ?fish ?loc)) (inventory ?player ?fish)))

    (:action cook_fish
     :parameters (?player - player ?fish - fish)
     :precondition (and (inventory ?player ?fish))
     :effect (and (cooked ?fish)))

)