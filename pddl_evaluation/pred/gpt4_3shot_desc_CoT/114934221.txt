(:action go
  :parameters (?player ?dir - direction ?loc1 ?loc2 - location)
  :precondition (and (at ?player ?loc1) 
                             (connected ?loc1 ?dir ?loc2)
                             (not (blocked ?loc1 ?dir ?loc2)))
 :effect (and 
             (not (at ?player ?loc1))
             (at ?player ?loc2)
             (when (has_quicksand ?loc2)
                    (stuck ?player ?loc2))
             (when (has_ripples ?loc2)
                    (not (calm ?player))
                    (tired ?player))
 )

(:action get
  :parameters (?player ?item)
  :precondition (and (at ?player ?loc)
                             (at ?item ?loc))
  :effect (and
                (not (at ?item ?loc))
                (inventory ?player ?item)
   )
)

(:action breathe
  :parameters (?player)
  :precondition (not (calm ?player))
  :effect (calm ?player)
)

(:action liedown
  :parameters (?player)
  :precondition (not (laying ?player))
  :effect (laying ?player)
)

(:action swim
  :parameters (?player ?quicksand)
  :precondition (and (stuck ?player ?quicksand) (laying ?player) (calm ?player))
  :effect (not (stuck ?player ?quicksand))
)

(:action usestick
  :parameters (?player ?stick ?quicksand)
  :precondition (and (stuck ?player ?quicksand) (inventory ?player ?stick))
  :effect (not (stuck ?player ?quicksand))
)

(:action rest
  :parameters (?player)
  :precondition (tired ?player)
  :effect (not (tired ?player))
 )

(:action drop
  :parameters (?player ?item ?loc)
  :precondition (and (at ?player ?loc) (inventory ?player ?item))
  :effect (and (not (inventory ?player ?item)) (at ?item ?loc))
)

(:action check_ripples
  :parameters (?player ?loc)
  :precondition (at ?player ?loc)
  :effect (when (has_ripples ?loc) (aware ?player ?loc)))

(:action test_ground
  :parameters (?player ?loc)
  :precondition (at ?player ?loc)
  :effect (when (has_quicksand ?loc) (aware ?player ?loc)))

(:action research
  :parameters (?player ?loc)
  :precondition (at ?player ?loc)
  :effect (aware ?player ?loc))

(:action move_horizontally
  :parameters (?player ?quicksand)
  :precondition (stuck ?player ?quicksand)
  :effect (not (stuck ?player ?quicksand)))

)