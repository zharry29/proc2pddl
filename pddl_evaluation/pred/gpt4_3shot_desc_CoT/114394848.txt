(:action go
  :parameters (?p - player ?dir - direction ?loc1 - location ?loc2 - location)
  :precondition (and (at ?p ?loc1) (connected ?loc1 ?dir ?loc2) (not (blocked ?loc1 ?dir ?loc2)))
  :effect (and (not (at ?p ?loc1)) (at ?p ?loc2))
)

(:action understand
  :parameters (?p - player ?c - concept)
  :precondition (not (know ?p ?c))
  :effect (know ?p ?c)
)

(:action learn
  :parameters (?p - player ?s - skill)
  :precondition (not (learned ?p ?s))
  :effect (learned ?p ?s)
)

(:action get
  :parameters (?p - player ?i - item)
  :precondition (and (at ?p ?l) (at ?i ?l))
  :effect (and (not(at ?i ?l)) (inventory ?p ?i))
) 

(:action machine_secured
  :parameters (?p - player ?m - machine)
  :precondition (not (secured ?m))
  :effect (secured ?m)
)

(:action enumeration
  :parameters (?p - player ?t - digital_system)
  :precondition (not (enumerated ?t))
  :effect (enumerated ?t)
)

(:action got_all_info
  :parameters (?p - player)
  :precondition (not (collected_all_info ?p))
  :effect (collected_all_info ?p)
)

(:action ping
  :parameters (?p - player ?t - digital_system)
  :precondition (not (ping_succeed ?p ?t))
  :effect (ping_succeed ?p ?t)
)

(:action check_email_server
  :parameters (?p - player ?e - email_server)
  :precondition (not (server_checked ?p ?e))
  :effect (server_checked ?p ?e)
)

(:action reached_the_remote_system
  :parameters (?p - player ?r - remote_system)
  :precondition (not (reached ?p ?r))
  :effect (reached ?p ?r)
)

(:action run_port_scan
  :parameters (?p - player ?t - digital_system)
  :precondition (not (port_scanned ?p ?t))
  :effect (port_scanned ?p ?t)
)

(:action found_path_in_system
  :parameters (?p - player ?s - system)
  :precondition (not (path_found ?p ?s))
  :effect (path_found ?p ?s)
)

(:action contact_and_trick_a_user
  :parameters (?p - player ?u - user)
  :precondition (not (tricked ?u))
  :effect (tricked ?u)
)

(:action crack_password_by_social_engineering
  :parameters (?p - player ?pwd - password)
  :precondition (not (password_cracked ?p ?pwd))
  :effect (password_cracked ?p ?pwd)
)

(:action send_fake_email
  :parameters (?p - player ?u - user)
  :precondition (not (user_trusted_fake_email ?p ?u))
  :effect (user_trusted_fake_email ?p ?u)
)

(:action crack_password_by_phishing
  :parameters (?p - player ?pwd - password)
  :precondition (not (password_cracked ?p ?pwd))
  :effect (password_cracked ?p ?pwd)
)

(:action create_fake_wifi_access
  :parameters (?p - player)
  :precondition (not (people_use_unencrypted_connection ?p))
  :effect (people_use_unencrypted_connection ?p)
)

(:action crack_password_by_arp_spoofing
  :parameters (?p - player ?pwd - password)
  :precondition (not (password_cracked ?p ?pwd))
  :effect (password_cracked ?p ?pwd)
)

(:action crack_password_by_brute_force
  :parameters (?p - player ?pwd - password)
  :precondition (not (password_cracked ?p ?pwd))
  :effect (password_cracked ?p ?pwd)
)

(:action gain_access_with_password
 :parameters (?p - player ?pwd - password ?s - digital_system)
 :precondition (and (password_cracked ?p ?pwd) (secured ?s))
 :effect (accessed ?p ?s)
 )

(:action create_buffer_overflow
 :parameters (?p - player ?s - digital_system)
 :precondition (and (accessed ?p ?s) (memory_layout ?s))
 :effect (buffer_overflow ?s)
 )

(:action take_control_of_system
  :parameters (?p - player ?s - digital_system)
  :precondition (and (accessed ?p ?s) (not (controlled ?p ?s)))
  :effect (controlled ?p ?s)
 )

)