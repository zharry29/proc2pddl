 (:action go
      :parameters (?player - player ?from - location ?dir - direction ?to - location)
      :precondition (and 
                           (at ?player ?from)
                           (connected ?from ?dir ?to)
                           (not (blocked ?from ?dir ?to)))
      :effect (and 
                      (at ?player ?to)
                      (not (at ?player ?from))))

2. (:action get
      :parameters (?player - player ?item - item ?loc - location)
      :precondition (and 
                           (at ?player ?loc)
                           (at ?item ?loc))
      :effect (and 
                      (inventory ?player ?item)
                      (not (at ?item ?loc))))

3. (:action get_water
      :parameters (?player - player ?loc - location ?water - water)
      :precondition (and 
                           (at ?player ?loc)
                           (has_water_source ?loc))
      :effect (inventory ?player ?water))

4. (:action drop
      :parameters (?player - player ?item - item ?loc - location)
      :precondition (and 
                           (at ?player ?loc)
                           (inventory ?player ?item))
      :effect (and 
                      (at ?item ?loc)
                      (not (inventory ?player ?item))))

5. (:action clear_spiders
      :parameters (?item - item)
      :precondition (has_bug ?item)
      :effect (not (has_bug ?item)))

6. (:action insert_beam
      :parameters (?tree - tree ?branch - branch)
      :precondition (and 
                           (has_split_in_trunk ?tree)
                           (thick ?branch))
      :effect (and 
                      (has_beam ?tree ?branch)))

7. (:action lean_branches
      :parameters (?branches - branches ?beam - beam)
      :precondition (and 
                           (long ?branches))
      :effect (has_frame ?beam ?branches)) 

8. (:action layer
      :parameters (?shelter - shelter ?twigs - twigs ?leaves - leaves)
      :precondition (and 
                           (has_frame ?shelter ?branches))
      :effect (and 
                      (has_leaves ?shelter ?leaves)
                      (has_twigs ?shelter ?twigs)))

9. (:action wash
      :parameters (?item - item ?water - water)
      :precondition (and 
                           (unwashed ?item)
                           (treated ?water))
      :effect (and 
                      (washed ?item)
                      (not (unwashed ?item))))

10. (:action eat
      :parameters (?player - player ?item - item)
      :precondition (and 
                            (inventory ?player ?item)
                            (washed ?item)
                            (edible ?item))
      :effect (and 
                       (not inventory ?player ?item)
                       (not (hungry ?player))))

11. (:action make_snare
      :parameters (?wire - wire ?snare - snare)
      :precondition (inventory ?player ?wire)
      :effect (and 
                       (inventory ?player ?snare)
                       (not (inventory ?player ?wire))))

12. (:action make_horizontal_bar
      :parameters (?branch - branch ?bar - bar)
      :precondition (inventory ?player ?branch)
      :effect (and 
                       (inventory ?player ?bar)
                       (not (inventory ?player ?branch))))

13. (:action hang_snare
      :parameters (?player - player ?snare - snare ?loc - location)
      :precondition (and
                           (at ?player ?loc)
                           (inventory ?player ?snare)
                           (made_by_animal ?loc))
      :effect (and 
                       (not (inventory ?player ?snare))
                       (hanged ?snare)))