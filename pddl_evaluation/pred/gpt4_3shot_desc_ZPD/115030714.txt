(:action go
  :parameters (?player - player ?loc - location ?loc2 - location ?dir - direction)
  :precondition (and (at ?player ?loc) (connected ?loc ?dir ?loc2))
  :effect (and (not (at ?player ?loc)) (at ?player ?loc2))
)

(:action get
  :parameters (?player - player ?item - item ?loc - location)
  :precondition (and (at ?player ?loc) (at ?item ?loc))
  :effect (and (not (at ?item ?loc)) (inventory ?player ?item))
)

(:action drop
  :parameters (?player - player ?item - item ?loc - location)
  :precondition (and (at ?player ?loc) (inventory ?player ?item))
  :effect (and (not (inventory ?player ?item)) (at ?item ?loc))
)

(:action cook
  :parameters (?player - player ?loc - location ?food - food)
  :precondition (and (at ?player ?loc) (has_kitchen ?loc) (inventory ?player ?food))
  :effect (cooked ?food)
)

(:action serve
  :parameters (?player - player ?loc - location ?food - food)
  :precondition (and (at ?player ?loc) (inventory ?player ?food))
  :effect (and (not (inventory ?player ?food)) (at ?food ?loc))
) 

(:action brew
  :parameters (?player - player ?loc - location ?tea - tea)
  :precondition (and (at ?player ?loc) (has_kettle ?loc) (inventory ?player ?tea))
  :effect (brewed ?tea)
)

(:action order_sushi
  :parameters (?player - player ?phone - phone ?sushi - sushi)
  :precondition (and (inventory ?player ?phone))
  :effect (inventory ?player ?sushi)
)

(:action buy_sake
  :parameters (?player - player ?money - money ?sake - sake)
  :precondition (and (inventory ?player ?money))
  :effect (inventory ?player ?sake)
)

(:action get_beer
  :parameters (?player - player ?loc - location ?beer - beer)
  :precondition (and (at ?player ?loc) (has_fridge ?loc))
  :effect (inventory ?player ?beer)
)

(:action open
  :parameters (?player - player ?drink - drink)
  :precondition (and (inventory ?player ?drink) (not (opened ?drink)))
  :effect (opened ?drink)
)

(:action hang_lantern
  :parameters (?player - player ?loc - location ?lantern - lantern)
  :precondition (and (at ?player ?loc) (inventory ?player ?lantern) (not (hung ?lantern)))
  :effect (hung ?lantern)
)

(:action blow_balloon
  :parameters (?player - player ?balloon - balloon)
  :precondition (and (inventory ?player ?balloon) (not (inflated ?balloon)))
  :effect (inflated ?balloon)
)

(:action turn_on_tv
  :parameters (?player - player ?loc - location ?tv - tv)
  :precondition (and (at ?player ?loc) (not (on ?tv)))
  :effect (on ?tv)
)

)