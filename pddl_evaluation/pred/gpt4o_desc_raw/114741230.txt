```pddl
(define (domain secret_society)
  (:requirements :strips :typing)

  (:types
    player secret_society
  )

  (:predicates
    (has_secret ?sc - secret_society) ; this secret_society has a secret
    (has_info ?p - player) ; has this player done the respective reading?
    (has_name ?sc - secret_society) ; this secret_society has a name
    (has_location ?sc - secret_society) ; does this secret_society have a set meeting location?
    (has_dress_code ?sc - secret_society) ; does this secret society have a dress code?
    (society_is_ready ?sc - secret_society) ; is the secret society ready to add people?
    (in ?p - player ?sc - secret_society) ; a player is in a secret society
    (is_trusted ?p - player ?sc - secret_society) ; is this player trusted to join the secret society?
    (equals ?p1 - player ?p2 - player) ; are two players the same?
    (friends ?p1 - player ?p2 - player) ; are two players friends?
    (knows_secret ?p - player ?sc - secret_society) ; does the player know the society's secret?
    (is_cult ?sc - secret_society) ; is the secret society a cult?
  )

  (:action gather_info
    :parameters (?p - player)
    :precondition (and)
    :effect (has_info ?p)
  )

  (:action create_secret
    :parameters (?sc - secret_society)
    :precondition (and)
    :effect (has_secret ?sc)
  )

  (:action set_meeting_location
    :parameters (?sc - secret_society)
    :precondition (and)
    :effect (has_location ?sc)
  )

  (:action set_dress_code
    :parameters (?sc - secret_society)
    :precondition (and)
    :effect (has_dress_code ?sc)
  )

  (:action create_name
    :parameters (?sc - secret_society)
    :precondition (and)
    :effect (has_name ?sc)
  )

  (:action secret_society_is_ready
    :parameters (?sc - secret_society)
    :precondition (and
      (has_secret ?sc)
      (has_name ?sc)
      (has_location ?sc)
      (has_dress_code ?sc)
    )
    :effect (society_is_ready ?sc)
  )

  (:action initiate_new_member
    :parameters (?p - player ?sc - secret_society)
    :precondition (and
      (society_is_ready ?sc)
      (is_trusted ?p ?sc)
    )
    :effect (in ?p ?sc)
  )

  (:action teach_new_member_secret
    :parameters (?p - player ?sc - secret_society)
    :precondition (and
      (in ?p ?sc)
      (is_trusted ?p ?sc)
    )
    :effect (knows_secret ?p ?sc)
  )

  (:action remove_member
    :parameters (?p - player ?sc - secret_society)
    :precondition (and
      (in ?p ?sc)
    )
    :effect (not (in ?p ?sc))
  )

  (:action check_if_cult
    :parameters (?sc - secret_society)
    :precondition (and
      (society_is_ready ?sc)
    )
    :effect (is_cult ?sc)
  )
)
```