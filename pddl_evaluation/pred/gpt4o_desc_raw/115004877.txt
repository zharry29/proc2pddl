Sure, here is the PDDL representation of the actions based on your requirements:

```lisp
(define (domain papyrus_making)
  (:requirements :strips :typing)
  
  (:types
    plant stalk strip sheet papyrus scissors wooden_board shell - item
    player direction location
  )
  
  (:predicates
    (peeled ?stalk - stalk)
    (clean ?strip - strip)
    (flat ?sheet - sheet)
    (very_flat ?sheet - sheet)
    (smooth ?sheet - sheet)
    (dry ?item - item)
    (has_water ?loc - location)
    (has_hard_surface ?loc - location)
    (at ?obj - object ?loc - location)
    (inventory ?player ?item)
    (connected ?loc1 - location ?dir - direction ?loc2 - location)
  )
  
  (:action go
    :parameters (?player - player ?dir - direction ?loc1 - location ?loc2 - location)
    :precondition (and (at ?player ?loc1) (connected ?loc1 ?dir ?loc2))
    :effect (and (at ?player ?loc2) (not (at ?player ?loc1)))
  )
  
  (:action get
    :parameters (?player - player ?item - item ?loc - location)
    :precondition (and (at ?player ?loc) (at ?item ?loc))
    :effect (and (inventory ?player ?item) (not (at ?item ?loc)))
  )
  
  (:action cut_plant
    :parameters (?player - player ?plant - plant ?stalk - stalk ?loc - location ?scissors - scissors)
    :precondition (and (at ?player ?loc) (at ?plant ?loc) (inventory ?player ?scissors))
    :effect (and (not (at ?plant ?loc)) (at ?stalk ?loc))
  )
  
  (:action peel_stalk
    :parameters (?player - player ?stalk - stalk ?shell - shell ?loc - location)
    :precondition (and (at ?player ?loc) (at ?stalk ?loc) (inventory ?player ?shell))
    :effect (peeled ?stalk)
  )
  
  (:action cut_stalk_into_strips
    :parameters (?player - player ?stalk - stalk ?strip - strip ?scissors - scissors ?loc - location)
    :precondition (and (at ?player ?loc) (peeled ?stalk) (inventory ?player ?scissors) (at ?stalk ?loc))
    :effect (and (at ?strip ?loc) (not (at ?stalk ?loc)))
  )
  
  (:action soak_strips
    :parameters (?player - player ?strip - strip ?loc - location)
    :precondition (and (at ?player ?loc) (at ?strip ?loc) (has_water ?loc))
    :effect (clean ?strip)
  )
  
  (:action dry_out_strips
    :parameters (?player - player ?strip - strip ?loc - location)
    :precondition (and (at ?player ?loc) (at ?strip ?loc) (clean ?strip))
    :effect (dry ?strip)
  )
  
  (:action weave_strips_into_sheet
    :parameters (?player - player ?strip - strip ?sheet - sheet ?loc - location)
    :precondition (and (at ?player ?loc) (at ?strip ?loc) (dry ?strip))
    :effect (and (at ?sheet ?loc) (not (at ?strip ?loc)))
  )
  
  (:action press_sheet
    :parameters (?player - player ?sheet - sheet ?wooden_board - wooden_board ?loc - location)
    :precondition (and (at ?player ?loc) (at ?sheet ?loc) (inventory ?player ?wooden_board))
    :effect (flat ?sheet)
  )
  
  (:action flatten_sheet
    :parameters (?player - player ?sheet - sheet ?loc - location)
    :precondition (and (at ?player ?loc) (at ?sheet ?loc) (flat ?sheet) (has_hard_surface ?loc))
    :effect (very_flat ?sheet)
  )
  
  (:action polish_sheet
    :parameters (?player - player ?sheet - sheet ?shell - shell ?loc - location)
    :precondition (and (at ?player ?loc) (at ?sheet ?loc) (very_flat ?sheet) (inventory ?player ?shell))
    :effect (smooth ?sheet)
  )
  
  (:action cut_sheet
    :parameters (?player - player ?sheet - sheet ?papyrus - papyrus ?scissors - scissors ?loc - location)
    :precondition (and (at ?player ?loc) (at ?sheet ?loc) (smooth ?sheet) (inventory ?player ?scissors))
    :effect (and (at ?papyrus ?loc) (not (at ?sheet ?loc)))
  )
)
```

This PDDL domain file includes all the actions with the specified parameters, preconditions, and effects based on the predicates you provided.