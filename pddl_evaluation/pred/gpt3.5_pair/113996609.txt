(:action go
   :parameters (?player - player ?from - location ?to - location ?dir - direction)
   :precondition (and
      (at ?player ?from)
      (connected ?from ?dir ?to)
   )
   :effect (and
      (not (at ?player ?from))
      (at ?player ?to)
   )
)

(:action get
   :parameters (?player - player ?item - item ?loc - location)
   :precondition (and
      (at ?player ?loc)
      (at ?item ?loc)
   )
   :effect (and
      (not (at ?item ?loc))
      (inventory ?player ?item)
   )
)

(:action get_water
   :parameters (?player - player ?loc - location ?water - water)
   :precondition (and
      (at ?player ?loc)
      (has_water_source ?loc)
      (has_wood ?loc)
   )
   :effect (and
      (not (has_water_source ?loc))
      (not (has_wood ?loc))
      (inventory ?player ?water)
   )
)

(:action chop_wood
   :parameters (?player - player ?loc - location ?wood - wood)
   :precondition (and
      (at ?player ?loc)
      (has_wood ?loc)
   )
   :effect (and
      (not (has_wood ?loc))
      (inventory ?player ?wood)
   )
)

(:action carve_groove
   :parameters (?player - player ?wood - wood)
   :precondition (and
      (inventory ?player ?wood)
   )
   :effect (and
      (not (inventory ?player ?wood))
      (groove ?wood)
   )
)

(:action light_fire
   :parameters (?player - player ?loc - location)
   :precondition (and
      (at ?player ?loc)
      (can_light_fire ?loc)
      (has_wood ?loc)
      (groove ?wood)
   )
   :effect (and
      (not (has_wood ?loc))
      (not (groove ?wood))
      (has_fire ?loc)
   )
)

(:action build_shelter
   :parameters (?player - player ?loc - location)
   :precondition (and
      (at ?player ?loc)
      (has_wood ?loc)
   )
   :effect (and
      (not (has_wood ?loc))
      (has_shelter ?loc)
   )
)

(:action clean_water
   :parameters (?player - player ?water - water)
   :precondition (and
      (inventory ?player ?water)
   )
   :effect (and
      (not (inventory ?player ?water))
      (treated ?water)
   )
)

(:action drink_water
   :parameters (?player - player ?water - water)
   :precondition (and
      (inventory ?player ?water)
      (treated ?water)
   )
   :effect (and
      (not (inventory ?player ?water))
      (drank ?water)
   )
)

(:action find_other_survivors
   :parameters (?player - player ?loc - location ?survivor - survivor)
   :precondition (and
      (at ?player ?loc)
   )
   :effect (and
      (has_friend ?survivor)
   )
)

(:action build_raft
   :parameters (?player - player ?loc - location ?raft - raft)
   :precondition (and
      (at ?player ?loc)
      (inventory ?player ?raft)
      (has_wood ?loc)
   )
   :effect (and
      (not (inventory ?player ?raft))
      (not (has_wood ?loc))
      (has_escaped ?player)
   )
)

(:action make_weapon
   :parameters (?player - player ?loc - location ?wood - wood ?spear - spear)
   :precondition (and
      (inventory ?player ?wood)
   )
   :effect (and
      (not (inventory ?player ?wood))
      (inventory ?player ?spear)
   )
)

(:action hunt_fish
   :parameters (?player - player ?loc - location ?fish - fish)
   :precondition (and
      (at ?player ?loc)
      (has_fish ?loc)
   )
   :effect (and
      (not (has_fish ?loc))
      (inventory ?player ?fish)
   )
)

(:action cook_fish
   :parameters (?player - player ?fish - fish ?cooked - cooked)
   :precondition (and
      (inventory ?player ?fish)
   )
   :effect (and
      (not (inventory ?player ?fish))
      (inventory ?player ?cooked)
   )
)

)