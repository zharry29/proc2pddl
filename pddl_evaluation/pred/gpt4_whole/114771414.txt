(:action go
  :parameters (?player - player ?loc1 - location ?dir - direction ?loc2 - location)
  :precondition (and
    (at ?player ?loc1)
    (connected ?loc1 ?dir ?loc2)
    (not (blocked ?loc1 ?dir ?loc2))
  )
  :effect (and
    (not (at ?player ?loc1))
    (at ?player ?loc2)
  )
)

(:action get
  :parameters (?player - player ?item - item ?loc - location)
  :precondition (and
    (at ?player ?loc)
    (at ?item ?loc)
  )
  :effect (and
    (not (at ?item ?loc))
    (inventory ?player ?item)
  )
)

(:action get_water
  :parameters (?player - player ?water - water ?loc - location)
  :precondition (and
    (at ?player ?loc)
    (has_water_source ?loc)
  )
  :effect (inventory ?player ?water)
)

(:action sharpen_stick
  :parameters (?player - player ?stick - stick)
  :precondition (inventory ?player ?stick)
  :effect (and
    (not (inventory ?player ?stick))
    (inventory ?player (sharpened ?stick))
  )
)

(:action catch_fish
  :parameters (?player - player ?loc - location ?fish - fish)
  :precondition (and
    (at ?player ?loc)
    (has_fish ?loc)
    (exists (?s - stick)
      (inventory ?player (sharpened ?s))
    )
  )
  :effect (inventory ?player ?fish)
)

(:action hunt_bird
  :parameters (?player - player ?loc - location ?bird - bird)
  :precondition (and
    (at ?player ?loc)
    (has_bird ?loc)
    (exists (?s - stick)
      (inventory ?player (sharpened ?s))
    )
  )
  :effect (inventory ?player ?bird)
)

(:action hunt_insect
  :parameters (?player - player ?loc - location ?insect - insect)
  :precondition (and
    (at ?player ?loc)
    (has_insect ?loc)
  )
  :effect (inventory ?player ?insect)
)

(:action get_shellfish
  :parameters (?player - player ?loc - location ?shellfish - shellfish)
  :precondition (and
    (at ?player ?loc)
    (has_shellfish ?loc)
  )
  :effect (inventory ?player ?shellfish)
)

(:action cook
  :parameters (?player - player ?item ?loc - location)
  :precondition (and
    (at ?player ?loc)
    (has_fire ?loc)
    (inventory ?player ?item)
  )
  :effect (and
    (not (inventory ?player ?item))
    (inventory ?player (cooked ?item))
    (edible (cooked ?item))
  )
)

(:action get_stick
  :parameters (?player - player ?stick - stick ?loc - location)
  :precondition (and
    (at ?player ?loc)
    (at ?stick ?loc)
  )
  :effect (inventory ?player ?stick)
)

(:action start_fire
  :parameters (?player - player ?loc - location)
  :precondition (at ?player ?loc)
  :effect (has_fire ?loc)
)

(:action get_tarp
  :parameters (?player - player ?tarp - tarp ?loc - location)
  :precondition (and
    (at ?player ?loc)
    (at ?tarp ?loc)
  )
  :effect (inventory ?player ?tarp)
)

(:action get_leave
  :parameters (?player - player ?leave - leave ?loc - location)
  :precondition (and
    (at ?player ?loc)
    (at ?leave ?loc)
  )
  :effect (and
    (not (at ?leave ?loc))
    (inventory ?player ?leave)
  )
)

(:action construct_shelter
  :parameters (?player - player ?tarp - tarp ?leave - leave ?loc - location)
  :precondition (and
    (at ?player ?loc)
    (inventory ?player ?tarp)
    (inventory ?player ?leave)
  )
  :effect (sheltered ?loc)
)

)