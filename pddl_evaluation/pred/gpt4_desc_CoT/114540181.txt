(:action go
   :parameters (?p - player ?loc1 - location ?dir - direction ?loc2 - location)
   :precondition (and (at ?p ?loc1) (connected ?loc1 ?dir ?loc2) (not (blocked ?loc1 ?dir ?loc2)))
   :effect (and (not (at ?p ?loc1)) (at ?p ?loc2))
)

(:action get
   :parameters (?p - player ?i - item)
   :precondition (and (at ?i ?loc) (at ?p ?loc))
   :effect (and (not (at ?i ?loc)) (inventory ?p ?i))
)

(:action get_bamboo_container
   :parameters (?p - player ?bc - bamboo_container)
   :precondition (has_bamboo ?loc)
   :effect (inventory ?p ?bc)
)

(:action collect_rain_water
   :parameters (?p - player ?bc - bamboo_container ?w - water)
   :precondition (and (inventory ?p ?bc) (has_rainfall ?loc))
   :effect (inventory ?p ?w)
)

(:action create_fire
   :parameters (?p - player ?f - fire)
   :precondition (at ?p basecamp)
   :effect (at ?f basecamp)
)

(:action treat_water
   :parameters (?p - player ?f - fire ?w - water)
   :precondition (and (at ?p ?loc) (at ?f ?loc) (inventory ?p ?w))
   :effect (treated ?w)
)

(:action drink_water
   :parameters (?p - player ?w - water)
   :precondition (and (inventory ?p ?w) (treated ?w) (is dehydrated ?p))
   :effect (not (is dehydrated ?p))
)

(:action drink_untreated_water
   :parameters (?p - player ?w - water)
   :precondition (and (inventory ?p ?w) (not (treated ?w)) (is dehydrated ?p))
   :effect (and (is ill ?p) (not (is dehydrated ?p)))
)

(:action create_sos_sign
   :parameters (?p - player ?s - sos_sign)
   :precondition (at ?p basecamp)
   :effect (at ?s basecamp)
)

(:action pick_fruit
   :parameters (?p - player ?fr - fruit)
   :precondition (has_fruit ?loc)
   :effect (inventory ?p ?fr)
)

(:action eat_fruit
   :parameters (?p - player ?fr - fruit)
   :precondition (and (inventory ?p ?fr) (is hungry ?p))
   :effect (not (is hungry ?p))
)

(:action escape
   :parameters (?p - player)
   :precondition (and (at ?p basecamp) (at ?s - sos_sign basecamp))
   :effect ()
)

)