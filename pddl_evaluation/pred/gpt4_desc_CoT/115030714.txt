(:action go
    :parameters (?player - player ?loc1 - location ?loc2 - location ?dir - direction)
    :precondition (and (at ?player ?loc1) (connected ?loc1 ?dir ?loc2))
    :effect (and (not (at ?player ?loc1)) (at ?player ?loc2))
  )

  (:action get
    :parameters (?player - player ?item - item ?loc - location)
    :precondition (and (at ?player ?loc) (at ?item ?loc))
    :effect (and (not (at ?item ?loc)) (inventory ?player ?item))
  )

  (:action drop
    :parameters (?player - player ?item - item ?loc - location)
    :precondition (and (at ?player ?loc) (inventory ?player ?item))
    :effect (and (not (inventory ?player ?item)) (at ?item ?loc))
  )

  (:action cook
    :parameters (?player - player ?food - food ?loc - location)
    :precondition (and (at ?player ?loc) (inventory ?player ?food) (has_kitchen ?loc))
    :effect (cooked ?food)
  )

  (:action order_sushi
    :parameters (?player - player ?phone - phone ?money - money ?sushi - sushi)
    :precondition (and (inventory ?player ?phone) (inventory ?player ?money))
    :effect (inventory ?player ?sushi)
  )

  (:action buy_sake
    :parameters (?player - player ?money - money ?sake - drink ?loc - location)
    :precondition (and (at ?player ?loc) (inventory ?player ?money) (has_fridge ?loc))
    :effect (inventory ?player ?sake)
  )

  (:action serve
    :parameters (?player - player ?item - (either food drink))
    :precondition (inventory ?player ?item)
    :effect (not (inventory ?player ?item))
  )

  (:action brew
    :parameters (?player - player ?tea - tea ?loc - location)
    :precondition (and (at ?player ?loc) (inventory ?player ?tea) (has_kitchen ?loc))
    :effect (brewed ?tea)
  )

  (:action get_beer
    :parameters (?player - player ?beer - drink ?loc - location)
    :precondition (and (at ?player ?loc) (has_fridge ?loc))
    :effect (inventory ?player ?beer)
  )

  (:action open
    :parameters (?player - player ?drink - drink)
    :precondition (and (inventory ?player ?drink) (not (opened ?drink)))
    :effect (opened ?drink)
  )

  (:action hang_lantern
    :parameters (?player - player ?lantern - lantern)
    :precondition (inventory ?player ?lantern)
    :effect (hung ?lantern)
  )

  (:action blow_balloon
    :parameters (?player - player ?balloon - balloon)
    :precondition (and (inventory ?player ?balloon) (not (inflated ?balloon)))
    :effect (inflated ?balloon)
  )

  (:action turn_on_tv
    :parameters (?player - player ?tv - item)
    :precondition (and (inventory ?player ?tv) (not (on ?tv)))
    :effect (on ?tv)
  )

)