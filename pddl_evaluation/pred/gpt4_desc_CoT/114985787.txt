(:action go
   :parameters (?p - player ?from - location ?dir - direction ?to - location)
   :precondition (and (at ?p ?from) (connected ?from ?dir ?to) (not (blocked ?from ?dir ?to)))
   :effect (and (not (at ?p ?from)) (at ?p ?to)))

  (:action get
   :parameters (?p - player ?i - item ?loc - location)
   :precondition (and (at ?p ?loc) (at ?i ?loc))
   :effect (and (not (at ?i ?loc)) (inventory ?p ?i)))

  (:action get_water
   :parameters (?p - player ?loc - location ?w - water)
   :precondition (and (at ?p ?loc) (has_water_source ?loc) (at ?w ?loc))
   :effect (and (not (at ?w ?loc)) (inventory ?p ?w)))

  (:action drop
   :parameters (?p - player ?i - item ?loc - location)
   :precondition (and (at ?p ?loc) (inventory ?p ?i))
   :effect (and (not (inventory ?p ?i)) (at ?i ?loc)))

  (:action clear_spider
   :parameters (?i - item)
   :precondition (has_bug ?i)
   :effect (not (has_bug ?i)))

  (:action insert_beam
   :parameters (?b - branch ?t - tree)
   :precondition (and (long ?b) (thick ?b) (has_split_in_trunk ?t))
   :effect (and (not (at ?b ?loc)) (not (at ?t ?loc)) (at ?beam ?loc)))

  (:action lean_branches
   :parameters (?bs - branches ?beam - beam)
   :precondition (and (at ?bs ?loc) (at ?beam ?loc))
   :effect (at ?frame ?loc))

  (:action layer
   :parameters (?t - twigs ?l - leaves ?f - frame)
   :precondition (and (at ?t ?loc) (at ?l ?loc) (at ?f ?loc))
   :effect (at ?shelter ?loc))

  (:action wash
   :parameters (?item - item)
   :precondition (unwashed ?item)
   :effect (not (unwashed ?item)))

  (:action eat
   :parameters (?p - player ?i - item)
   :precondition (and (inventory ?p ?i) (edible ?i) (hungry ?p))
   :effect (and (not (inventory ?p ?i)) (not (hungry ?p))))

  (:action make_snare
   :parameters (?w - wire)
   :precondition (inventory ?p ?w)
   :effect (and (not (inventory ?p ?w)) (inventory ?p ?snare)))

  (:action make_horizontal_bar
   :parameters (?b - branch)
   :precondition (long ?b)
   :effect (and (not (at ?b ?loc)) (at ?bar ?loc)))

  (:action hang_snare
   :parameters (?p - player ?s - snare, ?bar - bar ?l - location)
   :precondition (and (at ?p ?l) (at ?bar ?l) (inventory ?p ?s) (made_by_animal ?l))
   :effect (and (not (inventory ?p ?s)) (at ?s ?l) (hanged ?s)))

)