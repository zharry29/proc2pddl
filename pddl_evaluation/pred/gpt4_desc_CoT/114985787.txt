(:action go
  :parameters (?player - player ?current_location - location ?direction - direction ?new_location - location)
  :precondition (and (at ?player ?current_location)
                     (connected ?current_location ?direction ?new_location)
                     (not (blocked ?current_location ?direction ?new_location)))
  :effect (and (not (at ?player ?current_location))
               (at ?player ?new_location)))

(:action get
  :parameters (?player - player ?item - item ?location - location)
  :precondition (and (at ?player ?location)
                     (at ?item ?location))
  :effect (and (inventory ?player ?item)
               (not (at ?item ?location))))

(:action get_water
  :parameters (?player - player ?water - water ?location - location)
  :precondition (and (at ?player ?location)
                     (has_water_source ?location))
  :effect (inventory ?player ?water))

(:action drop
  :parameters (?player - player ?item - item ?location - location)
  :precondition (and (inventory ?player ?item)
                     (at ?player ?location))
  :effect (and (at ?item ?location)
               (not (inventory ?player ?item))))

(:action clear_spider
  :parameters (?player - player ?item - item)
  :precondition (and (inventory ?player ?item)
                     (has_bug ?item))
  :effect (not (has_bug ?item)))

(:action insert_beam
  :parameters (?player - player ?branch - branch ?tree - tree ?location - location)
  :precondition (and (inventory ?player ?branch)
                     (at ?player ?location)
                     (at ?tree ?location)
                     (has_split_in_trunk ?tree)
                     (long ?branch)
                     (thick ?branch))
  :effect (beam_inserted ?tree ?branch))

(:action lean_branches
  :parameters (?player - player ?branches - branches ?tree - tree)
  :precondition (and (inventory ?player ?branches)
                     (beam_inserted ?tree ?beam))
  :effect (frame_created ?tree ?branches))

(:action layer
  :parameters (?player - player ?twigs - twigs ?leaves - leaves ?tree - tree)
  :precondition (and (inventory ?player ?twigs)
                     (inventory ?player ?leaves)
                     (frame_created ?tree ?branches))
  :effect (shelter_completed ?tree))

(:action wash
  :parameters (?player - player ?plants - flowers)
  :precondition (and (inventory ?player ?plants)
                     (unwashed ?plants))
  :effect (not (unwashed ?plants)))

(:action eat
  :parameters (?player - player ?plants - flowers)
  :precondition (and (inventory ?player ?plants)
                     (edible ?plants)
                     (hungry ?player))
  :effect (and (not (hungry ?player))
               (not (inventory ?player ?plants))))

(:action make_snare
  :parameters (?player - player ?wire - wire ?snare - snare)
  :precondition (inventory ?player ?wire)
  :effect (and (inventory ?player ?snare)
               (not (inventory ?player ?wire))))

(:action make_horizontal_bar
  :parameters (?player - player ?branch - branch ?bar - bar)
  :precondition (inventory ?player ?branch)
  :effect (and (inventory ?player ?bar)
               (not (inventory ?player ?branch))))

(:action hang_snare
  :parameters (?player - player ?snare - snare ?bar - bar ?location - location)
  :precondition (and (inventory ?player ?snare)
                     (inventory ?player ?bar)
                     (at ?player ?location)
                     (made_by_animal ?location))
  :effect (hanged ?snare ?location))

)