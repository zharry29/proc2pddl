(:action go
   :parameters (?player - player ?dir - direction ?loc1 - location ?loc2 - location)
   :precondition (and 
                  (at ?player ?loc1)
                  (connected ?loc1 ?dir ?loc2)
                  (not (blocked ?loc1 ?dir ?loc2))
                )
   :effect (and 
             (not (at ?player ?loc1))
             (at ?player ?loc2)
           )
)

(:action get
   :parameters (?player - player ?item - item ?loc - location)
   :precondition (and
                  (at ?player ?loc)
                  (at ?item ?loc)
                  (gettable ?item)
                )
   :effect (and
             (inventory ?player ?item)
             (not (at ?item ?loc))
           )
)

(:action drop
   :parameters (?player - player ?item - item ?loc - location)
   :precondition (and
                  (inventory ?player ?item)
                  (at ?player ?loc)
                )
   :effect (and
             (not (inventory ?player ?item))
             (at ?item ?loc)
           )
)

(:action get_water
   :parameters (?player - player ?water - water ?loc - location)
   :precondition (and
                  (at ?player ?loc)
                  (has_water_source ?loc)
                )
   :effect (inventory ?player ?water)
)

(:action boil_water
   :parameters (?player - player ?unpurified - water ?purified - water)
   :precondition (and
                  (inventory ?player ?unpurified)
                )
   :effect (and
             (not (inventory ?player ?unpurified))
             (inventory ?player ?purified)
             (treated ?purified)
           )
)

(:action collect_rain_water
   :parameters (?player - player ?water - water ?loc - location)
   :precondition (and
                  (at ?player ?loc)
                  (outdoors ?loc)
                )
   :effect (inventory ?player ?water)
)

(:action loot_shelter
   :parameters (?player - player ?loc - location ?item - item)
   :precondition (and
                  (at ?player ?loc)
                  (has_basement ?loc)
                  (is_occupied ?loc)
                )
   :effect (inventory ?player ?item)
)

(:action break_car_window
   :parameters (?player - player ?car - car)
   :precondition (and
                  (at ?player ?car)
                  (has_windows ?car)
                )
   :effect (not (has_windows ?car))
)

(:action gofish
   :parameters (?player - player ?fishingpole - fishingpole ?loc - location ?fish - fish)
   :precondition (and
                  (at ?player ?loc)
                  (haslake ?loc)
                  (inventory ?player ?fishingpole)
                )
   :effect (inventory ?player ?fish)
)

(:action find_shelter
   :parameters (?player - player ?loc - location)
   :precondition (and
                  (at ?player ?loc)
                  (has_basement ?loc)
                )
   :effect (in_shelter ?player)
)

(:action clean_wound
   :parameters (?player - player ?woundlocation - location ?bandage - bandage ?water - water)
   :precondition (and
                  (is_injured ?player)
                  (inventory ?player ?bandage)
                  (inventory ?player ?treated ?water)
                )
   :effect (not (is_injured ?player))
)

(:action clean_others_wound
   :parameters (?helper - player ?injured - player ?woundlocation - location ?bandage - bandage ?water - water)
   :precondition (and
                  (not (is_injured ?helper))
                  (is_injured ?injured)
                  (inventory ?helper ?bandage)
                  (inventory ?helper ?treated ?water)
                )
   :effect (not (is_injured ?injured))
)

(:action barter_food_for_healing
   :parameters (?player - player ?trader - player ?food - food ?woundlocation - location)
   :precondition (and
                  (is_injured ?player)
                  (inventory ?player ?food)
                )
   :effect (and
             (not (is_injured ?player))
             (not (inventory ?player ?food))
           )
)

)