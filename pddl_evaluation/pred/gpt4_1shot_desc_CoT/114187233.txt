(:action go
    :parameters (?player ?loc1 - location ?dir - direction ?loc2 - location)
    :precondition (and(an(at ?player ?loc1)) (connected ?loc1 ?dir ?loc2))
    :effect (and (not (at ?player ?loc1)) (at ?player ?loc2))
)

(:action get
    :parameters (?player ?item ?loc - location)
    :precondition (at ?item ?loc)
    :effect (and (not (at ?item ?loc)) (inventory ?player ?item))
)

(:action drop
    :parameters (?player ?item ?loc - location)
    :precondition (inventory ?player ?item)
    :effect (and (not (inventory ?player ?item)) (at ?item ?loc))
)

(:action pierce
    :parameters (?player ?item)
    :precondition (inventory ?player ?item)
    :effect (pierced ?item)
)

(:action drain
    :parameters (?player ?item)
    :precondition (and (inventory ?player ?item) (pierced ?item))
    :effect (empty ?item)
)

(:action turn_on_oven
    :parameters (?player ?appliance)
    :precondition (and (at ?player ?appliance) (not (on ?appliance)))
    :effect (on ?appliance)
)

(:action burn_item
    :parameters (?player ?item ?appliance)
    :precondition (and (at ?player ?appliance) (inventory ?player ?item) (on ?appliance) )
    :effect (burnt ?item)
)

(:action turn_off_oven
    :parameters (?player ?appliance)
    :precondition (and (at ?player ?appliance) (on ?appliance))
    :effect (not (on ?appliance))
)

(:action wrap_coconut
    :parameters (?player ?coconut ?wrap)
    :precondition (and (inventory ?player ?coconut) (inventory ?player ?wrap) (not (wrapped ?coconut)))
    :effect (and (not (inventory ?player ?wrap)) (wrapped ?coconut) (wrapped_with ?coconut ?wrap))
)

(:action unwrap_coconut
    :parameters (?player ?coconut ?wrap)
    :precondition (and (inventory ?player ?coconut) (wrapped ?coconut) (wrapped_with ?coconut ?wrap))
    :effect (and (not(wrapped ?coconut)) (not(wrapped_with ?coconut ?wrap)) (inventory ?player ?wrap))
)

(:action smash_with_hands
    :parameters (?player ?item)
    :precondition (and (inventory ?player ?item) (not (smashed ?item)))
    :effect (smashed ?item)
)

(:action separate
    :parameters (?player ?coconut ?shell ?meat)
    :precondition (and (inventory ?player ?coconut) (smashed ?coconut))
    :effect (and (not(inventory ?player ?coconut)) (inventory ?player ?shell) (inventory ?player ?meat))
)

(:action peel
    :parameters (?player ?item)
    :precondition (and (inventory ?player ?item) (not (peeled ?item)))
    :effect (peeled ?item)
)

(:action smash_with_mallet
    :parameters (?player ?item ?mallet)
    :precondition (and (inventory ?player ?item) (inventory ?player ?mallet) (not (smashed ?item)))
    :effect (smashed ?item)
)

)