(:action go
  :parameters (?p - player ?loc1 - location ?dir - direction ?loc2 - location)
  :precondition (and (at ?p ?loc1) (connected ?loc1 ?dir ?loc2) (not (blocked ?loc1 ?dir ?loc2)))
  :effect (and (at ?p ?loc2) (not (at ?p ?loc1))))

(:action get
  :parameters (?p - player ?item - item)
  :precondition (and (at ?item ?loc) (at ?p ?loc))
  :effect (and (inventory ?p ?item) (not (at ?item ?loc))))

(:action collect_water
  :parameters (?p - player ?container - container ?loc - location)
  :precondition (and (at ?p ?loc) (has_water_source ?loc) (not (is_full ?container)))
  :effect (and (contains ?container water) (is_full ?container)))

(:action gather_sticks
  :parameters (?p - player ?loc - location)
  :precondition (and (at ?p ?loc) (has_sticks ?loc))
  :effect (inventory ?p sticks))

(:action make_fire
  :parameters (?p - player ?loc - location ?igniter - igniter)
  :precondition (and (at ?p ?loc) (inventory ?p ?igniter))
  :effect (has_fire ?loc))

(:action boil_water
  :parameters (?p - player ?container - container ?loc - location)
  :precondition (and (at ?p ?loc) (has_fire ?loc) (contains ?container water))
  :effect (not (is_contaminated water)))

(:action cook_food
  :parameters (?p - player ?food - food ?loc - location)
  :precondition (and (at ?p ?loc) (has_fire ?loc) (inventory ?p ?food))
  :effect (not (is_contaminated ?food)))

(:action eat_poisoned_food
  :parameters (?p - player ?food - food)
  :precondition (and (inventory ?p ?food) (is_poisonous ?food))
  :effect (and (is_sick ?p) (not (is_hungry ?p)) (not (inventory ?p ?food))))

(:action eat_contaminated_food
  :parameters (?p - player ?food - food)
  :precondition (and (inventory ?p ?food) (is_contaminated ?food))
  :effect (and (is_sick ?p) (not (is_hungry ?p)) (not (inventory ?p ?food))))

(:action eat_food
  :parameters (?p - player ?food - food)
  :precondition (and (inventory ?p ?food) (not (is_contaminated ?food)) (not (is_poisonous ?food)))
  :effect (and (not (is_hungry ?p)) (not (inventory ?p ?food))))

(:action drink_contaminated_water
  :parameters (?p - player ?container - container)
  :precondition (and (contains ?container water) (is_contaminated water) (is_full ?container))
  :effect (and (is_sick ?p) (not (is_thirsty ?p)) (not (is_full ?container))))

(:action drink_water
  :parameters (?p - player ?container - container)
  :precondition (and (contains ?container water) (not (is_contaminated water)) (is_full ?container))
  :effect (and (not (is_thirsty ?p)) (not (is_full ?container))))

(:action build_shelter
  :parameters (?p - player ?loc - location ?leaves - leaves ?sticks - sticks)
  :precondition (and (at ?p ?loc) (at ?leaves ?loc) (inventory ?p ?sticks) (has_tree ?loc))
  :effect (has_shelter ?loc))

(:action sleep_in_shelter
  :parameters (?p - player ?loc - location)
  :precondition (and (at ?p ?loc) (has_shelter ?loc) (is_tired ?p))
  :effect (not (is_tired ?p)))

)