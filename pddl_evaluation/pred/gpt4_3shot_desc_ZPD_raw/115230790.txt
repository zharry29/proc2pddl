Based on your defined requirements, types and predicates, here are the PDDL actions based on the given text:

```pddl
(:action listen_to_astronomers_predictions
   :parameters (?p - player ?loc - location)
   :precondition (and (at ?p ?loc) (has_pc ?p))
   :effect (listen_to_broadcast ?p ?loc))

(:action move_away
   :parameters (?p - player ?cityc - city ?cityi - city)
   :precondition (and (at ?p ?cityc) (coastal ?cityc) (inland ?cityi))
   :effect (at ?p ?cityi))

(:action go 
   :parameters (?p - player ?from - location ?to - location ?dir - direction)
   :precondition (and (at ?p ?from) (connected ?from ?dir ?to))
   :effect (and (not (at ?p ?from)) (at ?p ?to)))

(:action buy_supplies
   :parameters (?p - player ?s - item ?loc - location)
   :precondition (at ?p ?loc)
   :effect (inventory ?s))

(:action check_supplies
   :parameters ()
   :precondition ()
   :effect (enough_supplies))
   
(:action buy_weapons
   :parameters (?p - player ?s -weapon ?wm - weapon_market)
   :precondition (at ?p ?wm)
   :effect (inventory ?s))

(:action check_weapons
   :parameters ()
   :precondition ()
   :effect (enough_weapons))

(:action check_bunker
   :parameters (?bunker - bunker)
   :precondition (and (has_air_filtration_system ?bunker) (has_strong_material ?bunker))
   :effect (find_good_bunker ?bunker))

(:action outfit_bunker_with_energy_source
   :parameters (?bunker - bunker ?source - energy_source)
   :precondition (at ?source ?bunker)
   :effect (outfit_bunker_with_heat ?bunker))

(:action enjoylife
   :parameters (?p - player ?bunker - bunker)
   :precondition (and (find_good_bunker ?bunker) (outfit_bunker_with_heat ?bunker))
   :effect (enjoylife ?p ?bunker))

(:action connect_through_social_media_with_family 
   :parameters (?p - player)
   :precondition (at ?p ?loc)
   :effect (family_memebers_know_you_are_safe))
``` 

Remember to adjust the parameters, predicates, and effects within these actions based on the specific requirements of your problem or domain in the actual implementation.