(:action go
  :parameters (?p - player ?loc1 - location ?dir - direction ?loc2 - location)
  :precondition (and (at ?p ?loc1) (connected ?loc1 ?dir ?loc2) (not (blocked ?loc1 ?dir ?loc2)))
  :effect (and (not (at ?p ?loc1)) (at ?p ?loc2))
)

(:action get
  :parameters (?p - player ?item - item ?loc - location)
  :precondition (and (at ?p ?loc) (at ?item ?loc))
  :effect (and (not (at ?item ?loc)) (inventory ?p ?item))
)

(:action get_water
  :parameters (?p - player ?water - water ?loc - location)
  :precondition (and (at ?p ?loc) (has_water_source ?loc) (inventory ?p ?container - container))
  :effect (inventory ?p ?water)
)

(:action strain_water
  :parameters (?p - player ?water - water ?cloth - cloth)
  :precondition (and (inventory ?p ?water) (inventory ?p ?cloth))
  :effect (strained ?water)
)

(:action boil_water
  :parameters (?p - player ?water - water)
  :precondition (and (strained ?water) (has_fire ?p))
  :effect (treated ?water)
)

(:action purify_in_sunlight
  :parameters (?p - player ?water - water)
  :precondition (treated ?water)
  :effect (treated ?water)
)

(:action get_long_branch
  :parameters (?p - player ?loc - location ?lb - long_branch)
  :precondition (and (at ?p ?loc) (has_branches ?loc) (at ?lb ?loc))
  :effect (and (not (at ?lb ?loc)) (inventory ?p ?lb))
)

(:action get_propped_branches
  :parameters (?p - player ?loc - location ?pb - propped_branches)
  :precondition (and (at ?p ?loc) (has_branches ?loc) (at ?pb ?loc))
  :effect (and (not (at ?pb ?loc)) (inventory ?p ?pb))
)

(:action get_twigs_leaves
  :parameters (?p - player ?loc - location ?tl - twigs_leaves)
  :precondition (and (at ?p ?loc) (has_twigs_leaves ?loc) (at ?tl ?loc))
  :effect (and (not (at ?tl ?loc)) (inventory ?p ?tl))
)

(:action build_shelter
  :parameters (?p - player ?lb - long_branch ?pb - propped_branches ?tl - twigs_leaves)
  :precondition (and (inventory ?p ?lb) (inventory ?p ?pb) (inventory ?p ?tl))
  :effect (has_shelter ?p)
)

(:action get_logs
  :parameters (?p - player ?loc - location ?log - logs)
  :precondition (and (at ?p ?loc) (has_logs ?loc) (at ?log ?loc))
  :effect (and (not (at ?log ?loc)) (inventory ?p ?log))
)

(:action get_dry_materials
  :parameters (?p - player ?loc - location ?dm - dry_materials)
  :precondition (and (at ?p ?loc) (at ?dm ?loc))
  :effect (and (not (at ?dm ?loc)) (inventory ?p ?dm))
)

(:action build_teepee
  :parameters (?p - player ?log - logs ?dm - dry_materials)
  :precondition (and (inventory ?p ?log) (inventory ?p ?dm))
  :effect (inventory ?p ?tp - teepee)
)

(:action start_fire
  :parameters (?p - player ?tp - teepee ?log - logs ?dm - dry_materials)
  :precondition (and (inventory ?p ?tp) (inventory ?p ?log) (inventory ?p ?dm))
  :effect (has_fire ?p)
)

)