(:action go
  :parameters (?p - player ?loc1 - location ?dir - direction ?loc2 - location)
  :precondition (and (at ?p ?loc1) (connected ?loc1 ?dir ?loc2) (not (blocked ?loc1 ?dir ?loc2)))
  :effect (and (not (at ?p ?loc1)) (at ?p ?loc2))
)

(:action get
  :parameters (?p - player ?i - item ?loc - location)
  :precondition (and (at ?p ?loc) (at ?i ?loc))
  :effect (and (not (at ?i ?loc)) (inventory ?p ?i))
)

(:action breathe
  :parameters (?p - player)
  :precondition (calm ?p)
  :effect (calm ?p) ; no change in predicates
)

(:action liedown
  :parameters (?p - player)
  :precondition (calm ?p)
  :effect (and (laying ?p) (not (calm ?p)))
)

(:action swim
  :parameters (?p - player ?q - quicksand)
  :precondition (stuck ?p ?q)
  :effect (not (stuck ?p ?q))
)

(:action usestick
  :parameters (?p - player ?s - stick ?q - quicksand)
  :precondition (and (inventory ?p ?s) (stuck ?p ?q))
  :effect (not (stuck ?p ?q))
)

(:action rest
  :parameters (?p - player)
  :precondition (tired ?p)
  :effect (and (calm ?p) (not (tired ?p)))
)

(:action drop
  :parameters (?p - player ?i - item ?loc - location)
  :precondition (and (at ?p ?loc) (inventory ?p ?i))
  :effect (and (not (inventory ?p ?i)) (at ?i ?loc))
)

(:action check_ripples
  :parameters (?p - player ?loc - location)
  :precondition (at ?p ?loc)
  :effect (aware ?p ?loc)
)

(:action test_ground
  :parameters (?p - player ?loc - location)
  :precondition (at ?p ?loc)
  :effect (aware ?p ?loc)
)

(:action research
  :parameters (?p - player)
  :precondition (not (stuck ?p ?q))
  :effect (knowledgeable ?p)
)

(:action move_horizontally
  :parameters (?p - player ?q1 - quicksand ?q2 - quicksand)
  :precondition (stuck ?p ?q1)
  :effect (and (stuck ?p ?q2) (not (stuck ?p ?q1)))
)

)