(:action go
 :parameters (?player - player ?loc1 - location ?loc2 - location ?dir - direction)
 :precondition (and (at ?player ?loc1) (connected ?loc1 ?dir ?loc2) (not (blocked ?loc1 ?dir ?loc2)))
 :effect (and (not (at ?player ?loc1)) (at ?player ?loc2))
)

(:action get
 :parameters (?player - player ?item - item ?loc - location)
 :precondition (and (at ?item ?loc) (gettable ?item) (at ?player ?loc))
 :effect (and (inventory ?player ?item) (not (at ?item ?loc)))
)

(:action drop
 :parameters (?player - player ?item - item ?loc - location)
 :precondition (and (inventory ?player ?item) (at ?player ?loc))
 :effect (and (not (inventory ?player ?item)) (at ?item ?loc))
)

(:action get_water
 :parameters (?player - player ?loc - location ?water - water)
 :precondition (and (at ?player ?loc) (has_water_source ?loc))
 :effect (inventory ?player ?water)
)

(:action boil_water
 :parameters (?player - player ?water - water ?pot - pot)
 :precondition (and (inventory ?player ?water) (not (treated ?water)) (inventory ?player ?pot))
 :effect (treated ?water)
)

(:action collect_rain_water
 :parameters (?player - player ?loc - location ?water - water)
 :precondition (and (at ?player ?loc) (outdoors ?loc))
 :effect (inventory ?player ?water)
)

(:action loot_shelter
 :parameters (?player - player ?loc - location ?food - food)
 :precondition (and (at ?player ?loc) (is_occupied ?loc) (at ?food ?loc))
 :effect (and (inventory ?player ?food) (not (at ?food ?loc)))
)

(:action break_car_window
 :parameters (?player - player ?car - car ?food - food)
 :precondition (and (at ?player ?car) (has_windows ?car) (at ?food ?car))
 :effect (and (inventory ?player ?food) (not (has_windows ?car)))
)

(:action gofish
 :parameters (?player - player ?loc - location ?fishingpole - fishingpole ?fish - fish)
 :precondition (and (at ?player ?loc) (inventory ?player ?fishingpole) (haslake ?loc))
 :effect (inventory ?player ?fish)
)

(:action find_shelter
 :parameters (?player - player ?loc - location)
 :precondition (and (at ?player ?loc) (has_basement ?loc))
 :effect (in_shelter ?player)
)

(:action clean_wound
 :parameters (?player - player ?bandage - bandage)
 :precondition (and (is_injured ?player) (inventory ?player ?bandage))
 :effect (not (is_injured ?player))
)

(:action clean_others_wound
 :parameters (?player - player ?injured_player - player ?bandage - bandage)
 :precondition (and (is_injured ?injured_player) (inventory ?player ?bandage))
 :effect (not (is_injured ?injured_player))
)

(:action barter_food_for_healing
 :parameters (?player - player ?injured_player - player ?food - food)
 :precondition (and (is_injured ?injured_player) (inventory ?player ?food))
 :effect (and (not (is_injured ?injured_player)) (inventory ?injured_player ?food) (not (inventory ?player ?food)))
)

)