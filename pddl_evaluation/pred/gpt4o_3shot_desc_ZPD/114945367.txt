(:action go
  :parameters (?p - player ?loc1 - location ?loc2 - location ?d - direction)
  :precondition (and (at ?p ?loc1) (connected ?loc1 ?d ?loc2) (not (blocked ?loc1 ?d ?loc2)))
  :effect (and (at ?p ?loc2) (not (at ?p ?loc1)))
)

(:action get
  :parameters (?p - player ?i - item ?loc - location)
  :precondition (and (at ?p ?loc) (at ?i ?loc))
  :effect (and (inventory ?p ?i) (not (at ?i ?loc)))
)

(:action get_water
  :parameters (?p - player ?w - water ?loc - location)
  :precondition (and (at ?p ?loc) (has_water_source ?loc))
  :effect (inventory ?p ?w)
)

(:action strain_water
  :parameters (?p - player ?w - water ?c - cloth)
  :precondition (and (inventory ?p ?w) (inventory ?p ?c) (not (strained ?w)))
  :effect (strained ?w)
)

(:action boil_water
  :parameters (?p - player ?w - water ?c - container)
  :precondition (and (inventory ?p ?w) (inventory ?p ?c) (strained ?w) (not (treated ?w)))
  :effect (treated ?w)
)

(:action purify_in_sunlight
  :parameters (?p - player ?w - water)
  :precondition (and (inventory ?p ?w) (strained ?w) (not (treated ?w)))
  :effect (treated ?w)
)

(:action get_long_branch
  :parameters (?p - player ?b - long_branch ?loc - location)
  :precondition (and (at ?p ?loc) (has_branches ?loc))
  :effect (inventory ?p ?b)
)

(:action get_propped_branches
  :parameters (?p - player ?b - propped_branches ?loc - location)
  :precondition (and (at ?p ?loc) (has_branches ?loc))
  :effect (inventory ?p ?b)
)

(:action get_twigs_leaves
  :parameters (?p - player ?t - twigs_leaves ?loc - location)
  :precondition (and (at ?p ?loc) (has_twigs_leaves ?loc))
  :effect (inventory ?p ?t)
)

(:action build_shelter
  :parameters (?p - player ?b - long_branch ?pb - propped_branches ?tl - twigs_leaves)
  :precondition (and (inventory ?p ?b) (inventory ?p ?pb) (inventory ?p ?tl))
  :effect (and (has_shelter ?p) (not (inventory ?p ?b)) (not (inventory ?p ?pb)) (not (inventory ?p ?tl)))
)

(:action get_logs
  :parameters (?p - player ?log - logs ?loc - location)
  :precondition (and (at ?p ?loc) (has_logs ?loc))
  :effect (inventory ?p ?log)
)

(:action get_dry_materials
  :parameters (?p - player ?dm - dry_materials ?loc - location)
  :precondition (and (at ?p ?loc))
  :effect (inventory ?p ?dm)
)

(:action build_teepee
  :parameters (?p - player ?b - long_branch)
  :precondition (inventory ?p ?b)
  :effect (and (teepee) (not (inventory ?p ?b)))
)

(:action start_fire
  :parameters (?p - player ?log - logs ?dm - dry_materials)
  :precondition (and (inventory ?p ?log) (inventory ?p ?dm))
  :effect (and (has_fire ?p) (not (inventory ?p ?log)) (not (inventory ?p ?dm)))
)

)