(:action drive
 :parameters (?p - player ?car - item ?loc1 - location ?loc2 - location ?dir - direction)
 :precondition (and (is_car ?car) (at ?car ?loc1) (at ?p ?loc1) (connected ?loc1 ?dir ?loc2) (not (blocked ?loc1 ?dir ?loc2)) (driving ?p))
 :effect (and (at ?car ?loc2) (at ?p ?loc2) (not (at ?car ?loc1)) (not (at ?p ?loc1)))
)

(:action walk
 :parameters (?p - player ?loc1 - location ?loc2 - location ?dir - direction)
 :precondition (and (at ?p ?loc1) (connected ?loc1 ?dir ?loc2) (not (blocked ?loc1 ?dir ?loc2)))
 :effect (and (at ?p ?loc2) (not (at ?p ?loc1)))
)

(:action get_food
 :parameters (?p - player ?food - item ?loc - location)
 :precondition (and (is_nonperishable ?food) (at ?food ?loc) (is_supermarket ?loc) (at ?p ?loc))
 :effect (and (inventory ?p ?food) (not (at ?food ?loc)))
)

(:action get
 :parameters (?p - player ?item - item ?loc - location)
 :precondition (and (at ?item ?loc) (at ?p ?loc))
 :effect (and (inventory ?p ?item) (not (at ?item ?loc)))
)

(:action drop
 :parameters (?p - player ?item - item ?loc - location)
 :precondition (and (inventory ?p ?item) (at ?p ?loc))
 :effect (and (at ?item ?loc) (not (inventory ?p ?item)))
)

(:action make_plan
 :parameters (?p - player)
 :precondition (not (has_plan ?p))
 :effect (has_plan ?p)
)

(:action get_medicine
 :parameters (?p - player ?medicine - item ?loc - location)
 :precondition (and (is_medicine ?medicine) (at ?medicine ?loc) (is_pharmacy ?loc) (at ?p ?loc))
 :effect (and (inventory ?p ?medicine) (not (at ?medicine ?loc)))
)

(:action reinforce
 :parameters (?p - player ?material - item ?loc - location)
 :precondition (and (is_construction_material ?material) (inventory ?p ?material) (at ?p ?loc))
 :effect (and (reinforced ?loc) (not (inventory ?p ?material)))
)

(:action stay_in_shelter
 :parameters (?p - player ?loc - location)
 :precondition (and (at ?p ?loc) (is_underground ?loc))
 :effect (sheltered ?p)
)

(:action get_in_car
 :parameters (?p - player ?car - item ?loc - location)
 :precondition (and (is_car ?car) (at ?car ?loc) (at ?p ?loc))
 :effect (driving ?p)
)

)