(:action go
    :parameters (?player - player ?loc1 - location ?loc2 - location ?dir - direction)
    :precondition (and (at ?player ?loc1) (connected ?loc1 ?dir ?loc2) (not (blocked ?loc1 ?dir ?loc2)))
    :effect (and (not (at ?player ?loc1)) (at ?player ?loc2))
  )

(:action understand
    :parameters (?player - player ?concept - concept)
    :precondition (and)
    :effect (and (know ?player ?concept))
  )

(:action learn
    :parameters (?player - player ?skill - skill)
    :precondition (know ?player hacking)
    :effect (and (learned ?player ?skill))
  )

(:action get
    :parameters (?player - player ?item - item ?loc - location)
    :precondition (at ?player ?loc)
    :effect (inventory ?player ?item)
  )

(:action machine_secured
    :parameters (?player - player)
    :precondition (and (collected_all_info ?player))
    :effect (authorized ?player)
  )

(:action enumeration
    :parameters (?player - player)
    :precondition (authorized ?player)
    :effect (collected_all_info ?player)
  )

(:action got_all_info
    :parameters (?player - player)
    :precondition (collected_all_info ?player)
    :effect (authorized ?player)
  )

(:action ping
    :parameters (?player - player ?item - ping_succeed)
    :precondition (and)
    :effect (inventory ?player ?item)
  )

(:action check_email_server
    :parameters (?player - player ?item - server_checked)
    :precondition (inventory ?player ?item)
    :effect (and (not (inventory ?player ?item)))
  )

(:action reached_the_remote_system
    :parameters (?player - player)
    :precondition (and)
    :effect (and (authorized ?player))
  )

(:action run_port_scan
    :parameters (?player - player ?item - network_scanner)
    :precondition (inventory ?player ?item)
    :effect (port_scanned ?player)
  )

(:action found_path_in_system
    :parameters (?player - player)
    :precondition (port_scanned ?player)
    :effect (authorized ?player)
  )

(:action contact_and_trick_a_user
    :parameters (?player - player)
    :precondition (know ?player hacking)
    :effect (tricked_user_password ?player)
  )

(:action crack_password_by_social_engineering
    :parameters (?player - player)
    :precondition (tricked_user_password ?player)
    :effect (password_cracked ?player)
  )

(:action send_fake_email
    :parameters (?player - player)
    :precondition (know ?player hacking)
    :effect (user_trusted_fake_email ?player)
  )

(:action crack_password_by_phishing
    :parameters (?player - player)
    :precondition (user_trusted_fake_email ?player)
    :effect (password_cracked ?player)
  )

(:action create_fake_wifi_access
    :parameters (?player - player)
    :precondition (know ?player hacking)
    :effect (people_use_unencrypted_connection ?player)
  )

(:action crack_password_by_arp_spoofing
    :parameters (?player - player)
    :precondition (people_use_unencrypted_connection ?player)
    :effect (password_cracked ?player)
  )

(:action crack_password_by_brute_force
    :parameters (?player - player)
    :precondition (know ?player hacking)
    :effect (password_cracked ?player)
  )

(:action gain_access_with_password
    :parameters (?player - player)
    :precondition (password_cracked ?player)
    :effect (authorized ?player)
  )

(:action create_buffer_overflow
    :parameters (?player - player)
    :precondition (know ?player hacking)
    :effect (is_root_user ?player)
  )

(:action take_control_of_system
    :parameters (?player - player)
    :precondition (is_root_user ?player)
    :effect (authorized ?player)
  )

(:action install_malware
    :parameters (?player - player ?item - malware)
    :precondition (authorized ?player)
    :effect (inventory ?player ?item)
  )

(:action bypass_standard_authentication_system
    :parameters (?player - player)
    :precondition (know ?player hacking)
    :effect (authorized ?player)
  )

(:action not_let_administrator_know
    :parameters (?player - player)
    :precondition (authorized ?player)
    :effect (not (administrator_know_compromised ?player))
  )

(:action make_no_change_to_website
    :parameters (?player - player)
    :precondition (authorized ?player)
    :effect (website_unchanged ?player)
  )

(:action create_fewest_file
    :parameters (?player - player)
    :precondition (authorized ?player)
    :effect (not (create_more_file_than_need ?player))
  )

(:action delete_additional_users
    :parameters (?player - player)
    :precondition (authorized ?player)
    :effect (not (additional_users ?player))
  )

(:action hardcode_password
    :parameters (?player - player)
    :precondition (authorized ?player)
    :effect (hardcoded_secret_password ?player)
  )

(:action track_covered
    :parameters (?player - player)
    :precondition (authorized ?player)
    :effect (and (not (administrator_know_compromised ?player)) (website_unchanged ?player))
  )

(:action learn_concepts
    :parameters (?player - player)
    :precondition (and)
    :effect (and (know_hacking ?player) (know_ethics ?player))
  )

(:action learn_internet
    :parameters (?player - player)
    :precondition (and)
    :effect (know_internet ?player)
  )

(:action learn_programming
    :parameters (?player - player ?skill - skill)
    :precondition (and (or (eq ?skill html) (eq ?skill cpp) (eq ?skill py) (eq ?skill php) (eq ?skill bash) (eq ?skill assembly)) (authorized ?player))
    :effect (learned ?player ?skill)
  )

(:action learn_unix
    :parameters (?player - player)
    :precondition (and)
    :effect (know_unix ?player)
  )

(:action become_skilled
    :parameters (?player - player)
    :precondition (and)
    :effect (and (learned ?player hacking) (learned ?player unix))
  )

)