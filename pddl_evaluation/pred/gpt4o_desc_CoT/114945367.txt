(:action go
   :parameters (?p - player ?dir - direction ?loc1 ?loc2 - location)
   :precondition (and (at ?p ?loc1) (connected ?loc1 ?dir ?loc2) (not (blocked ?loc1 ?dir ?loc2)))
   :effect (and (at ?p ?loc2) (not (at ?p ?loc1)))
  )

(:action get
   :parameters (?p - player ?item - item ?loc - location)
   :precondition (and (at ?p ?loc) (at ?item ?loc))
   :effect (and (inventory ?p ?item) (not (at ?item ?loc)))
  )

(:action get_water
   :parameters (?p - player ?loc - location ?water - water)
   :precondition (and (at ?p ?loc) (has_water_source ?loc))
   :effect (inventory ?p ?water)
  )

(:action strain_water
   :parameters (?p - player ?water - water ?cloth - cloth)
   :precondition (and (inventory ?p ?water) (inventory ?p ?cloth))
   :effect (strained ?water)
  )

(:action boil_water
   :parameters (?p - player ?water - water ?container - container)
   :precondition (and (inventory ?p ?water) (strained ?water) (inventory ?p ?container) (has_fire ?p))
   :effect (treated ?water)
  )

(:action purify_in_sunlight
   :parameters (?p - player ?water - water ?loc - location)
   :precondition (and (at ?p ?loc) (inventory ?p ?water) (strained ?water))
   :effect (treated ?water)
  )

(:action get_long_branch
   :parameters (?p - player ?loc - location ?branch - long_branch)
   :precondition (and (at ?p ?loc) (has_branches ?loc))
   :effect (inventory ?p ?branch)
  )

(:action get_propped_branches
   :parameters (?p - player ?loc - location ?branches - propped_branches)
   :precondition (and (at ?p ?loc) (has_branches ?loc))
   :effect (inventory ?p ?branches)
  )

(:action get_twigs_leaves
   :parameters (?p - player ?loc - location ?tl - twigs_leaves)
   :precondition (and (at ?p ?loc) (has_twigs_leaves ?loc))
   :effect (inventory ?p ?tl)
  )

(:action build_shelter
   :parameters (?p - player ?branch - long_branch ?props - propped_branches ?tl - twigs_leaves ?loc - location)
   :precondition (and (at ?p ?loc) (inventory ?p ?branch) (inventory ?p ?props) (inventory ?p ?tl))
   :effect (and (has_shelter ?p) (not (inventory ?p ?branch)) (not (inventory ?p ?props)) (not (inventory ?p ?tl)))
  )

(:action get_logs
   :parameters (?p - player ?loc - location ?logs - logs)
   :precondition (and (at ?p ?loc) (has_logs ?loc))
   :effect (inventory ?p ?logs)
  )

(:action get_dry_materials
   :parameters (?p - player ?loc - location ?dm - twigs_leaves)
   :precondition (and (at ?p ?loc) (has_twigs_leaves ?loc))
   :effect (inventory ?p ?dm)
  )

(:action build_teepee
   :parameters (?p - player ?logs - logs ?dm - twigs_leaves ?loc - location)
   :precondition (and (at ?p ?loc) (inventory ?p ?logs) (inventory ?p ?dm))
   :effect (and (has_shelter ?p) (not (inventory ?p ?logs)) (not (inventory ?p ?dm)))
  )

(:action start_fire
   :parameters (?p - player ?loc - location ?twigs_leaves - twigs_leaves ?logs - logs)
   :precondition (and (at ?p ?loc) (inventory ?p ?twigs_leaves) (inventory ?p ?logs))
   :effect (and (has_fire ?p) (not (inventory ?p ?twigs_leaves)) (not (inventory ?p ?logs)))
  )

)