(:action go
  :parameters (?p - player ?curLoc - location ?dir - direction ?nextLoc - location)
  :precondition (and (at ?p ?curLoc) (connected ?curLoc ?dir ?nextLoc) (not (blocked ?curLoc ?dir ?nextLoc)))
  :effect (and (at ?p ?nextLoc) (not (at ?p ?curLoc)))
)

(:action get
  :parameters (?p - player ?i - item ?loc - location)
  :precondition (and (at ?i ?loc) (at ?p ?loc))
  :effect (and (inventory ?p ?i) (not (at ?i ?loc)))
)

(:action get_bamboo_container
  :parameters (?p - player ?loc - location)
  :precondition (and (at ?p ?loc) (has_bamboo ?loc))
  :effect (inventory ?p bamboo_container)
)

(:action collect_rain_water
  :parameters (?p - player ?loc - location)
  :precondition (and (at ?p ?loc) (inventory ?p bamboo_container) (has_rainfall ?loc))
  :effect (inventory ?p water)
)

(:action create_fire
  :parameters (?p - player ?loc - location)
  :precondition (and (at ?p ?loc) (inventory ?p wood) (inventory ?p stone))
  :effect (and (at fire ?loc) (not (inventory ?p wood)) (not (inventory ?p stone)))
)

(:action treat_water
  :parameters (?p - player ?loc - location)
  :precondition (and (at ?p ?loc) (inventory ?p water) (at fire ?loc) (not (treated water)))
  :effect (treated water)
)

(:action drink_water
  :parameters (?p - player ?w - water)
  :precondition (and (inventory ?p ?w) (treated ?w) (is dehydrated ?p))
  :effect (and (not (is dehydrated ?p)) (not (inventory ?p ?w)))
)

(:action drink_untreated_water
  :parameters (?p - player ?w - water)
  :precondition (and (inventory ?p ?w) (not (treated ?w)) (is dehydrated ?p))
  :effect (and (not (is dehydrated ?p)) (is ill ?p) (not (inventory ?p ?w)))
)

(:action create_sos_sign
  :parameters (?p - player ?loc - location)
  :precondition (and (at ?p ?loc) (inventory ?p stone) (inventory ?p wood))
  :effect (and (at sos_sign ?loc) (not (inventory ?p stone)) (not (inventory ?p wood)))
)

(:action pick_fruit
  :parameters (?p - player ?loc - location)
  :precondition (and (at ?p ?loc) (has_fruit ?loc))
  :effect (inventory ?p fruit)
)

(:action eat_fruit
  :parameters (?p - player ?f - fruit)
  :precondition (and (inventory ?p ?f) (is hungry ?p))
  :effect (and (not (is hungry ?p)) (not (inventory ?p ?f)))
)

(:action escape
  :parameters (?p - player ?loc - location)
  :precondition (and (at ?p basecamp) (at sos_sign basecamp))
  :effect (at ?p escaped)
)

)