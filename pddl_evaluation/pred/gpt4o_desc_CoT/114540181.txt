(:action go
        :parameters (?player - player ?loc1 - location ?dir - direction ?loc2 - location)
        :precondition (and 
            (at ?player ?loc1) 
            (connected ?loc1 ?dir ?loc2) 
            (not (blocked ?loc1 ?dir ?loc2))
        )
        :effect (and 
            (at ?player ?loc2) 
            (not (at ?player ?loc1))
        )
    )

(:action get
        :parameters (?player - player ?item - item ?loc - location)
        :precondition (and 
            (at ?player ?loc) 
            (at ?item ?loc)
        )
        :effect (and 
            (inventory ?player ?item) 
            (not (at ?item ?loc))
        )
    )

(:action get_bamboo_container
        :parameters (?player - player ?loc - location)
        :precondition (and 
            (at ?player ?loc) 
            (has_bamboo ?loc)
        )
        :effect (inventory ?player bamboo_container)
    )

(:action collect_rain_water
        :parameters (?player - player ?loc - location ?container - bamboo_container)
        :precondition (and 
            (at ?player ?loc) 
            (has_rainfall ?loc) 
            (inventory ?player ?container)
        )
        :effect (inventory ?player water)
    )

(:action create_fire
        :parameters (?player - player ?loc - location ?wood - wood ?stone - stone)
        :precondition (and 
            (at ?player ?loc) 
            (inventory ?player ?wood) 
            (inventory ?player ?stone)
        )
        :effect (at fire ?loc)
    )

(:action treat_water
        :parameters (?player - player ?loc - location ?water - water)
        :precondition (and 
            (at ?player ?loc) 
            (at fire ?loc) 
            (inventory ?player ?water)
        )
        :effect (treated ?water)
    )

(:action drink_water
        :parameters (?player - player ?water - water)
        :precondition (and 
            (inventory ?player ?water) 
            (treated ?water)
        )
        :effect (and 
            (not (is dehydrated ?player))
            (not (inventory ?player ?water))
            (treated ?water)
        )
    )

(:action drink_untreated_water
        :parameters (?player - player ?water - water)
        :precondition (inventory ?player ?water)
        :effect (and 
            (not (is dehydrated ?player))
            (is ill ?player)
            (not (inventory ?player ?water))
        )
    )

(:action create_sos_sign
        :parameters (?player - player ?loc - location ?stone - stone)
        :precondition (and 
            (at ?player ?loc) 
            (inventory ?player ?stone)
        )
        :effect (at sos_sign ?loc)
    )

(:action pick_fruit
        :parameters (?player - player ?loc - location ?fruit - fruit)
        :precondition (and 
            (at ?player ?loc) 
            (has_fruit ?loc)
        )
        :effect (inventory ?player ?fruit)
    )

(:action eat_fruit
        :parameters (?player - player ?fruit - fruit)
        :precondition (inventory ?player ?fruit)
        :effect (and 
            (not (is hungry ?player))
            (not (inventory ?player ?fruit))
        )
    )

(:action escape
        :parameters (?player - player ?loc - location)
        :precondition (at ?player ?loc)
        :effect (at ?player basecamp)
    )

)