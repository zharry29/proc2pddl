(:action go
 :parameters (?player - player ?loc1 - location ?loc2 - location ?dir - direction)
 :precondition (and (at ?player ?loc1) (connected ?loc1 ?dir ?loc2))
 :effect (and (at ?player ?loc2) (not (at ?player ?loc1)))
)

(:action get
 :parameters (?player - player ?item - item ?loc - location)
 :precondition (and (at ?player ?loc) (at ?item ?loc))
 :effect (and (inventory ?player ?item) (not (at ?item ?loc)))
)

(:action build_roof
 :parameters (?player - player ?log - log)
 :precondition (inventory ?player ?log)
 :effect (and (built roof) (not (inventory ?player ?log)))
)

(:action build_wall
 :parameters (?player - player ?sticks - small_sticks)
 :precondition (inventory ?player ?sticks)
 :effect (and (built wall) (not (inventory ?player ?sticks)))
)

(:action build_bed
 :parameters (?player - player ?leaves - leaves)
 :precondition (inventory ?player ?leaves)
 :effect (and (built bed) (not (inventory ?player ?leaves)))
)

(:action complete_shelter
 :parameters (?roof - roof ?wall - wall ?bed - bed)
 :precondition (and (built roof) (built wall) (built bed))
 :effect (built shelter)
)

(:action hunt_animal
 :parameters (?player - player ?stone - sharp_stone ?animal - animal)
 :precondition (inventory ?player ?stone)
 :effect (and (hunted ?animal))
)

(:action prepare_animal
 :parameters (?player - player ?stone - sharp_stone ?animal - animal)
 :precondition (and (inventory ?player ?stone) (hunted ?animal))
 :effect (treated ?animal)
)

(:action build_raft
 :parameters (?player - player ?materials - raft_draft)
 :precondition (inventory ?player ?materials)
 :effect (and (built raft) (not (inventory ?player ?materials)))
)

(:action test_raft
 :parameters (?raft - raft_finished)
 :precondition (built ?raft)
 :effect (tested ?raft)
)

)