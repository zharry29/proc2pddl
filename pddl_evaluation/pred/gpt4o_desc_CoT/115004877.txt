(:action go
    :parameters (?player - player ?dir - direction ?loc1 - location ?loc2 - location)
    :precondition (and (at ?player ?loc1) (connected ?loc1 ?dir ?loc2))
    :effect (and (not (at ?player ?loc1)) (at ?player ?loc2))
)

(:action get
    :parameters (?player - player ?item - item ?loc - location)
    :precondition (and (at ?player ?loc) (at ?item ?loc))
    :effect (and (inventory ?player ?item) (not (at ?item ?loc)))
)

(:action cut_plant
    :parameters (?player - player ?plant - plant ?stalk - stalk ?scissors - scissors ?loc - location)
    :precondition (and (at ?player ?loc) (at ?plant ?loc) (inventory ?player ?scissors))
    :effect (and (inventory ?player ?stalk) (not (at ?plant ?loc)))
)

(:action peel_stalk
    :parameters (?player - player ?stalk - stalk ?shell - shell ?loc - location)
    :precondition (and (inventory ?player ?stalk) (inventory ?player ?shell))
    :effect (peeled ?stalk)
)

(:action cut_stalk_into_strips
    :parameters (?player - player ?stalk - stalk ?strip - strip ?scissors - scissors)
    :precondition (and (inventory ?player ?stalk) (peeled ?stalk) (inventory ?player ?scissors))
    :effect (and (inventory ?player ?strip) (not (inventory ?player ?stalk)))
)

(:action soak_strips
    :parameters (?player - player ?strip - strip ?loc - location)
    :precondition (and (at ?player ?loc) (inventory ?player ?strip) (has_water ?loc))
    :effect (clean ?strip)
)

(:action dry_out_strips
    :parameters (?player - player ?strip - strip ?loc - location)
    :precondition (and (at ?player ?loc) (inventory ?player ?strip) (clean ?strip))
    :effect (dry ?strip)
)

(:action weave_strips_into_sheet
    :parameters (?player - player ?strip - strip ?sheet - sheet)
    :precondition (and (inventory ?player ?strip) (dry ?strip))
    :effect (and (inventory ?player ?sheet) (not (inventory ?player ?strip)))
)

(:action press_sheet
    :parameters (?player - player ?sheet - sheet ?loc - location)
    :precondition (and (at ?player ?loc) (inventory ?player ?sheet) (has_hard_surface ?loc))
    :effect (flat ?sheet)
)

(:action flatten_sheet
    :parameters (?player - player ?sheet - sheet)
    :precondition (and (inventory ?player ?sheet) (flat ?sheet))
    :effect (very_flat ?sheet)
)

(:action polish_sheet
    :parameters (?player - player ?sheet - sheet)
    :precondition (and (inventory ?player ?sheet) (very_flat ?sheet))
    :effect (smooth ?sheet)
)

(:action cut_sheet
    :parameters (?player - player ?sheet - sheet ?papyrus - papyrus ?scissors - scissors)
    :precondition (and (inventory ?player ?sheet) (smooth ?sheet) (inventory ?player ?scissors))
    :effect (and (inventory ?player ?papyrus) (not (inventory ?player ?sheet)))
)

)