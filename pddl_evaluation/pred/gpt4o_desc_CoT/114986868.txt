(:action go
    :parameters (?player - player ?loc1 - location ?dir - direction ?loc2 - location)
    :precondition (and 
                    (at ?player ?loc1)
                    (connected ?loc1 ?dir ?loc2)
                    (not (blocked ?loc1 ?dir ?loc2))
                  )
    :effect (and 
              (not (at ?player ?loc1))
              (at ?player ?loc2)
            )
  )

(:action get
    :parameters (?player - player ?item - item ?loc - location)
    :precondition (and 
                    (at ?player ?loc)
                    (at ?item ?loc)
                  )
    :effect (and 
              (not (at ?item ?loc))
              (inventory ?player ?item)
            )
  )

(:action drop
    :parameters (?player - player ?item - item ?loc - location)
    :precondition (and 
                    (at ?player ?loc)
                    (inventory ?player ?item)
                  )
    :effect (and 
              (not (inventory ?player ?item))
              (at ?item ?loc)
            )
  )

(:action collect_water
    :parameters (?player - player ?container - container ?loc - location ?water - water)
    :precondition (and 
                    (at ?player ?loc)
                    (has_water ?loc)
                    (inventory ?player ?container)
                  )
    :effect (inventory ?player ?water)
  )

(:action filter_water
    :parameters (?player - player ?water - water)
    :precondition (inventory ?player ?water)
    :effect (filtered ?water)
  )

(:action boil_water
    :parameters (?player - player ?water - water ?loc - location)
    :precondition (and 
                    (inventory ?player ?water)
                    (at ?player ?loc)
                    (has_fire ?loc)
                  )
    :effect (boiled ?water)
  )

(:action drink_water
    :parameters (?player - player ?water - water)
    :precondition (and 
                    (inventory ?player ?water)
                    (boiled ?water)
                    (thirsty ?player)
                  )
    :effect (not (thirsty ?player))
  )

(:action get_wood
    :parameters (?player - player ?wood - wood ?loc - location)
    :precondition (and 
                    (at ?player ?loc)
                    (has_tree ?loc)
                  )
    :effect (inventory ?player ?wood)
  )

(:action make_drill
    :parameters (?player - player ?wood - wood ?drill - drill)
    :precondition (inventory ?player ?wood)
    :effect (and 
              (not (inventory ?player ?wood))
              (inventory ?player ?drill)
            )
  )

(:action make_fire
    :parameters (?player - player ?drill - drill ?loc - location)
    :precondition (and 
                    (inventory ?player ?drill)
                    (at ?player ?loc)
                  )
    :effect (has_fire ?loc)
  )

(:action make_spear
    :parameters (?player - player ?wood - wood ?spear - spear)
    :precondition (inventory ?player ?wood)
    :effect (and 
              (not (inventory ?player ?wood))
              (inventory ?player ?spear)
            )
  )

(:action catch_fish
    :parameters (?player - player ?spear - spear ?fish - fish ?loc - location)
    :precondition (and 
                    (at ?player ?loc)
                    (has_fish ?loc)
                    (inventory ?player ?spear)
                  )
    :effect (inventory ?player ?fish)
  )

(:action cook_fish
    :parameters (?player - player ?fish - fish ?loc - location)
    :precondition (and 
                    (inventory ?player ?fish)
                    (at ?player ?loc)
                    (has_fire ?loc)
                  )
    :effect (cooked ?fish)
  )

(:action eat_fish
    :parameters (?player - player ?fish - fish)
    :precondition (and 
                    (inventory ?player ?fish)
                    (cooked ?fish)
                    (hungry ?player)
                  )
    :effect (not (hungry ?player))
  )

(:action get_foliage
    :parameters (?player - player ?foliage - foliage ?loc - location)
    :precondition (and 
                    (at ?player ?loc)
                    (has_tree ?loc)
                  )
    :effect (inventory ?player ?foliage)
  )

(:action build_shelter
    :parameters (?player - player ?wood - wood ?foliage - foliage ?loc - location)
    :precondition (and 
                    (inventory ?player ?wood)
                    (inventory ?player ?foliage)
                    (at ?player ?loc)
                  )
    :effect (and 
              (not (inventory ?player ?wood))
              (not (inventory ?player ?foliage))
              (has_shelter ?loc)
            )
  )

(:action survive
    :parameters (?player - player ?spear - spear ?loc - location)
    :precondition (and 
                    (at ?player ?loc)
                    (inventory ?player ?spear)
                    (has_shelter ?loc)
                    (has_fire ?loc)
                  )
    :effect (safe ?player ?loc)
  )

)