(:action splash_swim
 :parameters (?player - player ?loc1 - location ?loc2 - location)
 :precondition (and
    (at ?player ?loc1)
    (is_water ?loc1)
    (connected ?loc1 ?dir ?loc2)
    (is_water ?loc2)
 )
 :effect (and
    (not (at ?player ?loc1))
    (at ?player ?loc2)
 )
)

(:action swim
 :parameters (?player - player ?loc1 - location ?loc2 - location)
 :precondition (and
    (at ?player ?loc1)
    (is_water ?loc1)
    (connected ?loc1 ?dir ?loc2)
    (is_water ?loc2)
 )
 :effect (and
    (not (at ?player ?loc1))
    (at ?player ?loc2)
 )
)

(:action get
 :parameters (?player - player ?item - item ?loc - location)
 :precondition (and
    (at ?player ?loc)
    (at ?item ?loc)
 )
 :effect (and
    (inventory ?player ?item)
 )
)

(:action onboard
 :parameters (?player - player ?loc - location ?ship - ship)
 :precondition (and
    (at ?player ?loc)
    (at ?ship ?loc)
 )
 :effect (and
    (on ?player ?ship)
 )
)

(:action defend
 :parameters (?player - player ?shark - shark)
 :precondition (and
    (attacked ?player ?shark)
 )
 :effect (and
    (defending ?player)
 )
)

(:action spot_ship
 :parameters (?player - player ?loc - location ?ship - ship)
 :precondition (and
    (at ?player ?loc)
    (at ?ship ?loc)
 )
 :effect (and
    (visible ?ship)
 )
)

(:action spot_shark
 :parameters (?player - player ?loc - location ?shark - shark)
 :precondition (and
    (at ?player ?loc)
    (at ?shark ?loc)
 )
 :effect (and
    (visible ?shark)
 )
)

(:action self_mobilize
 :parameters (?player - player)
 :precondition (and
    (defending ?player)
    (wounded ?player)
 )
 :effect (and
    (not (wounded ?player))
 )
)

(:action medicare
 :parameters (?player - player ?loc - location ?item - item)
 :precondition (and
    (at ?player ?loc)
    (inventory ?player ?item)
    (wounded ?player)
 )
 :effect (and
    (not (wounded ?player))
 )
)

(:action attack_vulnerable
 :parameters (?player - player ?shark - shark ?part - part ?item - item)
 :precondition (and
    (visible ?shark)
    (vulnerable ?part)
    (inventory ?player ?item)
    (sharp ?item)
 )
 :effect (and
    (fleed ?shark)
 )
)

(:action knockout
 :parameters (?player - player ?shark - shark ?part - part ?item - item)
 :precondition (and
    (visible ?shark)
    (vulnerable ?part)
    (inventory ?player ?item)
    (heavy ?item)
 )
 :effect (and
    (dizzy ?shark)
 )
)

)