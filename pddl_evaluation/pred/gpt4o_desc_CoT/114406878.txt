(:action go
  :parameters (?player - player ?dir - direction ?loc1 ?loc2 - location)
  :precondition (and (at ?player ?loc1) 
                     (connected ?loc1 ?dir ?loc2)
                     (not (blocked ?loc1 ?dir ?loc2)))
  :effect (and (not (at ?player ?loc1))
               (at ?player ?loc2)))

(:action get
  :parameters (?player - player ?item - item ?loc - location)
  :precondition (and (at ?item ?loc) (at ?player ?loc))
  :effect (and (inventory ?player ?item) (not (at ?item ?loc))))

(:action get_grass
  :parameters (?player - player ?grass - grass ?loc - location)
  :precondition (and (at ?grass ?loc) (at ?player ?loc) (not (dry ?grass)))
  :effect (and (inventory ?player ?grass) (not (at ?grass ?loc))))

(:action dry_grass
  :parameters (?player - player ?grass - grass)
  :precondition (and (inventory ?player ?grass) (not (dry ?grass)))
  :effect (dry ?grass))

(:action cluster_grass
  :parameters (?player - player ?dry_grass - grass ?tinder - tinder)
  :precondition (and (inventory ?player ?dry_grass) (dry ?dry_grass))
  :effect (and (inventory ?player ?tinder) (not (inventory ?player ?dry_grass))))

(:action break_branch
  :parameters (?player - player ?loc - location ?kindling - kindling)
  :precondition (and (at ?player ?loc) (has_large_dry_branch ?loc))
  :effect (inventory ?player ?kindling))

(:action log_oak
  :parameters (?player - player ?loc - location ?log - log)
  :precondition (and (at ?player ?loc) (has_dry_oak ?loc))
  :effect (inventory ?player ?log))

(:action get_log
  :parameters (?player - player ?log - log ?loc - location)
  :precondition (and (at ?log ?loc) (at ?player ?loc))
  :effect (and (inventory ?player ?log) (not (at ?log ?loc))))

(:action stack_log
  :parameters (?player - player ?log - log ?fuel - fuel ?loc - location)
  :precondition (and (inventory ?player ?log) (dry ?log) (at ?player ?loc) (has_dry_even_area ?loc))
  :effect (and (inventory ?player ?fuel) (not (inventory ?player ?log))))

(:action build_teepee
  :parameters (?player - player ?tinder - tinder ?kindling - kindling ?fuel - fuel ?teepee - teepee ?loc - location)
  :precondition (and (inventory ?player ?tinder) (inventory ?player ?kindling) (inventory ?player ?fuel) 
                     (at ?player ?loc) (has_dry_even_area ?loc))
  :effect (and (at ?teepee ?loc) (not (inventory ?player ?tinder)) (not (inventory ?player ?kindling)) (not (inventory ?player ?fuel))))

(:action get_wood
  :parameters (?player - player ?wood - wood ?loc - location)
  :precondition (and (at ?wood ?loc) (at ?player ?loc))
  :effect (and (inventory ?player ?wood) (not (at ?wood ?loc))))

(:action get_branch
  :parameters (?player - player ?branch - branch ?loc - location)
  :precondition (and (at ?branch ?loc) (at ?player ?loc))
  :effect (and (inventory ?player ?branch) (not (at ?branch ?loc))))

(:action ignite_wood
  :parameters (?player - player ?wood - wood ?branch - branch)
  :precondition (and (inventory ?player ?wood) (inventory ?player ?branch) (not (ignited ?wood)))
  :effect (ignited ?wood))

(:action ignite_teepee
  :parameters (?player - player ?wood - wood ?teepee - teepee ?loc - location)
  :precondition (and (inventory ?player ?wood) (ignited ?wood) (at ?teepee ?loc) (at ?player ?loc))
  :effect (ignited ?teepee))

(:action get_pot
  :parameters (?player - player ?pot - pot ?loc - location)
  :precondition (and (at ?pot ?loc) (at ?player ?loc))
  :effect (and (inventory ?player ?pot) (not (at ?pot ?loc))))

(:action get_water
  :parameters (?player - player ?pot - pot ?water - water ?loc - location)
  :precondition (and (inventory ?player ?pot) (at ?player ?loc) (has_pond ?loc))
  :effect (and (inventory ?player ?water) (not (boiled ?water))))

(:action boil_water
  :parameters (?player - player ?pot - pot ?water - water ?teepee - teepee ?loc - location)
  :precondition (and (inventory ?player ?pot) (inventory ?player ?water) (at ?teepee ?loc) (at ?player ?loc) (ignited ?teepee) (not (boiled ?water)))
  :effect (boiled ?water))

)