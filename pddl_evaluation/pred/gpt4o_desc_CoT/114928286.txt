(:action go
   :parameters (?player - player ?from - location ?to - location ?dir - direction)
   :precondition (and (at ?player ?from) (connected ?from ?dir ?to) (not (blocked ?from ?dir ?to)))
   :effect (and (not (at ?player ?from)) (at ?player ?to))
  )

(:action get
   :parameters (?player - player ?item - object ?location - location)
   :precondition (and (at ?player ?location) (at ?item ?location) (is_gettable ?item))
   :effect (and (inventory ?player ?item) (not (at ?item ?location)))
  )

(:action lay_masking_tape
   :parameters (?player - player ?tape - masking_tape ?location - location)
   :precondition (and (inventory ?player ?tape) (at ?player ?location))
   :effect (has_ten_strips ?tape)
  )

(:action make_tosses_column
   :parameters (?player - player ?paper - paper)
   :precondition (inventory ?player ?paper)
   :effect (tosses_column ?paper)
  )

(:action make_crosses_column
   :parameters (?player - player ?paper - paper)
   :precondition (inventory ?player ?paper)
   :effect (crosses_column ?paper)
  )

(:action thaw_food
   :parameters (?player - player ?food - object ?location - location)
   :precondition (and (inventory ?player ?food) (is_food_item ?food) (frozen ?food))
   :effect (not (frozen ?food))
  )

(:action throw
   :parameters (?player - player ?food - object ?location - location)
   :precondition (and (inventory ?player ?food) (is_long ?food) (is_thin ?food) (is_hard ?food) (is_straight ?food) (is_stiff ?food) (has_throwing_distance ?food) (not (frozen ?food)))
   :effect (thrown_food_items ?location)
  )

(:action record_tosses
   :parameters (?player - player ?paper - paper)
   :precondition (and (inventory ?player ?paper) (tosses_column ?paper) (thrown_food_items ?location))
   :effect (tosses_recorded ?paper)
  )

(:action record_crosses
   :parameters (?player - player ?paper - paper)
   :precondition (and (inventory ?player ?paper) (crosses_column ?paper) (thrown_food_items ?location))
   :effect (crosses_recorded ?paper)
  )

(:action divide_crosses
   :parameters (?player - player ?paper - paper)
   :precondition (and (inventory ?player ?paper) (crosses_recorded ?paper))
   :effect (crosses_divided ?paper)
  )

(:action calculate_pi
   :parameters (?player - player ?paper - paper)
   :precondition (and (inventory ?player ?paper) (crosses_divided ?paper) (tosses_recorded ?paper))
   :effect (calculated_pi ?player)
  )

(:action be_amazed
   :parameters (?player - player)
   :precondition (calculated_pi ?player)
   :effect (amazed ?player)
  )

)