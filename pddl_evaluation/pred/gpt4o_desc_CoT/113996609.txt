(:action go
    :parameters (?player - player ?from - location ?to - location ?dir - direction)
    :precondition (and (at ?player ?from) (connected ?from ?dir ?to))
    :effect (and (not (at ?player ?from)) (at ?player ?to))
  )

(:action get
    :parameters (?player - player ?item - item ?loc - location)
    :precondition (and (at ?player ?loc) (at ?item ?loc))
    :effect (and (inventory ?player ?item) (not (at ?item ?loc)))
  )

(:action get_water
    :parameters (?player - player ?loc - location ?water - water)
    :precondition (and (at ?player ?loc) (has_water_source ?loc))
    :effect (inventory ?player ?water)
  )

(:action chop_wood
    :parameters (?player - player ?wood - wood ?loc - location)
    :precondition (and (at ?player ?loc) (has_wood ?loc))
    :effect (inventory ?player ?wood)
  )

(:action carve_groove
    :parameters (?player - player ?wood - wood)
    :precondition (inventory ?player ?wood)
    :effect (groove ?wood)
  )

(:action light_fire
    :parameters (?player - player ?wood - wood ?loc - location)
    :precondition (and (at ?player ?loc) (can_light_fire ?loc) (groove ?wood) (inventory ?player ?wood))
    :effect (and (has_fire ?loc) (not (inventory ?player ?wood)))
  )

(:action build_shelter
    :parameters (?player - player ?wood - wood ?loc - location)
    :precondition (and (at ?player ?loc) (is_safe ?loc) (inventory ?player ?wood))
    :effect (and (has_shelter ?loc) (not (inventory ?player ?wood)))
  )

(:action clean_water
    :parameters (?player - player ?water - water ?loc - location)
    :precondition (and (at ?player ?loc) (has_fire ?loc) (inventory ?player ?water))
    :effect (treated ?water)
  )

(:action drink_water
    :parameters (?player - player ?water - water)
    :precondition (and (inventory ?player ?water) (treated ?water))
    :effect (and (drank ?water) (not (inventory ?player ?water)))
  )

(:action find_other_survivors
    :parameters (?player - player ?survivor - survivor ?loc - location)
    :precondition (at ?player ?loc)
    :effect (has_friend ?survivor)
  )

(:action build_raft
    :parameters (?player - player ?wood - wood ?vine - vines ?loc - location)
    :precondition (and (at ?player ?loc) (at_ocean ?loc) (inventory ?player ?wood) (inventory ?player ?vine))
    :effect (and (has_escaped ?player) (not (inventory ?player ?wood)) (not (inventory ?player ?vine)))
  )

(:action make_weapon
    :parameters (?player - player ?wood - wood ?rock - rock)
    :precondition (and (inventory ?player ?wood) (inventory ?player ?rock))
    :effect (and (inventory ?player ?spear) (not (inventory ?player ?wood)) (not (inventory ?player ?rock)))
  )

(:action hunt_fish
    :parameters (?player - player ?spear - spear ?loc - location ?fish - fish)
    :precondition (and (at ?player ?loc) (has_fish ?loc) (inventory ?player ?spear))
    :effect (inventory ?player ?fish)
  )

(:action cook_fish
    :parameters (?player - player ?fish - fish ?loc - location)
    :precondition (and (at ?player ?loc) (has_fire ?loc) (inventory ?player ?fish))
    :effect (and (cooked ?fish) (not (inventory ?player ?fish)))
  )

)