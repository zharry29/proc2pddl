    (:action go
        :parameters (?player - player ?from - location ?to - location ?dir - direction)
        :precondition (and 
            (at ?player ?from)
            (connected ?from ?dir ?to)
            (not (blocked ?from ?dir ?to))
        )
        :effect (and
            (not (at ?player ?from))
            (at ?player ?to)
        )
    )

    (:action get
        :parameters (?player - player ?item - items ?loc - location)
        :precondition (and
            (at ?player ?loc)
            (at ?item ?loc)
            (is_gettable ?item)
        )
        :effect (and
            (inventory ?player ?item)
            (not (at ?item ?loc))
        )
    )

    (:action lay_masking_tape
        :parameters (?player - player ?tape - masking_tape ?loc - location)
        :precondition (and
            (inventory ?player ?tape)
            (is_clear ?loc)
            (has_ten_strips ?tape)
        )
        :effect (and
            (at ?tape ?loc)
            (not (inventory ?player ?tape))
        )
    )

    (:action make_tosses_column
        :parameters (?player - player ?paper - paper ?pen - pen ?loc - location)
        :precondition (and
            (inventory ?player ?paper)
            (inventory ?player ?pen)
            (at ?player ?loc)
            (not (tosses_column ?paper))
        )
        :effect (tosses_column ?paper)
    )

    (:action make_crosses_column
        :parameters (?player - player ?paper - paper ?pen - pen ?loc - location)
        :precondition (and
            (inventory ?player ?paper)
            (inventory ?player ?pen)
            (at ?player ?loc)
            (not (crosses_column ?paper))
        )
        :effect (crosses_column ?paper)
    )

    (:action thaw_food
        :parameters (?player - player ?item - items)
        :precondition (and
            (inventory ?player ?item)
            (frozen ?item)
            (is_food_item ?item)
        )
        :effect (not (frozen ?item))
    )

    (:action throw
        :parameters (?player - player ?food - items ?loc - location)
        :precondition (and
            (inventory ?player ?food)
            (is_food_item ?food)
            (not (frozen ?food))
            (is_long ?food)
            (is_thin ?food)
            (is_hard ?food)
            (is_straight ?food)
            (is_stiff ?food)
            (has_throwing_distance ?food)
            (at ?player ?loc)
        )
        :effect (thrown_food_items ?loc)
    )

    (:action record_tosses
        :parameters (?player - player ?paper - paper ?pen - pen)
        :precondition (and
            (inventory ?player ?paper)
            (inventory ?player ?pen)
            (tosses_column ?paper)
            (thrown_food_items ?player)
        )
        :effect (tosses_recorded ?paper)
    )

    (:action record_crosses
        :parameters (?player - player ?paper - paper ?pen - pen)
        :precondition (and
            (inventory ?player ?paper)
            (inventory ?player ?pen)
            (crosses_column ?paper)
            (thrown_food_items ?player)
        )
        :effect (crosses_recorded ?paper)
    )

    (:action divide_crosses
        :parameters (?player - player ?paper - paper)
        :precondition (and
            (inventory ?player ?paper)
            (crosses_recorded ?paper)
        )
        :effect (crosses_divided ?paper)
    )

    (:action calculate_pi
        :parameters (?player - player ?paper - paper)
        :precondition (and
            (inventory ?player ?paper)
            (tosses_recorded ?paper)
            (crosses_divided ?paper)
        )
        :effect (calculated_pi ?player)
    )

    (:action be_amazed
        :parameters (?player - player)
        :precondition (calculated_pi ?player)
        :effect (amazed ?player)
    )
)