(:action go
   :parameters (?player - player ?dir - direction ?from - location ?to - location)
   :precondition (and (at ?player ?from)
                      (connected ?from ?dir ?to)
                      (not (blocked ?from ?dir ?to)))
   :effect (and (not (at ?player ?from))
                (at ?player ?to)))

(:action get
   :parameters (?player - player ?item - item ?loc - location)
   :precondition (and (at ?player ?loc)
                      (at ?item ?loc))
   :effect (and (not (at ?item ?loc))
                (inventory ?player ?item)))

(:action get_grass
   :parameters (?player - player ?grass - grass ?loc - location)
   :precondition (and (at ?player ?loc)
                      (at ?grass ?loc))
   :effect (and (not (at ?grass ?loc))
                (inventory ?player ?grass)
                (dry ?grass)))

(:action dry_grass
   :parameters (?player - player ?grass - grass)
   :precondition (and (inventory ?player ?grass))
   :effect (dry ?grass))

(:action cluster_grass
   :parameters (?player - player ?tinder - tinder ?grass - grass)
   :precondition (and (inventory ?player ?grass)
                      (dry ?grass))
   :effect (and (not (inventory ?player ?grass))
                (inventory ?player ?tinder)
                (dry ?tinder)))

(:action break_branch
   :parameters (?player - player ?branch - branch ?loc - location)
   :precondition (and (at ?player ?loc)
                      (has_large_dry_branch ?loc))
   :effect (and (inventory ?player ?branch)
                (dry ?branch)))

(:action log_oak
   :parameters (?player - player ?log - log ?loc - location)
   :precondition (and (at ?player ?loc)
                      (has_dry_oak ?loc))
   :effect (and (inventory ?player ?log)
                (dry ?log)))

(:action get_log
   :parameters (?player - player ?log - log ?loc - location)
   :precondition (and (at ?player ?loc)
                      (at ?log ?loc))
   :effect (and (not (at ?log ?loc))
                (inventory ?player ?log)
                (dry ?log)))

(:action stack_log
   :parameters (?player - player ?fuel - fuel ?log - log)
   :precondition (and (inventory ?player ?log))
   :effect (and (not (inventory ?player ?log))
                (inventory ?player ?fuel)
                (dry ?fuel)))

(:action build_teepee
   :parameters (?player - player ?teepee - teepee ?tinder - tinder ?kindling - kindling ?fuel - fuel ?loc - location)
   :precondition (and (at ?player ?loc)
                      (inventory ?player ?tinder)
                      (dry ?tinder)
                      (inventory ?player ?kindling)
                      (dry ?kindling)
                      (inventory ?player ?fuel)
                      (dry ?fuel)
                      (has_dry_even_area ?loc))
   :effect (and (not (inventory ?player ?tinder))
                (not (inventory ?player ?kindling))
                (not (inventory ?player ?fuel))
                (at ?teepee ?loc)))

(:action get_wood
   :parameters (?player - player ?wood - wood ?loc - location)
   :precondition (and (at ?player ?loc)
                      (at ?wood ?loc))
   :effect (and (not (at ?wood ?loc))
                (inventory ?player ?wood)
                (dry ?wood)))

(:action get_branch
   :parameters (?player - player ?branch - branch ?loc - location)
   :precondition (and (at ?player ?loc)
                      (at ?branch ?loc))
   :effect (and (not (at ?branch ?loc))
                (inventory ?player ?branch)))

(:action ignite_wood
   :parameters (?player - player ?wood - wood)
   :precondition (and (inventory ?player ?wood)
                      (dry ?wood))
   :effect (ignited ?wood))

(:action ignite_teepee
   :parameters (?player - player ?teepee - teepee ?wood - wood ?loc - location)
   :precondition (and (at ?player ?loc)
                      (at ?teepee ?loc)
                      (inventory ?player ?wood)
                      (ignited ?wood))
   :effect (and (not (inventory ?player ?wood))
                (ignited ?teepee)))

(:action get_pot
   :parameters (?player - player ?pot - pot ?loc - location)
   :precondition (and (at ?player ?loc)
                      (at ?pot ?loc))
   :effect (and (not (at ?pot ?loc))
                (inventory ?player ?pot)))

(:action get_water
   :parameters (?player - player ?water - water ?loc - location)
   :precondition (and (at ?player ?loc)
                      (at ?water ?loc))
   :effect (and (not (at ?water ?loc))
                (inventory ?player ?water)))

(:action boil_water
   :parameters (?player - player ?water - water ?pot - pot ?teepee - teepee)
   :precondition (and (inventory ?player ?water)
                      (inventory ?player ?pot)
                      (ignited ?teepee))
   :effect (boiled ?water))

)