(:action gather_info
  :parameters (?p - player)
  :precondition (not (has_info ?p))
  :effect (has_info ?p)
)

(:action create_secret
  :parameters (?sc - secret_society ?p - player)
  :precondition (has_info ?p)
  :effect (has_secret ?sc)
)

(:action remove_member
  :parameters (?p - player ?sc - secret_society)
  :precondition (and (in ?p ?sc) (not (is_trusted ?p ?sc)))
  :effect (not (in ?p ?sc))
)

(:action check_if_cult
  :parameters (?sc - secret_society)
  :precondition (has_enough_members ?sc)
  :effect (is_cult ?sc)
)

(:action set_meeting_location
  :parameters (?sc - secret_society ?p - player)
  :precondition (and (has_secret ?sc) (has_info ?p))
  :effect (has_location ?sc)
)

(:action set_dress_code
  :parameters (?sc - secret_society ?p - player)
  :precondition (and (has_secret ?sc) (has_location ?sc) (has_info ?p))
  :effect (has_dress_code ?sc)
)

(:action create_name
  :parameters (?sc - secret_society ?p - player)
  :precondition (has_info ?p)
  :effect (has_name ?sc)
)

(:action secret_society_is_ready
  :parameters (?sc - secret_society)
  :precondition (and (has_name ?sc) (has_secret ?sc) (has_location ?sc) (has_dress_code ?sc))
  :effect (society_is_ready ?sc)
)

(:action initiate_new_member
  :parameters (?p - player ?sc - secret_society)
  :precondition (and (not (in ?p ?sc)) (society_is_ready ?sc))
  :effect (in ?p ?sc)
)

(:action teach_new_member_secret
  :parameters (?p - player ?sc - secret_society)
  :precondition (and (in ?p ?sc) (is_trusted ?p ?sc) (not (knows_secret ?p ?sc)))
  :effect (knows_secret ?p ?sc)
)

(:action remove_member
  :parameters (?p - player ?sc - secret_society)
  :precondition (and (in ?p ?sc) (not (is_trusted ?p ?sc)))
  :effect (not (in ?p ?sc))
)

(:action check_if_cult
  :parameters (?sc - secret_society)
  :precondition (society_is_ready ?sc)
  :effect (when (large_enough ?sc) (is_cult ?sc))
)

(:action compare_players
  :parameters (?p1 - player ?p2 - player)
  :precondition (true)
  :effect (equals ?p1 ?p2)
)

(:action make_friends
  :parameters (?p1 - player ?p2 - player)
  :precondition (not (equals ?p1 ?p2))
  :effect (friends ?p1 ?p2)
)

(:action earn_trust
  :parameters (?p - player ?sc - secret_society)
  :precondition (in ?p ?sc)
  :effect (is_trusted ?p ?sc)
)

(:action lose_trust
  :parameters (?p - player ?sc - secret_society)
  :precondition (is_trusted ?p ?sc)
  :effect (not (is_trusted ?p ?sc))
)

(:action test_loyalty_grant
  :parameters (?p - player ?sc - secret_society)
  :precondition (in ?p ?sc)
  :effect (when (test_passed ?p) (is_trusted ?p ?sc))
)

)