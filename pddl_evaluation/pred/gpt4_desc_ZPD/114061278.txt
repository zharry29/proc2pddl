(:action get
   :parameters (?item - item)
   :precondition (not (inventory ?item))
   :effect (inventory ?item)
)

(:action poke
    :parameters (?c - coconut ?tool - tool)
    :precondition (and (not (has_eyes_poked ?c)) (inventory ?tool))
    :effect (has_eyes_poked ?c)
)

(:action flip
    :parameters (?c - coconut ?cw - container_without_water)
    :precondition (and (has_eyes_poked ?c) (not (is_item_container_with_water ?cw)))
    :effect (is_item_container_with_water ?cw)
)

(:action wrap
    :parameters (?c - coconut ?t - towel)
    :precondition (and (has_eyes_poked ?c) (inventory ?t))
    :effect (is_item_wrapped_coconut ?c)
)

(:action hit
    :parameters (?c - coconut_wrapped ?m - mallet)
    :precondition (and (is_item_wrapped_coconut ?c) (inventory ?m))
    :effect (is_item_broken_coconut ?c)
)

(:action free
    :parameters (?c - coconut_broken ?k - tool) ; Assuming tool as knife
    :precondition (and (is_item_broken_coconut ?c) (inventory ?k))
    :effect (is_item_coconut_meat ?c)
)

(:action remove_fiber
    :parameters (?c - coconut_meat ?p - peeler)
    :precondition (and (is_item_coconut_meat ?c) (inventory ?p))
    :effect (is_item_coconut_meat_peeled ?c)
)

)