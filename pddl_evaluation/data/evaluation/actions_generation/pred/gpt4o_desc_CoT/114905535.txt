(:action go
  :parameters (?player - player ?loc1 - location ?dir - direction ?loc2 - location)
  :precondition (and
    (at ?player ?loc1)
    (connected ?loc1 ?dir ?loc2)
    (not (blocked ?loc1 ?dir ?loc2))
  )
  :effect (and
    (not (at ?player ?loc1))
    (at ?player ?loc2)
  )
)

(:action get
  :parameters (?player - player ?item - item ?loc - location)
  :precondition (and
    (at ?player ?loc)
    (at ?item ?loc)
  )
  :effect (and
    (not (at ?item ?loc))
    (inventory ?player ?item)
  )
)

(:action get_water
  :parameters (?player - player ?loc - location ?water - water ?container - container)
  :precondition (and
    (at ?player ?loc)
    (has_water ?loc)
  )
  :effect (and
    (inventory ?player ?container)
    (treated ?water) ; Assume water is decontaminated by default.
  )
)

(:action bag_plant
  :parameters (?player - player ?plant - plant ?loc - location ?bag - bag)
  :precondition (and
    (at ?player ?loc)
    (at ?plant ?loc)
    (inventory ?player ?bag)
  )
  :effect (bagged ?plant)
)

(:action wait_and_gather_bagged_plant
  :parameters (?player - player ?plant - plant ?bag - bag)
  :precondition (and
    (bagged ?plant)
  )
  :effect (inventory ?player ?plant)
)

(:action gather_tinder
  :parameters (?player - player ?tinder - tinder ?loc - location)
  :precondition (and
    (at ?player ?loc)
    (has_tinder ?loc)
  )
  :effect (and
    (inventory ?player ?tinder)
    (not (has_tinder ?loc))
  )
)

(:action build_campfire
  :parameters (?player - player ?wood - wood ?loc - location)
  :precondition (and
    (at ?player ?loc)
    (inventory ?player ?wood)
  )
  :effect (and
    (not (inventory ?player ?wood))
    (at campfire ?loc)
  )
)

(:action light_campfire
  :parameters (?player - player ?campfire - campfire ?loc - location ?tinder - tinder)
  :precondition (and
    (at ?player ?loc)
    (at ?campfire ?loc)
    (inventory ?player ?tinder)
  )
  :effect (lit ?campfire)
)

(:action make_spear
  :parameters (?player - player ?wood - wood ?sharp_stone - sharp_stone ?spear - spear)
  :precondition (and
    (inventory ?player ?wood)
    (inventory ?player ?sharp_stone)
  )
  :effect (and
    (not (inventory ?player ?wood))
    (not (inventory ?player ?sharp_stone))
    (inventory ?player ?spear)
  )
)

(:action spear_fish
  :parameters (?player - player ?location - location ?fish - fish ?spear - spear)
  :precondition (and
    (at ?player ?location)
    (has_fish ?location)
    (inventory ?player ?spear)
  )
  :effect (and
    (inventory ?player ?fish)
  )
)

(:action cook_fish
  :parameters (?player - player ?fish - fish ?campfire - campfire ?location - location)
  :precondition (and
    (at ?player ?location)
    (at ?campfire ?location)
    (lit ?campfire)
    (inventory ?player ?fish)
  )
  :effect (cooked ?fish)
)

(:action wet_tinder
  :parameters (?player - player ?tinder - tinder ?location - location ?water - water)
  :precondition (and
    (at ?player ?location)
    (inventory ?player ?tinder)
    (has_water ?location)
  )
  :effect (wet ?tinder)
)

(:action make_smoke_signal
  :parameters (?player - player ?campfire - campfire ?location - location ?tinder - tinder)
  :precondition (and
    (at ?player ?location)
    (at ?campfire ?location)
    (lit ?campfire)
    (wet ?tinder)
  )
  :effect (signaling ?campfire)
)

)