(:action go
  :parameters (?player - player ?loc1 - location ?dir - direction ?loc2 - location)
  :precondition (and (at ?player ?loc1) 
                     (connected ?loc1 ?dir ?loc2) 
                     (not (blocked ?loc1 ?dir ?loc2)))
  :effect (and (not (at ?player ?loc1)) 
               (at ?player ?loc2)))

(:action get
  :parameters (?player - player ?item - item ?loc - location)
  :precondition (and (at ?player ?loc) 
                     (at ?item ?loc) 
                     (gettable ?item))
  :effect (and (not (at ?item ?loc)) 
               (inventory ?player ?item)))

(:action drop
  :parameters (?player - player ?item - item ?loc - location)
  :precondition (and (at ?player ?loc) 
                     (inventory ?player ?item))
  :effect (and (not (inventory ?player ?item)) 
               (at ?item ?loc)))

(:action get_water
  :parameters (?player - player ?water - water ?loc - location)
  :precondition (and (at ?player ?loc) 
                     (has_water_source ?loc))
  :effect (inventory ?player ?water))

(:action boil_water
  :parameters (?player - player ?water - water ?pot - pot)
  :precondition (and (inventory ?player ?water) 
                     (inventory ?player ?pot) 
                     (not (treated ?water)))
  :effect (treated ?water))

(:action collect_rain_water
  :parameters (?player - player ?water - water)
  :precondition (not (treated ?water))
  :effect (inventory ?player ?water))

(:action loot_shelter
  :parameters (?player - player ?food - food ?shelter - location)
  :precondition (and (in_shelter ?player) 
                     (at ?food ?shelter) 
                     (is_occupied ?shelter))
  :effect (and (not (at ?food ?shelter)) 
               (inventory ?player ?food)))

(:action break_car_window
  :parameters (?player - player ?food - food ?car - car)
  :precondition (and (at ?player ?car) 
                     (at ?food ?car) 
                     (has_windows ?car))
  :effect (and (not (at ?food ?car)) 
               (inventory ?player ?food)))

(:action gofish
  :parameters (?player - player ?fish - fish ?fishingpole - fishingpole ?loc - location)
  :precondition (and (at ?player ?loc) 
                     (inventory ?player ?fishingpole) 
                     (haslake ?loc))
  :effect (inventory ?player ?fish))

(:action find_shelter
  :parameters (?player - player ?loc - location)
  :precondition (and (at ?player ?loc) 
                     (has_basement ?loc))
  :effect (in_shelter ?player))

(:action clean_wound
  :parameters (?player - player ?bandage - bandage)
  :precondition (and (is_injured ?player) 
                     (inventory ?player ?bandage))
  :effect (and (not (is_injured ?player))))

(:action clean_others_wound
  :parameters (?player - player ?other_player - player ?bandage - bandage)
  :precondition (and (is_injured ?other_player) 
                     (inventory ?player ?bandage))
  :effect (and (not (is_injured ?other_player))))

(:action barter_food_for_healing
  :parameters (?player - player ?food - food)
  :precondition (and (is_injured ?player) 
                     (inventory ?player ?food))
  :effect (and (not (is_injured ?player)) 
               (not (inventory ?player ?food))))

)