   (:action drive
      :parameters (?p - player ?l1 - location ?d - direction ?l2 - location ?c - item)
      :precondition (and 
         (at ?l1 ?c)
         (connected ?l1 ?d ?l2)
         (is_car ?c)
         (not (blocked ?l1 ?d ?l2))
         (driving ?p)
      )
      :effect (and 
         (at ?p ?l2) 
         (not (at ?p ?l1))
      )
   )
   (:action walk
      :parameters (?p - player ?l1 - location ?d - direction ?l2 - location)
      :precondition (and 
         (connected ?l1 ?d ?l2)
         (not (blocked ?l1 ?d ?l2)) 
         (at ?p ?l1) 
      )
      :effect (and 
         (at ?p ?l2)
         (not (at ?p ?l1))
      )
   )

   (:action get_food
      :parameters (?p - player ?food - item ?loc - location)
      :precondition (and 
         (at ?p ?loc) 
         (at ?food ?loc) 
         (is_nonperishable ?food)
         (is_supermarket ?loc)
      )
      :effect (and 
         (inventory ?p ?food)
         (not (at ?food ?loc))
      )
   )
   (:action get
      :parameters (?p - player ?item - item ?l1 - location)
      :precondition (and 
         (at ?p ?l1) 
         (at ?item ?l1)
      )
      :effect (and 
         (inventory ?p ?item)
         (not (at ?item ?l1))
      )
   )

   (:action drop
      :parameters (?p - player ?item - item ?l1 - location)
      :precondition (and 
         (at ?p ?l1)
         (inventory ?p ?item)
      )
      :effect (and 
         (at ?item ?l1)
         (not (inventory ?p ?item))
      )
   )

   (:action make_plan
      :parameters (?p - player)
      :precondition (not (has_plan ?p))
      :effect (has_plan ?p)
   )

   (:action get_medicine
      :parameters (?p - player ?medicine - item ?loc - location)
      :precondition (and 
         (at ?p ?loc)
         (at ?medicine ?loc)
         (is_medicine ?medicine)
         (is_pharmacy ?loc)
      )
      :effect (and 
         (inventory ?p ?medicine)
         (not (at ?medicine ?loc))
      )
   )

   (:action reinforce
      :parameters (?p - player ?l1 - location ?material - item)
      :precondition (and 
         (at ?p ?l1)
         (inventory ?p ?material)
         (is_construction_material ?material)
      )
      :effect
         (sheltered ?p)
   )

   (:action stay_in_shelter
      :parameters (?p - player ?shelter - location)
      :precondition (and 
         (at ?p ?shelter)
         (is_underground ?shelter)
      )
      :effect (sheltered ?p)
   )

   (:action get_in_car
      :parameters (?p - player ?car - item ?l1 - location)
      :precondition (and 
         (at ?p ?l1)
         (at ?car ?l1)
         (is_car ?car)
      )
      :effect (driving ?p)
   )
)