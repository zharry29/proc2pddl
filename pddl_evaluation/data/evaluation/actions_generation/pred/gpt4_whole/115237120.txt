(:action go
   :parameters (?player - player ?dir - direction ?loc1 - location ?loc2 - location)
   :precondition (and (at ?player ?loc1) (connected ?loc1 ?dir ?loc2) (not (blocked ?loc1 ?dir ?loc2)))
   :effect (and (not (at ?player ?loc1)) (at ?player ?loc2))
)

(:action get
   :parameters (?player - player ?item - item ?loc - location)
   :precondition (and (at ?player ?loc) (gettable ?item) (at ?item ?loc))
   :effect (and (not (at ?item ?loc)) (inventory ?player ?item))
)

(:action drop
   :parameters (?player - player ?item - item ?loc - location)
   :precondition (and (at ?player ?loc) (inventory ?player ?item))
   :effect (and (not (inventory ?player ?item)) (at ?item ?loc))
)

(:action get_water
   :parameters (?player - player ?water - water ?loc - location)
   :precondition (and (at ?player ?loc) (has_water_source ?loc))
   :effect (inventory ?player ?water)
)

(:action boil_water
   :parameters (?player - player ?water - water ?loc - location ?pot - pot)
   :precondition (and (inventory ?player ?water) (inventory ?player ?pot) (at ?player ?loc))
   :effect (and (not (inventory ?player ?water)) (treated ?water) (inventory ?player ?water))
)

(:action collect_rain_water
   :parameters (?player - player ?water - water ?loc - location)
   :precondition (and (at ?player ?loc) (outdoors ?loc))
   :effect (inventory ?player ?water)
)

(:action loot_shelter
   :parameters (?player - player ?item - item ?loc - location)
   :precondition (and (at ?player ?loc) (is_occupied ?loc))
   :effect (inventory ?player ?item)
)

(:action break_car_window
   :parameters (?player - player ?loc - location ?car - car)
   :precondition (and (at ?player ?loc) (has_windows ?car))
   :effect (and (not (has_windows ?car)) (at ?rock - rock ?loc))
)

(:action gofish
   :parameters (?player - player ?fish - fish ?loc - location ?pole - fishingpole)
   :precondition (and (at ?player ?loc) (haslake ?loc) (inventory ?player ?pole))
   :effect (inventory ?player ?fish)
)

(:action find_shelter
   :parameters (?player - player ?loc - location)
   :precondition (and (at ?player ?loc) (has_basement ?loc))
   :effect (in_shelter ?player)
)

(:action clean_wound
   :parameters (?player - player ?bandage - bandage)
   :precondition (and (is_injured ?player) (inventory ?player ?bandage))
   :effect (and (not (is_injured ?player)) (not (inventory ?player ?bandage)))
)

(:action clean_others_wound
   :parameters (?player - player ?other - player ?bandage - bandage)
   :precondition (and (is_injured ?other) (inventory ?player ?bandage))
   :effect (and (not (is_injured ?other)) (not (inventory ?player ?bandage)))
)

(:action barter_food_for_healing
   :parameters (?player - player ?food - food ?other - player)
   :precondition (and (is_injured ?player) (inventory ?player ?food))
   :effect (and (not (is_injured ?player)) (not (inventory ?player ?food)))
)

)