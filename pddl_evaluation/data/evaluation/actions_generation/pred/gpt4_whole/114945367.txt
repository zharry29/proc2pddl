(:action go
   :parameters (?p - player ?dir - direction ?loc1 - location ?loc2 - location)
   :precondition (and (at ?p ?loc1) (connected ?loc1 ?dir ?loc2) (not (blocked ?loc1 ?dir ?loc2)))
   :effect (and (not (at ?p ?loc1)) (at ?p ?loc2))
)

(:action get
   :parameters (?p - player ?item - item ?loc - location)
   :precondition (and (at ?p ?loc) (at ?item ?loc))
   :effect (and (not (at ?item ?loc)) (inventory ?p ?item))
)

(:action get_water
   :parameters (?p - player ?loc - location ?water - water ?container - container)
   :precondition (and (at ?p ?loc) (has_water_source ?loc) (inventory ?p ?container))
   :effect (and (not (strained ?water)) (not (treated ?water)) (inventory ?p ?water))
)

(:action strain_water
   :parameters (?p - player ?water - water ?cloth - cloth)
   :precondition (and (inventory ?p ?water) (inventory ?p ?cloth) (not (strained ?water)))
   :effect (strained ?water)
)

(:action boil_water
   :parameters (?p - player ?water - water)
   :precondition (and (inventory ?p ?water) (strained ?water) (has_fire ?p))
   :effect (treated ?water)
)

(:action purify_in_sunlight
   :parameters (?p - player ?water - water ?container - container)
   :precondition (and (inventory ?p ?water) (strained ?water) (inventory ?p ?container))
   :effect (treated ?water)
)

(:action get_long_branch
   :parameters (?p - player ?loc - location ?branch - long_branch)
   :precondition (and (at ?p ?loc) (has_branches ?loc))
   :effect (inventory ?p ?branch)
)

(:action get_propped_branches
   :parameters (?p - player ?loc - location ?branches - propped_branches)
   :precondition (and (at ?p ?loc) (has_branches ?loc))
   :effect (inventory ?p ?branches)
)

(:action get_twigs_leaves
   :parameters (?p - player ?loc - location ?twigs_leaves - twigs_leaves)
   :precondition (and (at ?p ?loc) (has_twigs_leaves ?loc))
   :effect (inventory ?p ?twigs_leaves)
)

(:action build_shelter
   :parameters (?p - player ?branch - long_branch ?branches - propped_branches ?twigs_leaves - twigs_leaves)
   :precondition (and (inventory ?p ?branch) (inventory ?p ?branches) (inventory ?p ?twigs_leaves))
   :effect (has_shelter ?p)
)

(:action get_logs
   :parameters (?p - player ?loc - location ?logs - logs)
   :precondition (and (at ?p ?loc) (has_logs ?loc))
   :effect (inventory ?p ?logs)
)

(:action get_dry_materials
   :parameters (?p - player ?loc - location ?materials - item)
   :precondition (and (at ?p ?loc))
   :effect (inventory ?p ?materials)
)

(:action build_teepee
   :parameters (?p - player ?logs - logs ?materials - item)
   :precondition (and (inventory ?p ?logs) (inventory ?p ?materials))
   :effect (has_teepee ?p)
)

(:action start_fire
   :parameters (?p - player ?teepee - teepee)
   :precondition (and (has_teepee ?p))
   :effect (has_fire ?p)
)

)