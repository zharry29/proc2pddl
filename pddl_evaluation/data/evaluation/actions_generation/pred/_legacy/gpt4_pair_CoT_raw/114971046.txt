(:action drive
:parameters (?p - player ?loc1 - location ?loc2 - location ?dir - direction ?car - item)
:precondition (and (at ?p ?loc1) (driving ?p) (connected ?loc1 ?dir ?loc2) (not (blocked ?loc1 ?dir ?loc2)) (inventory ?p ?car) (is_car ?car))
:effect (and (not (at ?p ?loc1)) (at ?p ?loc2))
)

(:action walk
:parameters (?p - player ?loc1 - location ?loc2 - location ?dir - direction)
:precondition (and (at ?p ?loc1) (not (driving ?p)) (connected ?loc1 ?dir ?loc2) (not (blocked ?loc1 ?dir ?loc2)))
:effect (and (not (at ?p ?loc1)) (at ?p ?loc2))
)

(:action get_food
:parameters (?p - player ?loc - location ?food - item)
:precondition (and (is_supermarket ?loc) (at ?p ?loc) (at ?food ?loc) (is_nonperishable ?food))
:effect (inventory ?p ?food)
)

(:action get
:parameters (?p - player ?obj - item ?loc - location)
:precondition (and (at ?p ?loc) (at ?obj ?loc))
:effect (inventory ?p ?obj)
)

(:action drop
:parameters (?p - player ?obj - item ?loc - location)
:precondition (and (at ?p ?loc) (inventory ?p ?obj))
:effect (and (not (inventory ?p ?obj)) (at ?obj ?loc))
)

(:action make_plan
:parameters (?p - player)
:precondition (not (has_plan ?p))
:effect (has_plan ?p)
)

(:action get_medicine
:parameters (?p - player ?loc - location ?medicine - item)
:precondition (and (is_pharmacy ?loc) (at ?p ?loc) (at ?medicine ?loc) (is_medicine ?medicine))
:effect (inventory ?p ?medicine)
)

(:action reinforce
:parameters (?p - player ?loc - location ?obj - item)
:precondition (and (is_home ?loc) (at ?p ?loc) (is_construction_material ?obj) (inventory ?p ?obj))
:effect (is_underground ?loc)
)

(:action stay_in_shelter
:parameters (?p - player ?loc - location)
:precondition (and (is_underground ?loc) (at ?p ?loc) (not (sheltered ?p)))
:effect (sheltered ?p)
)

(:action get_in_car
:parameters (?p - player ?car - item)
:precondition (and (inventory ?p ?car) (is_car ?car) (not (driving ?p)))
:effect (driving ?p)
)

)