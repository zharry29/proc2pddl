(:action go
   :parameters (?p - player ?loc1 - location ?dir - direction ?loc2 - location)
   :precondition (and (at ?p ?loc1) (connected ?loc1 ?dir ?loc2) (not (blocked ?loc1 ?dir ?loc2)))
   :effect (and (not (at ?p ?loc1)) (at ?p ?loc2))
)

(:action get
   :parameters (?p - player ?item - item ?loc - location)
   :precondition (and (at ?p ?loc) (at ?item ?loc))
   :effect (and (not (at ?item ?loc)) (inventory ?p ?item))
)

(:action breathe
   :parameters (?p - player)
   :precondition (not (calm ?p))
   :effect (calm ?p)
)

(:action liedown
   :parameters (?p - player)
   :precondition (not (laying ?p))
   :effect (laying ?p)
)

(:action swim
   :parameters (?p - player ?q - quicksand)
   :precondition (and (stuck ?p ?q) (laying ?p))
   :effect (and (not (stuck ?p ?q)) (at ?p (edge ?q)) (tired ?p))
)

(:action usestick
   :parameters (?p - player ?stick - stick ?q - quicksand)
   :precondition (and (stuck ?p ?q) (inventory ?p ?stick))
   :effect (and (not (stuck ?p ?q)) (at ?p (edge ?q)) (tired ?p))
)

(:action rest
   :parameters (?p - player)
   :precondition (tired ?p)
   :effect (not (tired ?p))
)

(:action drop
   :parameters (?p - player ?item - item ?loc - location)
   :precondition (and (at ?p ?loc) (inventory ?p ?item))
   :effect (and (not (inventory ?p ?item)) (at ?item ?loc))
)

(:action check_ripples
   :parameters (?p - player ?l - location)
   :precondition (at ?p ?l)
   :effect (aware ?p ?l)
)

(:action test_ground
   :parameters (?p - player ?l - location)
   :precondition (and (at ?p ?l) (has_quicksand ?l))
   :effect (aware ?p ?l)
)

(:action research
   :parameters (?p - player ?l - location)
   :precondition (at ?p ?l)
   :effect (aware ?p ?l)
)

(:action move_horizontally
   :parameters (?p - player ?dir - direction ?loc1 - location ?loc2 - location)
   :precondition (and (at ?p ?loc1) (connected ?loc1 ?dir ?loc2))
   :effect (and (not (at ?p ?loc1)) (at ?p ?loc2))
)

)