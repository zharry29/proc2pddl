(:action go
      :parameters (?p - player ?loc1 - location ?loc2 - location ?dir - direction)
      :precondition (and (at ?p ?loc1) (connected ?loc1 ?dir ?loc2) (not (blocked ?loc1 ?dir ?loc2)))
      :effect (and (at ?p ?loc2) (not (at ?p ?loc1))))

   (:action get
      :parameters (?p - player ?item - item ?loc - location)
      :precondition (and (at ?p ?loc) (at ?item ?loc))
      :effect (and (inventory ?p ?item) (not (at ?item ?loc))))

   (:action collect_water
      :parameters (?p - player ?loc - location ?container - container)
      :precondition (and (at ?p ?loc) (has_water_source ?loc) (inventory ?p ?container) (not (is_full ?container)))
      :effect (and (contains ?container water) (not (is_contaminated ?container))))

   (:action gather_sticks
      :parameters (?p - player ?loc - location)
      :precondition (and (at ?p ?loc) (has_tree ?loc) (has_sticks ?loc))
      :effect (inventory ?p sticks))

   (:action make_fire
      :parameters (?p - player ?loc - location ?sticks-fuel ?igniter - igniter)
      :precondition (and (at ?p ?loc) (inventory ?p ?sticks-fuel) (inventory ?p ?igniter))
      :effect (has_fire ?loc))

   (:action boil_water
      :parameters (?p - player ?loc - location ?container - container)
      :precondition (and (at ?p ?loc) (has_fire ?loc) (inventory ?p ?container) (contains ?container water) (is_contaminated ?container))
      :effect (not (is_contaminated ?container)))

   (:action cook_food
      :parameters (?p - player ?loc - location ?food - food)
      :precondition (and (at ?p ?loc) (has_fire ?loc) (inventory ?p ?food) (is_contaminated ?food))
      :effect (not (is_contaminated ?food)))
   (:action eat_poisoned_food
      :parameters (?p - player ?food - food)
      :precondition (and (inventory ?p ?food) (is_poisonous ?food) (is_hungry ?p))
      :effect (is_sick ?p))

   (:action eat_contaminated_food
      :parameters (?p - player ?food - food)
      :precondition (and (inventory ?p ?food) (is_contaminated ?food) (is_hungry ?p))
      :effect (is_sick ?p))

   (:action eat_food
      :parameters (?p - player ?food - food)
      :precondition (and (inventory ?p ?food) (not (is_contaminated ?food)) (not (is_poisonous ?food)) (is_hungry ?p))
      :effect (not (is_hungry ?p)))

   (:action drink_contaminated_water
      :parameters (?p - player ?container - container)
      :precondition (and (inventory ?p ?container) (contains ?container water) (is_contaminated ?container) (is_thirsty ?p))
      :effect (is_sick ?p))

   (:action drink_water
      :parameters (?p - player ?container - container)
      :precondition (and (inventory ?p ?container) (contains ?container water) (not (is_contaminated ?container)) (is_thirsty ?p))
      :effect (not (is_thirsty ?p)))

   (:action build_shelter
      :parameters (?p - player ?loc - location ?leaves - leaves)
      :precondition (and (at ?p ?loc) (inventory ?p ?leaves))
      :effect (has_shelter ?loc))

   (:action sleep_in_shelter
      :parameters (?p - player ?loc - location)
      :precondition (and (at ?p ?loc) (has_shelter ?loc) (is_tired ?p))
      :effect (not (is_tired ?p)))

)