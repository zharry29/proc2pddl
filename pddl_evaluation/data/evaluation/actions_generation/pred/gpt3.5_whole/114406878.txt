(:action go
   :parameters (?player - player ?loc1 - location ?dir - direction ?loc2 - location)
   :precondition (and 
                  (at ?player ?loc1)
                  (connected ?loc1 ?dir ?loc2)
                  (not (blocked ?loc1 ?dir ?loc2)))
   :effect (and 
               (at ?player ?loc2)
               (not (at ?player ?loc1))))

(:action get
   :parameters (?player - player ?item - item ?loc - location)
   :precondition (and 
                  (at ?player ?loc)
                  (at ?item ?loc))
   :effect (and 
               (inventory ?player ?item)
               (not (at ?item ?loc))))

(:action get_grass
   :parameters (?player - player ?loc - location)
   :precondition (and 
                  (at ?player ?loc)
                  (has_large_dry_branch ?loc))
   :effect (and 
               (inventory ?player grass)
               (not (has_large_dry_branch ?loc))))

(:action dry_grass
   :parameters (?loc - location)
   :precondition (has_large_dry_branch ?loc)
   :effect (not (has_large_dry_branch ?loc)))

(:action cluster_grass
   :parameters (?loc - location)
   :precondition (has_dry_even_area ?loc)
   :effect (not (has_dry_even_area ?loc)))

(:action break_branch
   :parameters (?player - player ?loc - location)
   :precondition (and 
                  (at ?player ?loc)
                  (has_dry_oak ?loc))
   :effect (and 
               (inventory ?player branch)
               (not (has_dry_oak ?loc))))

(:action log_oak
   :parameters (?loc - location)
   :precondition (has_dry_oak ?loc)
   :effect (not (has_dry_oak ?loc)))

(:action get_log
   :parameters (?player - player ?loc - location)
   :precondition (and 
                  (at ?player ?loc)
                  (log_oak ?loc))
   :effect (and 
               (inventory ?player log)
               (not (log_oak ?loc))))

(:action stack_log
   :parameters (?loc - location)
   :precondition (log_oak ?loc)
   :effect (not (log_oak ?loc)))

(:action build_teepee
   :parameters (?player - player ?loc - location)
   :precondition (and 
                  (at ?player ?loc)
                  (has_pond ?loc))
   :effect (and 
               (inventory ?player teepee)
               (not (has_pond ?loc))))

(:action get_wood
   :parameters (?player - player ?loc - location)
   :precondition (and 
                  (at ?player ?loc)
                  (teepee ?loc))
   :effect (and 
               (inventory ?player wood)
               (not (teepee ?loc))))

(:action get_branch
   :parameters (?player - player ?loc - location)
   :precondition (and 
                  (at ?player ?loc)
                  (has_pond ?loc))
   :effect (and 
               (inventory ?player branch)
               (not (has_pond ?loc))))

(:action ignite_wood
   :parameters (?player - player ?loc - location)
   :precondition (and 
                  (at ?player ?loc)
                  (inventory ?player wood)
                  (has_dry_even_area ?loc))
   :effect (and 
               (ignited wood)
               (not (inventory ?player wood))
               (not (has_dry_even_area ?loc))))

(:action ignite_teepee
   :parameters (?player - player ?loc - location)
   :precondition (and 
                  (at ?player ?loc)
                  (inventory ?player teepee))
   :effect (and 
               (ignited teepee)
               (not (inventory ?player teepee))))

(:action get_pot
   :parameters (?player - player ?loc - location)
   :precondition (and 
                  (at ?player ?loc)
                  (ignited teepee)
                  (has_pond ?loc))
   :effect (and 
               (inventory ?player pot)
               (not (ignited teepee))
               (not (has_pond ?loc))))

(:action get_water
   :parameters (?player - player ?loc - location)
   :precondition (and 
                  (at ?player ?loc)
                  (has_pond ?loc))
   :effect (and 
               (inventory ?player water)
               (not (has_pond ?loc))))

(:action boil_water
   :parameters (?player - player ?loc - location)
   :precondition (and 
                  (at ?player ?loc)
                  (inventory ?player pot)
                  (has_dry_even_area ?loc))
   :effect (and 
               (boiled water)
               (not (inventory ?player pot))
               (not (has_dry_even_area ?loc))))

)