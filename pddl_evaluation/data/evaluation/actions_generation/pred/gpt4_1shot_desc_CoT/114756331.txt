(:action go
    :parameters (?p - player ?loc1 - location ?dir - direction ?loc2 - location)
    :precondition (and (at ?p ?loc1) (connected ?loc1 ?dir ?loc2) (not (blocked ?loc1 ?dir ?loc2)))
    :effect (and (at ?p ?loc2) (not (at ?p ?loc1)))
)

(:action get
    :parameters (?p - player ?i - item)
    :precondition (at ?i ?p)
    :effect (inventory ?p ?i)
)

(:action breathe
    :parameters (?p - player)
    :precondition (calm ?p)
    :effect (increased_oxygen ?p)
)

(:action liedown
    :parameters (?p - player)
    :precondition (not (laying ?p))
    :effect (laying ?p)
)

(:action swim
    :parameters (?p - player ?q - quicksand)
    :precondition (and (stuck ?p ?q) (laying ?p) (not (tired ?p)))
    :effect (and (not (stuck ?p ?q)) (not (laying ?p)) (tired ?p))
)

(:action usestick
    :parameters (?p - player ?s - stick)
    :precondition (and (stuck ?p) (inventory ?p ?s))
    :effect (increased_force ?p)
)

(:action rest
    :parameters (?p - player)
    :precondition (tired ?p)
    :effect (and (calm ?p) (not (tired ?p)))
)

(:action drop
    :parameters (?p - player ?i - item)
    :precondition (inventory ?p ?i)
    :effect (not (inventory ?p ?i))
)

(:action check_ripples
    :parameters (?p - player ?l - location)
    :precondition (and (at ?p ?l) (has_ripples ?l))
    :effect (aware ?p ?l)
)

(:action test_ground
    :parameters (?p - player ?l - location)
    :precondition (at ?p ?l)
    :effect (if (has_quicksand ?l) (aware ?p ?l))
)

(:action research
    :parameters (?p - player ?l - location)
    :precondition (at ?p ?l)
    :effect (if (has_quicksand ?l) (aware ?p ?l))
)

(:action move_horizontally
    :parameters (?p - player)
    :precondition (stuck ?p)
    :effect (not (deep ?q))
)

)