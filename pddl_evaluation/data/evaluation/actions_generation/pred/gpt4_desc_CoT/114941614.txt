(:action go
  :parameters (?p - player ?loc1 - location ?dir - direction ?loc2 - location)
  :precondition (and (at ?p ?loc1) (connected ?loc1 ?dir ?loc2))
  :effect (and (not (at ?p ?loc1)) (at ?p ?loc2))
)

(:action get
  :parameters (?p - player ?item - item ?loc - location)
  :precondition (and (at ?p ?loc) (at ?item ?loc))
  :effect (and (not (at ?item ?loc)) (inventory ?p ?item))
)

(:action collect_water
  :parameters (?p - player ?loc - location ?container - container ?water - water)
  :precondition (and (at ?p ?loc) (has_water_source ?loc) (inventory ?p ?container) (not (is_full ?container)))
  :effect (and (contains ?container ?water) (is_full ?container))
)

(:action gather_sticks
  :parameters (?p - player ?loc - location ?sticks - sticks)
  :precondition (and (at ?p ?loc) (has_sticks ?loc))
  :effect (and (not (has_sticks ?loc)) (inventory ?p ?sticks))
)

(:action make_fire
  :parameters (?p - player ?loc - location ?sticks - sticks ?igniter - igniter)
  :precondition (and (at ?p ?loc) (inventory ?p ?sticks) (inventory ?p ?igniter))
  :effect (and (has_fire ?loc))
)

(:action boil_water
  :parameters (?p - player ?loc - location ?container - container ?water - water)
  :precondition (and (at ?p ?loc) (has_fire ?loc) (inventory ?p ?container) (contains ?container ?water) (is_contaminated ?water))
  :effect (not (is_contaminated ?water))
)

(:action cook_food
  :parameters (?p - player ?loc - location ?container - container ?food - food)
  :precondition (and (at ?p ?loc) (has_fire ?loc) (inventory ?p ?container) (contains ?container ?food) (is_contaminated ?food))
  :effect (not (is_contaminated ?food))
)

(:action eat_poisoned_food
  :parameters (?p - player ?food - food)
  :precondition (and (inventory ?p ?food) (is_poisonous ?food))
  :effect (and (is_sick ?p) (not (inventory ?p ?food)))
)

(:action eat_contaminated_food
  :parameters (?p - player ?food - food)
  :precondition (and (inventory ?p ?food) (is_contaminated ?food))
  :effect (and (is_sick ?p) (not (inventory ?p ?food)))
)

(:action eat_food
  :parameters (?p - player ?food - food)
  :precondition (and (inventory ?p ?food) (not (is_contaminated ?food)) (not (is_poisonous ?food)) (is_hungry ?p))
  :effect (and (not (is_hungry ?p)) (not (inventory ?p ?food)))
)

(:action drink_contaminated_water
  :parameters (?p - player ?container - container ?water - water)
  :precondition (and (inventory ?p ?container) (contains ?container ?water) (is_contaminated ?water))
  :effect (and (is_sick ?p) (not (contains ?container ?water)) (not (is_full ?container)))
)

(:action drink_water
  :parameters (?p - player ?container - container ?water - water)
  :precondition (and (inventory ?p ?container) (contains ?container ?water) (not (is_contaminated ?water)) (is_thirsty ?p))
  :effect (and (not (is_thirsty ?p)) (not (contains ?container ?water)) (not (is_full ?container)))
)

(:action build_shelter
  :parameters (?p - player ?loc - location ?sticks - sticks ?leaves - leaves)
  :precondition (and (at ?p ?loc) (has_tree ?loc) (inventory ?p ?sticks) (inventory ?p ?leaves))
  :effect (and (has_shelter ?loc))
)

(:action sleep_in_shelter
  :parameters (?p - player ?loc - location)
  :precondition (and (at ?p ?loc) (has_shelter ?loc) (is_tired ?p))
  :effect (and (not (is_tired ?p)))
)

)