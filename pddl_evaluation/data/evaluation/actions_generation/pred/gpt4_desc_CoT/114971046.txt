(:action drive
  :parameters (?p - player ?car - item ?start - location ?dir - direction ?end - location)
  :precondition (and (inventory ?p ?car) 
                      (is_car ?car) 
                      (driving ?p)
                      (connected ?start ?dir ?end)
                      (at ?p ?start))
  :effect (and (not (at ?p ?start))
               (at ?p ?end)))

(:action walk
  :parameters (?p - player ?start - location ?dir - direction ?end - location)
  :precondition (and (connected ?start ?dir ?end)
                      (at ?p ?start))
  :effect (and (not (at ?p ?start))
               (at ?p ?end)))

(:action get_food
  :parameters (?p - player ?loc - location ?item - item)
  :precondition (and (is_supermarket ?loc)
                      (is_nonperishable ?item)
                      (at ?p ?loc)
                      (at ?item ?loc))
  :effect (and (not (at ?item ?loc))
               (inventory ?p ?item)))

(:action get
  :parameters (?p - player ?loc - location ?item - item)
  :precondition (and (at ?p ?loc)
                      (at ?item ?loc))
  :effect (and (not (at ?item ?loc))
               (inventory ?p ?item)))

(:action drop
  :parameters (?p - player ?loc - location ?item - item)
  :precondition (and (at ?p ?loc)
                      (inventory ?p ?item))
  :effect (and (not (inventory ?p ?item))
               (at ?item ?loc)))

(:action make_plan
  :parameters (?p - player)
  :precondition (not (has_plan ?p))
  :effect (has_plan ?p))

(:action get_medicine
  :parameters (?p - player ?loc - location ?item - item)
  :precondition (and (is_pharmacy ?loc)
                      (is_medicine ?item)
                      (at ?p ?loc)
                      (at ?item ?loc))
  :effect (and (not (at ?item ?loc))
               (inventory ?p ?item)))

(:action reinforce
  :parameters (?p - player ?loc - location ?item - item)
  :precondition (and (inventory ?p ?item)
                      (is_construction_material ?item)
                      (at ?p ?loc))
  :effect (and (not (inventory ?p ?item))
               (sheltered ?p)))

(:action stay_in_shelter
  :parameters (?p - player ?loc - location)
  :precondition (and (at ?p ?loc)
                      (sheltered ?p))
  :effect (at ?p ?loc))

(:action get_in_car
  :parameters (?p - player ?item - item)
  :precondition (and (inventory ?p ?item)
                      (is_car ?item))
  :effect (driving ?p))

)