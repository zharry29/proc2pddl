(:action go
   :parameters (?player - player ?loc1 - location ?dir - direction ?loc2 - location)
   :precondition (and (at ?player ?loc1) (connected ?loc1 ?dir ?loc2) (not (blocked ?loc1 ?dir ?loc2)))
   :effect (and (not (at ?player ?loc1)) (at ?player ?loc2))
)

(:action get
   :parameters (?player - player ?item - item ?loc - location)
   :precondition (and (at ?player ?loc) (at ?item ?loc))
   :effect (and (not (at ?item ?loc)) (inventory ?player ?item))
)

(:action get_water
   :parameters (?player - player ?loc - location)
   :precondition (and (at ?player ?loc) (has_water_source ?loc))
   :effect (inventory ?player water)
)

(:action drop
   :parameters (?player - player ?item - item ?loc - location)
   :precondition (and (at ?player ?loc) (inventory ?player ?item))
   :effect (and (not (inventory ?player ?item)) (at ?item ?loc))
)

(:action clear_spider
   :parameters (?item - item)
   :precondition (has_bug ?item)
   :effect (not (has_bug ?item))
)

(:action insert_beam
   :parameters (?tree1 - tree ?tree2 - tree ?beam - beam)
   :precondition (and (has_split_in_trunk ?tree1) (has_split_in_trunk ?tree2) (long ?beam) (thick ?beam))
   :effect (and (not (at ?beam)) (frame))
)

(:action lean_branches
   :parameters (?frame - frame ?branches - branches)
   :precondition (and (frame) (branches))
   :effect (shelter)
)

(:action layer
   :parameters (?shelter - shelter ?twigs - twigs ?leaves - leaves)
   :precondition (and (shelter) (twigs) (leaves))
   :effect ()
)

(:action wash
   :parameters (?item - item)
   :precondition (and (edible ?item) (unwashed ?item))
   :effect (not (unwashed ?item))
)

(:action eat
   :parameters (?player - player ?item - item)
   :precondition (and (inventory ?player ?item) (edible ?item) (not (unwashed ?item)) (hungry ?player))
   :effect (not (hungry ?player))
)

(:action make_snare
   :parameters (?player - player ?wire - wire ?snare - snare)
   :precondition (inventory ?player ?wire)
   :effect (and (snare) (not (inventory ?player ?wire)))
)

(:action make_horizontal_bar
   :parameters (?bar - bar ?branch - branch)
   :precondition (branch)
   :effect (bar)
)

(:action hang_snare
   :parameters (?player - player ?snare - snare ?bar - bar ?loc - location)
   :precondition (and (inventory ?player ?snare) (bar) (made_by_animal ?loc))
   :effect (and (not (inventory ?player ?snare)) (hanged ?snare) (at ?snare ?loc))
)

)