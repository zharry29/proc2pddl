(:requirements :strips :typing)

(:types
)

(:predicates
    (has_secret ?sc - secret_society) 
    (has_info ?p - player) 
    (has_name ?sc - secret_society) 
    (has_location ?sc - secret_society) 
    (has_dress_code ?sc - secret_society) 
    (society_is_ready ?sc - secret_society) 
    (in ?p - player ?sc - secret_society) 
    (is_trusted ?p - player ?sc - secret_society) 
    (equals ?p1 - player ?p2 - player) 
    (friends ?p1 - player ?p2 - player) 
    (knows_secret ?p - player ?sc - secret_society) 
    (is_cult ?sc - secret_society)
)

(:action gather_info
    :parameters (?p1 - player ?p2 - player ?sc - secret_society)
    :precondition (and (friends ?p1 ?p2))
    :effect (and 
        (has_info ?p1)
        (has_info ?p2))
)

(:action create_secret
    :parameters (?sc - secret_society)
    :precondition ()
    :effect (has_secret ?sc)
)

(:action set_meeting_location
    :parameters (?sc - secret_society)
    :precondition (has_secret ?sc)
    :effect (has_location ?sc)
)

(:action set_dress_code
    :parameters (?sc - secret_society)
    :precondition (has_location ?sc)
    :effect (has_dress_code ?sc)
)

(:action create_name
    :parameters (?p1 - player ?p2 - player ?sc - secret_society)
    :precondition (and (friends ?p1 ?p2) (is_trusted ?p1 ?sc))
    :effect (has_name ?sc)
)

(:action secret_society_is_ready
    :parameters (?sc - secret_society)
    :precondition (and (has_secret ?sc) (has_name ?sc) (has_location ?sc) (has_dress_code ?sc))
    :effect (society_is_ready ?sc)
)

(:action initiate_new_member
    :parameters (?p - player ?sc - secret_society)
    :precondition (and (society_is_ready ?sc) (not (in ?p ?sc)))
    :effect (and
        (in ?p ?sc)
        (not (knows_secret ?p ?sc)))
)

(:action teach_new_member_secret
    :parameters (?p - player ?sc - secret_society)
    :precondition (and (in ?p ?sc) (is_trusted ?p ?sc) (not (knows_secret ?p ?sc)))
    :effect (knows_secret ?p ?sc)
)

(:action remove_member
    :parameters (?p - player ?sc - secret_society)
    :precondition (and (in ?p ?sc) (knows_secret ?p ?sc))
    :effect (and
        (not (in ?p ?sc))
        (not (knows_secret ?p ?sc)))
)

(:action check_if_cult
    :parameters (?sc - secret_society)
    :precondition (society_is_ready ?sc)
    :effect (is_cult ?sc)
)

)