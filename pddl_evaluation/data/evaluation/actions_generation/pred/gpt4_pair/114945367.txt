(:action go
   :parameters (?p - player ?dir - direction ?loc1 - location ?loc2 - location)
   :precondition (and (at ?p ?loc1) (connected ?loc1 ?dir ?loc2) (not (blocked ?loc1 ?dir ?loc2)))
   :effect (and (at ?p ?loc2) (not (at ?p ?loc1)))
)

(:action get
   :parameters (?p - player ?item - item ?loc - location)
   :precondition (and (at ?p ?loc) (at ?item ?loc))
   :effect (and (inventory ?p ?item) (not (at ?item ?loc)))
)

(:action get_water
   :parameters (?p - player ?water - water ?loc - location)
   :precondition (and (at ?p ?loc) (has_water_source ?loc))
   :effect (inventory ?p ?water)
)

(:action strain_water
   :parameters (?p - player ?water - water ?cloth - cloth)
   :precondition (and (inventory ?p ?water) (inventory ?p ?cloth))
   :effect (strained ?water)
)

(:action boil_water
   :parameters (?p - player ?water - water ?fire - fire)
   :precondition (and (inventory ?p ?water) (has_fire ?p))
   :effect (treated ?water)
)

(:action purify_in_sunlight
   :parameters (?p - player ?water - water ?container - container)
   :precondition (and (inventory ?p ?water) (inventory ?p ?container))
   :effect (treated ?water)
)

(:action get_long_branch
   :parameters (?p - player ?branch - long_branch ?loc - location)
   :precondition (and (at ?p ?loc) (has_branches ?loc))
   :effect (inventory ?p ?branch)
)

(:action get_propped_branches
   :parameters (?p - player ?branches - propped_branches ?loc - location)
   :precondition (and (at ?p ?loc) (has_branches ?loc))
   :effect (inventory ?p ?branches)
)

(:action get_twigs_leaves
   :parameters (?p - player ?item - twigs_leaves ?loc - location)
   :precondition (and (at ?p ?loc) (has_twigs_leaves ?loc))
   :effect (inventory ?p ?item)
)

(:action build_shelter
   :parameters (?p - player ?branch - long_branch ?branches - propped_branches ?item - twigs_leaves)
   :precondition (and (inventory ?p ?branch) (inventory ?p ?branches) (inventory ?p ?item))
   :effect (has_shelter ?p)
)

(:action get_logs
   :parameters (?p - player ?logs - logs ?loc - location)
   :precondition (and (at ?p ?loc) (has_logs ?loc))
   :effect (inventory ?p ?logs)
)

(:action get_dry_materials
   :parameters (?p - player ?material - twigs_leaves ?loc - location)
   :precondition (and (at ?p ?loc) (has_twigs_leaves ?loc))
   :effect (inventory ?p ?material)
)

(:action build_teepee
   :parameters (?p - player ?logs - logs ?item - twigs_leaves)
   :precondition (and (inventory ?p ?logs) (inventory ?p ?item))
   :effect (inventory ?p - teepee)
)

(:action start_fire
   :parameters (?p - player ?teepee - teepee ?material - twigs_leaves)
   :precondition (and (inventory ?p ?teepee) (inventory ?p ?material))
   :effect (has_fire ?p)
)

)