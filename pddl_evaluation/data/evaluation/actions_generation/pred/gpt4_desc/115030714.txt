(:action go
    :parameters (?player - player ?dir - direction ?loc1 - location ?loc2 - location)
    :precondition (and
      (at ?player ?loc1)
      (connected ?loc1 ?dir ?loc2))
    :effect (and
      (not (at ?player ?loc1))
      (at ?player ?loc2)))

  (:action get
    :parameters (?player - player ?item - item ?loc - location)
    :precondition (and
      (at ?player ?loc)
      (at ?item ?loc))
    :effect (and
      (not (at ?item ?loc))
      (inventory ?player ?item)))

  (:action drop
    :parameters (?player - player ?item - item ?loc - location)
    :precondition (and
      (at ?player ?loc)
      (inventory ?player ?item))
    :effect (and
      (not (inventory ?player ?item))
      (at ?item ?loc)))

  (:action cook
    :parameters (?player - player ?sushi - sushi ?loc - location)
    :precondition (and
      (at ?player ?loc)
      (has_kitchen ?loc)
      (inventory ?player ?sushi))
    :effect (cooked ?sushi))

  (:action order_sushi
    :parameters (?player - player ?phone - phone ?sushi - sushi)
    :precondition (inventory ?player ?phone)
    :effect (inventory ?player ?sushi))

  (:action buy_sake
    :parameters (?player - player ?sake - drink ?money - money)
    :precondition (inventory ?player ?money)
    :effect (inventory ?player ?sake))

  (:action serve
    :parameters (?player - player ?tea - tea ?food - food)
    :precondition (and
      (inventory ?player ?tea)
      (inventory ?player ?food))
    :effect (served ?food ?tea))

  (:action brew
    :parameters (?player - player ?tea - tea)
    :precondition (inventory ?player ?tea)
    :effect (brewed ?tea))

  (:action get_beer
    :parameters (?player - player ?beer - drink ?loc - location)
    :precondition (and
      (at ?player ?loc)
      (has_fridge ?loc))
    :effect (inventory ?player ?beer))

  (:action open
    :parameters (?player - player ?drink - drink)
    :precondition (inventory ?player ?drink)
    :effect (opened ?drink))

  (:action hang_lantern
    :parameters (?player - player ?lamp - lantern)
    :precondition (inventory ?player ?lamp)
    :effect (hung ?lamp))

  (:action blow_balloon
    :parameters (?player - player ?balloon - balloon)
    :precondition (inventory ?player ?balloon)
    :effect (inflated ?balloon))

  (:action turn_on_tv
    :parameters (?player - player ?tv - item)
    :precondition (inventory ?player ?tv)
    :effect (on ?tv))

)