(:action go
    :parameters (?player - player ?dir - direction ?loc1 - location ?loc2 - location)
    :precondition (and (at ?player ?loc1) (connected ?loc1 ?dir ?loc2) (not (blocked ?loc1 ?dir ?loc2)))
    :effect (and (not (at ?player ?loc1)) (at ?player ?loc2)))

(:action get
    :parameters (?player - player ?item - item ?loc - location)
    :precondition (and (at ?player ?loc) (at ?item ?loc) (gettable ?item))
    :effect (and (not (at ?item ?loc)) (inventory ?player ?item)))
    
(:action drop
    :parameters (?player - player ?item - item ?loc - location)
    :precondition (and (at ?player ?loc) (inventory ?player ?item))
    :effect (and (not (inventory ?player ?item)) (at ?item ?loc)))

(:action get_water
    :parameters (?player - player ?loc - location)
    :precondition (and (at ?player ?loc) (has_water_source ?loc))
    :effect (inventory ?player water))

(:action boil_water
    :parameters (?player - player ?water - water)
    :precondition (and (inventory ?player ?water) (not (treated ?water)))
    :effect (treated ?water))

(:action collect_rain_water
    :parameters (?player - player)
    :precondition (at ?player ?location)
    :effect (inventory ?player water))

(:action loot_shelter
    :parameters (?player - player ?loc - location)
    :precondition (and (at ?player ?loc) (is_occupied ?loc))
    :effect (inventory ?player food))

(:action break_car_window
    :parameters (?player - player ?car - car)
    :precondition (and (at ?player ?car) (has_windows ?car))
    :effect (inventory ?player food))

(:action gofish
    :parameters (?player - player ?loc - location)
    :precondition (and (at ?player ?loc) (haslake ?loc) (inventory ?player fishingpole))
    :effect (inventory ?player fish))

(:action find_shelter
    :parameters (?player - player ?loc - location)
    :precondition (and (at ?player ?loc) (has_basement ?loc))
    :effect (in_shelter ?player))

(:action clean_wound
    :parameters (?player - player)
    :precondition (and (inventory ?player bandage) (is_injured ?player))
    :effect (not (is_injured ?player)))

(:action clean_others_wound
    :parameters (?player1 - player ?player2 - player)
    :precondition (and (inventory ?player1 bandage) (is_injured ?player2))
    :effect (not (is_injured ?player2)))

(:action barter_food_for_healing
    :parameters (?player1 - player ?player2 - player)
    :precondition (and (is_injured ?player1) (inventory ?player2 food))
    :effect (and (inventory ?player1 food) (not (is_injured ?player1))))

)