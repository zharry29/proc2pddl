(:action go
   :parameters (?player - player ?dir - direction ?loc1 - location ?loc2 - location)
   :precondition (and 
                     (at ?player ?loc1)
                     (connected ?loc1 ?dir ?loc2)
                     (not (blocked ?loc1 ?dir ?loc2))
                )
   :effect (and 
                (not (at ?player ?loc1))
                (at ?player ?loc2)
           )
)


(:action get
    :parameters (?player - player ?item - item ?loc - location)
    :precondition (and
                       (at ?player ?loc)
                       (at ?item ?loc)
                       (gettable ?item)
                  )
    :effect (and
                 (not (at ?item ?loc))
                 (inventory ?player ?item)
            )
)


(:action drop
    :parameters (?player - player ?item - item ?loc - location)
    :precondition (and
                       (at ?player ?loc)
                       (inventory ?player ?item)
                  )
    :effect (and
                 (not (inventory ?player ?item))
                 (at ?item ?loc)
            )
)


(:action get_water
   :parameters (?player - player ?loc - location ?water - water)
   :precondition (and
                      (at ?player ?loc)
                      (has_water_source ?loc)
                 )
   :effect (inventory ?player ?water)
)


(:action boil_water
    :parameters (?player - player ?water - water ?pot - pot)
    :precondition (and
                       (inventory ?player ?water)
                       (not (treated ?water))
                       (inventory ?player ?pot)
                  )
    :effect (treated ?water)
)


(:action collect_rain_water
   :parameters (?player - player ?loc - location ?water - water)
   :precondition (and
                      (at ?player ?loc)
                      (outdoors ?loc)
                 )
   :effect (inventory ?player ?water)
)


(:action loot_shelter
    :parameters (?player - player ?loc - location)
    :precondition (and
                       (at ?player ?loc)
                       (not (is_occupied ?loc))
                  )
    :effect (forall (?item - item)
                    (when (at ?item ?loc) (inventory ?player ?item)))
)


(:action gofish
    :parameters (?player - player ?loc - location ?fish - fish ?pole - fishingpole)
    :precondition (and
                       (at ?player ?loc)
                       (haslake ?loc)
                       (inventory ?player ?pole)
                  )
    :effect (inventory ?player ?fish)
)


(:action find_shelter
    :parameters (?player - player ?loc - location)
    :precondition (and
                       (at ?player ?loc)
                       (has_basement ?loc)
                  )
    :effect (in_shelter ?player)
)


(:action clean_wound
    :parameters (?player - player ?water - water)
    :precondition (and
                       (is_injured ?player)
                       (treated ?water)
                       (inventory ?player ?water)
                  )
    :effect (not (is_injured ?player))
)

)