(:action go
    :parameters (?player - player ?dir - direction ?loc1 - location ?loc2 - location)
    :precondition (and
        (at ?player ?loc1)
        (connected ?loc1 ?dir ?loc2))
    :effect (and
        (not (at ?player ?loc1))
        (at ?player ?loc2)))

(:action get
    :parameters (?player - player ?item - item ?loc - location)
    :precondition (and
        (at ?player ?loc)
        (at ?item ?loc))
    :effect (and
        (not (at ?item ?loc))
        (inventory ?player ?item)))

(:action drop
    :parameters (?player - player ?item - item ?loc - location)
    :precondition (and
        (at ?player ?loc)
        (inventory ?player ?item))
    :effect (and
        (not (inventory ?player ?item))
        (at ?item ?loc)))

(:action cook
    :parameters (?player - player ?food - food ?loc - location)
    :precondition (and
        (at ?player ?loc)
        (has_kitchen ?loc))
    :effect (prepared ?food))

(:action order_sushi
    :parameters (?player - player)
    :precondition (at ?player ?loc)
    :effect (prepared ?sushi - food))

(:action buy_sake
    :parameters (?player - player)
    :precondition (at ?player ?loc)
    :effect (inventory ?player ?sake - drink))

(:action serve
    :parameters (?player - player ?item - item ?loc - location)
    :precondition (and
        (at ?player ?loc)
        (prepared ?item)
        (inventory ?player ?item))
    :effect (served ?item))

(:action brew
    :parameters (?player - player ?drink - drink ?loc - location)
    :precondition (and
        (at ?player ?loc)
        (has_fridge ?loc))
    :effect (prepared ?drink))



(:action open
    :parameters (?player - player ?drink - drink)
    :precondition (and
        (inventory ?player ?drink)
        (not (opened ?drink)))
    :effect (opened ?drink))

(:action hang_lantern
    :parameters (?player - player ?lamp - item ?loc - location)
    :precondition (and
        (at ?player ?loc)
        (inventory ?player ?lamp))
    :effect (hung ?lamp))

(:action blow_balloon
    :parameters (?player - player ?balloon - item)
     :precondition (inventory ?player ?balloon)
     :effect (inflated ?balloon))

(:action turn_on_tv
    :parameters (?player - player ?tv - item ?loc - location)
    :precondition (and
        (at ?player ?loc)
        (not (on ?tv))
        (at ?tv ?loc))
    :effect (on ?tv))

)