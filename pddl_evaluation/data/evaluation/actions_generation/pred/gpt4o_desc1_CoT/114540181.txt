(:action go
  :parameters (?p - player ?loc1 - location ?loc2 - location ?dir - direction)
  :precondition (and (at ?p ?loc1) (connected ?loc1 ?dir ?loc2) (not (blocked ?loc1 ?dir ?loc2)))
  :effect (and (at ?p ?loc2) (not (at ?p ?loc1)))
)

(:action get
  :parameters (?p - player ?item - item ?loc - location)
  :precondition (and (at ?p ?loc) (at ?item ?loc))
  :effect (and (inventory ?p ?item) (not (at ?item ?loc)))
)

(:action get_bamboo_container
  :parameters (?p - player ?container - bamboo_container ?loc - location)
  :precondition (and (at ?p ?loc) (has_bamboo ?loc))
  :effect (inventory ?p ?container)
)

(:action collect_rain_water
  :parameters (?p - player ?water - water ?container - bamboo_container ?loc - location)
  :precondition (and (at ?p ?loc) (has_rainfall ?loc) (inventory ?p ?container))
  :effect (inventory ?p ?water)
)

(:action create_fire
  :parameters (?p - player ?stone - stone ?wood - wood ?loc - location ?fire - fire)
  :precondition (and (at ?p ?loc) (inventory ?p ?stone) (inventory ?p ?wood))
  :effect (and (at ?fire ?loc) (not (inventory ?p ?stone)) (not (inventory ?p ?wood)))
)

(:action treat_water
  :parameters (?p - player ?water - water ?loc - location ?fire - fire)
  :precondition (and (at ?p ?loc) (inventory ?p ?water) (at fire ?loc) (not (treated ?water)))
  :effect (treated ?water)
)

(:action drink_water
  :parameters (?p - player ?water - water)
  :precondition (and (is dehydrated ?p) (inventory ?p ?water) (treated ?water))
  :effect (and (not (is dehydrated ?p)) (not (inventory ?p ?water)))
)

(:action drink_untreated_water
  :parameters (?p - player ?water - water)
  :precondition (and (is dehydrated ?p) (inventory ?p ?water) (not (treated ?water)))
  :effect (and (not (is dehydrated ?p)) (not (inventory ?p ?water)) (is ill ?p))
)

(:action create_sos_sign
  :parameters (?p - player ?stone - stone ?loc - location ?sos_sign - sos_sign)
  :precondition (and (at ?p ?loc) (inventory ?p ?stone))
  :effect (and (at ?sos_sign ?loc) (not (inventory ?p ?stone)))
)

(:action pick_fruit
  :parameters (?p - player ?fruit - fruit ?loc - location)
  :precondition (and (at ?p ?loc) (has_fruit ?loc))
  :effect (and (inventory ?p ?fruit) (not (has_fruit ?loc)))
)

(:action eat_fruit
  :parameters (?p - player ?fruit - fruit)
  :precondition (and (is hungry ?p) (inventory ?p ?fruit))
  :effect (and (not (is hungry ?p)) (not (inventory ?p ?fruit)))
)

(:action escape
  :parameters (?p - player)
  :precondition (at ?p basecamp)
  :effect ()
)

)