(:action go
    :parameters (?player - player ?loc1 - location ?dir - direction ?loc2 - location)
    :precondition (and (at ?player ?loc1) 
                       (connected ?loc1 ?dir ?loc2) 
                       (not (blocked ?loc1 ?dir ?loc2)))
    :effect (and (not (at ?player ?loc1))
                 (at ?player ?loc2)))

(:action understand
    :parameters (?player - player ?concept - concept)
    :precondition ()
    :effect (know ?player ?concept))

(:action learn
    :parameters (?player - player ?skill - skill)
    :precondition ()
    :effect (learned ?player ?skill))

(:action get
    :parameters (?player - player ?item - item ?loc - location)
    :precondition (and (at ?item ?loc)
                       (at ?player ?loc))
    :effect (and (inventory ?player ?item)
                 (not (at ?item ?loc))))

(:action machine_secured
    :parameters (?player - player)
    :precondition ()
    :effect (authorized ?player))

(:action enumeration
    :parameters (?player - player)
    :precondition ()
    :effect (collected_all_info ?player))

(:action got_all_info
    :parameters (?player - player)
    :precondition (collected_all_info ?player)
    :effect (authorized ?player))

(:action ping
    :parameters (?player - player ?object - object)
    :precondition (and (ip_connected_to_object ?object))
    :effect (ping_succeed ?player))

(:action reached_the_remote_system
    :parameters (?player - player ?object - object)
    :precondition () 
    :effect (connection_reach ?player ?object))

(:action run_port_scan
    :parameters (?player - player ?object - object)
    :precondition (and (inventory ?player network_scanner))
    :effect (port_scanned ?player))

(:action found_path_in_system
    :parameters (?player - player)
    :precondition (port_scanned ?player)
    :effect (authorized ?player))

(:action contact_and_trick_a_user
    :parameters (?player - player)
    :precondition ()
    :effect (tricked_user_password ?player))

(:action crack_password_by_social_engineering
    :parameters (?player - player)
    :precondition (tricked_user_password ?player)
    :effect (password_cracked ?player))

(:action send_fake_email
    :parameters (?player - player)
    :precondition ()
    :effect (user_trusted_fake_email ?player))

(:action crack_password_by_phishing
    :parameters (?player - player)
    :precondition (user_trusted_fake_email ?player)
    :effect (password_cracked ?player))

(:action create_fake_wifi_access
    :parameters (?player ?p - player)
    :precondition ()
    :effect (people_use_unencrypted_connection ?player))

(:action crack_password_by_arp_spoofing
    :parameters (?player ?p - player)
    :precondition (people_use_unencrypted_connection ?player)
    :effect (password_cracked ?player))

(:action crack_password_by_brute_force
    :parameters (?player - player)
    :precondition ()
    :effect (password_cracked ?player))

(:action gain_access_with_password
    :parameters (?player - player)
    :precondition (password_cracked ?player)
    :effect (authorized ?player))

(:action create_buffer_overflow
    :parameters (?player - player)
    :precondition ()
    :effect (memory_layout ?player))

(:action take_control_of_system
    :parameters (?player - player)
    :precondition ()
    :effect (authorized ?player))

(:action install_malware
    :parameters (?player - player)
    :precondition (authorized ?player)
    :effect (malware_installed ?player))

(:action bypass_standard_authentication_system
    :parameters (?player - player)
    :precondition ()
    :effect (authorized ?player))

(:action not_let_administrator_know
    :parameters (?player - player)
    :precondition ()
    :effect (not (administrator_know_compromised ?player)))

(:action make_no_change_to_website
    :parameters (?player - player)
    :precondition ()
    :effect (website_unchanged ?player))

(:action create_fewest_file
    :parameters (?player - player)
    :precondition ()
    :effect (not (create_more_file_than_need ?player)))

(:action delete_additional_users
    :parameters (?player - player)
    :precondition (additional_users ?player)
    :effect (not (additional_users ?player)))

(:action hardcode_password
    :parameters (?player - player)
    :precondition ()
    :effect (hardcoded_secret_password ?player))

(:action track_covered
    :parameters (?player - player)
    :precondition ()
    :effect (track_covered ?player))

(:action learn_concepts
    :parameters (?player - player)
    :precondition ()
    :effect (know_hacking ?player))

(:action learn_internet
    :parameters (?player - player)
    :precondition ()
    :effect (know_internet ?player))

(:action learn_programming
    :parameters (?player - player)
    :precondition ()
    :effect (know_programming ?player))

(:action learn_unix
    :parameters (?player - player)
    :precondition ()
    :effect (know_unix ?player))

(:action become_skilled
    :parameters (?player - player)
    :precondition (and (know_hacking ?player) 
                        (know_internet ?player)
                        (know_programming ?player)
                        (know_unix ?player))
    :effect (is_root_user ?player))

)