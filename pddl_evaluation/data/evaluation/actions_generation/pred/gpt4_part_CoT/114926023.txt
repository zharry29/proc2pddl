(:action go
 :parameters (?player - player ?loc1 - location ?loc2 - location ?dir - direction)
 :precondition (and (at ?player ?loc1) (connected ?loc1 ?dir ?loc2))
 :effect (and (not (at ?player ?loc1)) (at ?player ?loc2)))

(:action get
 :parameters (?player - player ?item - item ?loc - location)
 :precondition (and (at ?player ?loc) (at ?item ?loc))
 :effect (and (not (at ?item ?loc)) (inventory ?player ?item)))

(:action build_roof
 :parameters (?player - player ?log - log)
 :precondition (inventory ?player ?log)
 :effect (and (not (inventory ?player ?log)) (built ?roof - roof)))

(:action build_wall
 :parameters (?player - player ?sticks - small_sticks)
 :precondition (inventory ?player ?sticks)
 :effect (and (not (inventory ?player ?sticks)) (built ?wall - wall)))

(:action build_bed
 :parameters (?player - player ?leaves - leaves)
 :precondition (inventory ?player ?leaves)
 :effect (and (not (inventory ?player ?leaves)) (built ?bed - bed)))

(:action complete_shelter
 :parameters (?roof - roof ?wall - wall ?bed - bed)
 :precondition (and (built ?roof) (built ?wall) (built ?bed))
 :effect (built ?shelter - shelter))

(:action hunt_animal
 :parameters (?player - player ?stone - sharp_stone ?animal - animal)
 :precondition (inventory ?player ?stone)
 :effect (captured ?animal))

(:action prepare_animal
 :parameters (?animal - animal)
 :precondition (captured ?animal)
 :effect (treated ?animal))

(:action build_raft
 :parameters (?player - player ?log - log ?vines - vines)
 :precondition (and (inventory ?player ?log) (inventory ?player ?vines))
 :effect (and (not (inventory ?player ?log)) (not (inventory ?player ?vines)) (inventory ?player ?raft_draft - raft_draft)))

(:action test_raft
 :parameters (?player - player ?raft_draft - raft_draft)
 :precondition (inventory ?player ?raft_draft)
 :effect (and (not (inventory ?player ?raft_draft)) (inventory ?player ?raft_finished - raft_finished)))

)