(:action go
  :parameters (?player - player ?loc1 - location ?loc2 - location ?dir - direction)
  :precondition (and (at ?player ?loc1) (connected ?loc1 ?dir ?loc2))
  :effect (and (not (at ?player ?loc1)) (at ?player ?loc2)))

(:action get
  :parameters (?player - player ?item - item ?loc - location)
  :precondition (and (at ?player ?loc) (at ?item ?loc))
  :effect (and (not (at ?item ?loc)) (inventory ?player ?item)))

(:action drop
  :parameters (?player - player ?item - item ?loc - location)
  :precondition (and (inventory ?player ?item) (at ?player ?loc))
  :effect (and (not (inventory ?player ?item)) (at ?item ?loc)))

(:action cook
  :parameters (?player - player ?raw_food - food ?cooked_food - food ?loc - location)
  :precondition (and (inventory ?player ?raw_food) (at ?player ?loc) (has_kitchen ?loc))
  :effect (and (not (inventory ?player ?raw_food)) (inventory ?player ?cooked_food)))

(:action order_sushi
  :parameters (?player - player ?phone - phone ?money - money ?sushi - sushi)
  :precondition (and (inventory ?player ?phone) (inventory ?player ?money))
  :effect (and (not (inventory ?player ?money)) (inventory ?player ?sushi)))

(:action buy_sake
  :parameters (?player - player ?money - money ?sake - drink)
  :precondition (inventory ?player ?money)
  :effect (and (not (inventory ?player ?money)) (inventory ?player ?sake)))

(:action serve
  :parameters (?player - player ?item - item)
  :precondition (inventory ?player ?item)
  :effect (not (inventory ?player ?item)))

(:action brew
  :parameters (?player - player ?raw_tea - tea ?brewed_tea - tea ?loc - location)
  :precondition (and (inventory ?player ?raw_tea) (at ?player ?loc) (has_kitchen ?loc))
  :effect (and (not (inventory ?player ?raw_tea)) (inventory ?player ?brewed_tea)))

(:action get_beer
  :parameters (?player - player ?beer - drink ?loc - location)
  :precondition (and (at ?player ?loc) (has_fridge ?loc))
  :effect (inventory ?player ?beer))

(:action open
  :parameters (?player - player ?drink - drink)
  :precondition (inventory ?player ?drink)
  :effect (opened ?drink))

(:action hang_lantern
  :parameters (?player - player ?lantern - lantern)
  :precondition (inventory ?player ?lantern)
  :effect (hung ?lantern))

(:action blow_balloon
  :parameters (?player - player ?balloon - balloon)
  :precondition (inventory ?player ?balloon)
  :effect (inflated ?balloon))

(:action turn_on_tv
  :parameters (?player - player ?tv - item ?loc - location)
  :precondition (and (at ?player ?loc) (at ?tv ?loc))
  :effect (on ?tv))

)