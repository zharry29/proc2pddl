(:action go
    :parameters (?p - player ?dir - direction ?loc1 - location ?loc2 - location)
    :precondition (and (at ?p ?loc1) (connected ?loc1 ?dir ?loc2) (not (blocked ?loc1 ?dir ?loc2)))
    :effect (and (at ?p ?loc2) (not (at ?p ?loc1))))

(:action get
    :parameters (?p - player ?item - item ?loc - location)
    :precondition (and (at ?p ?loc) (at ?item ?loc))
    :effect (and (inventory ?p ?item) (not (at ?item ?loc))))

(:action breathe
    :parameters (?p - player)
    :precondition (and (calm ?p))
    :effect (not (tired ?p)))

(:action liedown
    :parameters (?p - player)
    :precondition (and (tired ?p))
    :effect (laying ?p))

(:action swim
    :parameters (?p - player ?loc1 - location ?loc2 - location)
    :precondition (and (at ?p ?loc1) (connected ?loc1 - location ?loc2 - location))
    :effect (and (at ?p ?loc2) (not (at ?p ?loc1))))

(:action usestick
    :parameters (?p - player ?stick - stick ?q - quicksand)
    :precondition (and (stuck ?p ?q) (inventory ?p ?stick))
    :effect (and (not (stuck ?p ?q)) (tired ?p)))

(:action rest
    :parameters (?p - player)
    :precondition (and (laying ?p))
    :effect (and (not (tired ?p)) (calm ?p)))

(:action drop
    :parameters (?p - player ?item - item ?loc - location)
    :precondition (and (inventory ?p ?item) (at ?p ?loc))
    :effect (and (not (inventory ?p ?item)) (at ?item ?loc)))

(:action check_ripples
    :parameters (?p - player ?l - location)
    :precondition (and (at ?p ?l) (has_ripples ?l))
    :effect (aware ?p ?l))

(:action test_ground
    :parameters (?p - player ?l - location)
    :precondition (and (at ?p ?l))
    :effect (has_quicksand ?l))

(:action research
    :parameters ()
    :precondition ()
    :effect ())

(:action move_horizontally
    :parameters (?p - player ?dir - direction ?loc1 - location ?loc2 - location)
    :precondition (and (at ?p ?loc1) (connected ?loc1 ?dir ?loc2) (not (blocked ?loc1 ?dir ?loc2)))
    :effect (and (at ?p ?loc2) (not (at ?p ?loc1))))

)