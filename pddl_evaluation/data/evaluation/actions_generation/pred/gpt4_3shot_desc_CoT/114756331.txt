(:action go
  :parameters (?p - player ?dir - direction ?loc1 - location ?loc2 - location)
  :precondition (and (at ?p ?loc1) (connected ?loc1 ?dir ?loc2) (not (blocked ?loc1 ?dir ?loc2)))
  :effect (and (not (at ?p ?loc1)) (at ?p ?loc2))
)

(:action breathe
  :parameters (?p - player ?q - quicksand)
  :precondition (and (stuck ?p ?q) (calm ?p))
  :effect (calm ?p)
)

(:action liedown
  :parameters (?p - player)
  :effect (laying ?p)
)

(:action swim
  :parameters (?p - player ?q - quicksand)
  :precondition (and (stuck ?p ?q) (not (tired ?p)))
  :effect (not (stuck ?p ?q))
)

(:action get
  :parameters (?p - player ?i - item ?l - location)
  :precondition (and (at ?p ?l) (at ?i ?l))
  :effect (and (not (at ?i ?l)) (inventory ?p ?i))
)

(:action usestick
  :parameters (?p - player ?s - stick ?q - quicksand)
  :precondition (and (stuck ?p ?q) (inventory ?p ?s))
  :effect (not (stuck ?p ?q))
)

(:action rest
  :parameters (?p - player)
  :precondition (tired ?p)
  :effect (not (tired ?p))
)

(:action check_ripples
  :parameters (?p - player ?l - location)
  :precondition (has_ripples ?l)
  :effect (aware ?p ?l)
)

(:action drop
  :parameters (?p - player ?i - item ?l - location)
  :precondition (and (at ?p ?l) (inventory ?p ?i))
  :effect (and (not (inventory ?p ?i)) (at ?i ?l))
)

(:action test_ground
  :parameters (?p - player ?l - location ?q - quicksand)
  :precondition (at ?p ?l)
  :effect (when (has_quicksand ?l) (aware ?p ?l))
)

(:action move_horizontally
  :parameters (?p - player)
  :precondition (laying ?p)
  :effect (not (laying ?p))
)

)